{"version":3,"sources":["webpack:///webpack/bootstrap 37bbe2dec8ad6b67cb0e","webpack:///./lib/tprime.js","webpack:///./lib/world1.js","webpack:///./matter.js","webpack:///./lib/world2.js","webpack:///./lib/world3.js"],"names":["World1","require","World2","World3","document","addEventListener","world1","getElementById","world2","world3","gravityButton","console","log","onclick","currentCanvas","querySelector","remove","Matter","Engine","Render","Runner","World","Mouse","Events","Constraint","MouseConstraint","Composites","Common","Bodies","Body","engine","create","world","render","element","body","options","height","window","innerHeight","width","innerWidth","wireframes","showAngleIndicator","background","rectangle","isStatic","sprite","texture","xScale","yScale","collisionFilter","group","add","ground","rockOptions","density","frictionAir","rock","polygon","anchor","x","y","elastic","pointA","bodyB","stiffness","ground2","chamfer","radius","pyramid","friction","on","mouseConstraint","mouse","button","position","runner","run","canvas","constraint","visible","cradle","newtonsCradle","translate","bodies","gravity","module","exports","f","define","g","global","self","e","t","n","r","s","o","u","a","i","Error","code","l","call","length","Vertices","Vector","Sleeping","Bounds","Axes","_inertiaScale","_nextCollidingGroupId","_nextNonCollidingGroupId","_nextCategory","defaults","id","nextId","type","label","parts","angle","vertices","fromPath","force","torque","positionImpulse","constraintImpulse","totalContacts","speed","angularSpeed","velocity","angularVelocity","isSensor","isSleeping","motion","sleepThreshold","restitution","frictionStatic","category","mask","slop","timeScale","opacity","xOffset","yOffset","lineWidth","extend","_initProperties","nextGroup","isNonColliding","nextCategory","set","bounds","positionPrev","clone","anglePrev","parent","rotate","axes","update","area","mass","inertia","defaultFillStyle","choose","defaultStrokeStyle","shadeColor","fillStyle","strokeStyle","min","max","settings","value","property","hasOwnProperty","setStatic","setMass","setDensity","setInertia","setVertices","setPosition","setAngle","setVelocity","setAngularVelocity","setParts","part","Infinity","inverseMass","inverseInertia","fromVertices","centre","autoHull","slice","push","concat","clockwiseSort","hull","hullCentre","total","_totalProperties","delta","sub","rotateAbout","magnitude","Math","abs","translation","rotation","scale","scaleX","scaleY","point","circleRadius","deltaTime","correction","deltaTimeSquared","pow","velocityPrevX","velocityPrevY","applyForce","offset","properties","mult","div","Composite","isModified","constraints","composites","setModified","composite","updateParents","updateChildren","childComposite","object","objects","trigger","obj","addBody","addConstraint","addComposite","deep","removeBody","removeConstraint","removeComposite","compositeA","compositeB","indexOf","removeCompositeAt","splice","removeBodyAt","removeConstraintAt","clear","keepStatic","filter","allBodies","allConstraints","allComposites","get","toString","move","rebase","recursive","cos","sin","dx","dy","Contact","vertex","normalImpulse","tangentImpulse","index","Detector","SAT","Pair","collisions","broadphasePairs","pairsTable","pairs","table","bodyA","canCollide","overlaps","j","partA","k","partB","pairId","pair","previousCollision","isActive","collision","collides","collided","filterA","filterB","Grid","controller","detector","buckets","pairsList","bucketWidth","bucketHeight","grid","forceUpdate","col","row","bucket","bucketId","gridChanged","newRegion","_getRegion","region","union","_regionUnion","startCol","endCol","startRow","endRow","_getBucketId","isInsideNewRegion","isInsideOldRegion","_bucketRemoveBody","_createBucket","_bucketAddBody","_createActivePairsList","regionA","regionB","_createRegion","floor","column","pairKeys","keys","timestamp","parentA","parentB","contacts","activeContacts","separation","timeCreated","timeUpdated","supports","support","contactId","contact","depth","setActive","Pairs","_pairMaxIdleLife","list","collisionStart","collisionActive","collisionEnd","activePairIds","removeOld","indexesToRemove","pairIndex","Query","ray","startPoint","endPoint","rayWidth","rayAngle","rayLength","rayX","rayY","outside","result","contains","Resolver","_restingThresh","_restingThreshTangent","_positionDampen","_positionWarming","_frictionNormalMultiplier","preSolvePosition","activeCount","solvePosition","normal","bodyBtoA","contactShare","contactCount","tempA","_temp","tempB","tempC","tempD","penetration","dot","postSolvePosition","preSolveVelocity","tangent","contactVertex","impulse","cross","solveVelocity","timeScaleSquared","tempE","offsetA","offsetB","velocityPointA","perp","velocityPointB","relativeVelocity","normalVelocity","tangentVelocity","tangentSpeed","tangentVelocityDirection","sign","normalForce","clamp","maxFriction","oAcN","oBcN","share","contactNormalImpulse","contactTangentImpulse","overlapAB","overlapBA","minOverlap","prevCol","canReusePrevCol","axisBodyA","axisBody","axisBodyB","axisNumber","_overlapAxes","reused","overlap","axis","neg","verticesB","_findSupports","verticesA","projectionA","projectionB","Number","MAX_VALUE","_projectToAxis","projection","nearestDistance","vertexToBody","bodyAPosition","distance","vertexA","vertexB","prevIndex","nextIndex","_minLength","_minDifference","pointB","initialPointA","initialPointB","angularStiffness","angleA","angleB","solveAll","solve","pointAWorld","pointBWorld","currentLength","difference","oAn","oBn","bodyADenom","bodyBDenom","postSolveAll","_triggerEvents","mouseEvents","sourceEvents","mousemove","mousedown","mouseup","clearSourceEvents","_nextId","_seed","argsStart","args","deepClone","Array","prototype","arguments","source","prop","constructor","Object","key","values","color","percent","colorInteger","parseInt","amount","round","R","B","G","shuffle","array","random","temp","choices","isElement","HTMLElement","nodeType","style","ownerDocument","isArray","now","performance","webkitNow","msNow","oNow","mozNow","Date","_seededRandom","colorToNumber","colorString","replace","charAt","message","warn","haystack","needle","Metrics","positionIterations","velocityIterations","constraintIterations","enableSleeping","events","timing","broadphase","renderDefaults","metrics","extended","event","_bodiesApplyGravity","_bodiesUpdate","afterCollisions","_bodiesClearForces","merge","engineA","engineB","gravityScale","worldBounds","eventNames","callback","names","split","name","off","join","callbacks","newCallbacks","eventClone","apply","absolute","mousedownPosition","mouseupPosition","wheelDelta","pixelRatio","getAttribute","mousewheel","_getRelativeMousePosition","touches","changedTouches","preventDefault","detail","setElement","setOffset","setScale","elementBounds","getBoundingClientRect","rootNode","documentElement","parentNode","scrollX","pageXOffset","undefined","scrollLeft","scrollY","pageYOffset","scrollTop","pageX","left","pageY","top","clientWidth","clientHeight","_requestAnimationFrame","_cancelAnimationFrame","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","msRequestAnimationFrame","setTimeout","cancelAnimationFrame","mozCancelAnimationFrame","webkitCancelAnimationFrame","msCancelAnimationFrame","fps","deltaSampleSize","counterTimestamp","frameCounter","deltaHistory","timePrev","timeScalePrev","frameRequestId","isFixed","enabled","deltaMin","deltaMax","time","tick","stop","start","_motionWakeThreshold","_motionSleepThreshold","_minBias","timeFactor","minMotion","maxMotion","sleepCounter","sleepingBody","movingBody","wasSleeping","quality","qualityMin","qualityMax","trapezoid","slope","roof","x1","x2","x3","verticesPath","circle","maxSides","sides","ceil","theta","PI","path","xx","yy","toFixed","vertexSets","flagInternal","removeCollinear","minimumArea","isConvex","v","z","decomp","concave","Polygon","makeCCW","removeCollinearPoints","decomposed","quickDecomp","chunk","chunkVertices","coincident_max_dist","pav","pbv","da","magnitudeSquared","db","isInternal","stack","columns","rows","columnGap","rowGap","lastBody","maxHeight","bodyHeight","bodyWidth","chain","xOffsetA","yOffsetA","xOffsetB","yOffsetB","bodyAHeight","bodyAWidth","bodyBHeight","bodyBWidth","mesh","crossBrace","bodyC","actualRows","lastBodyWidth","end","number","size","car","wheelSize","wheelBase","wheelAOffset","wheelBOffset","wheelYOffset","wheelA","wheelB","axelA","axelB","softBody","particleRadius","particleOptions","constraintOptions","normalise","gradient","boundsA","boundsB","vector","shift","deltaX","deltaY","Svg","pathToVertices","sampleLength","il","segment","segments","segmentsQueue","lastSegment","lastPoint","segmentIndex","points","lx","ly","addPoint","px","py","pathSegType","isRelative","addSegmentPoint","segType","pathSegTypeAsLetter","toUpperCase","_svgPathToAbsolute","getTotalLength","pathSegList","numberOfItems","getItem","getPathSegAtLength","getPointAtLength","x0","y0","y1","y2","segs","len","seg","test","replaceItem","createSVGPathSegMovetoAbs","createSVGPathSegLinetoAbs","createSVGPathSegLinetoHorizontalAbs","createSVGPathSegLinetoVerticalAbs","createSVGPathSegCurvetoCubicAbs","createSVGPathSegCurvetoCubicSmoothAbs","createSVGPathSegCurvetoQuadraticAbs","createSVGPathSegCurvetoQuadraticSmoothAbs","createSVGPathSegArcAbs","r1","r2","largeArcFlag","sweepFlag","sqrt","output","vectorA","vectorB","cross3","vectorC","scalar","negate","atan2","pathPattern","match","parseFloat","mean","average","signed","numerator","denominator","vertice","nextVertice","newVertices","prevVertex","nextVertex","currentRadius","prevNormal","nextNormal","diagonalRadius","radiusVector","midNormal","scaledVertex","precision","alpha","acos","sort","flag","upper","lower","pop","version","RenderPixi","wireframeBackground","hasBounds","showSleeping","showDebug","showBroadphase","showBounds","showVelocity","showCollisions","showSeparations","showAxes","showPositions","showIds","showShadows","showVertexNumbers","showConvexHulls","showInternalEdges","showMousePosition","_createCanvas","context","getContext","textures","setPixelRatio","appendChild","loop","_getPixelRatio","setAttribute","currentBackground","_applyBackground","globalCompositeOperation","fillRect","boundsWidth","boundsHeight","boundsScaleX","boundsScaleY","bodyConvexHulls","bodyWireframes","bodyBounds","bodyAxes","bodyPositions","bodyVelocity","bodyIds","separations","vertexNumbers","mousePosition","debug","setTransform","c","space","debugTimestamp","text","debugString","font","fillText","beginPath","moveTo","lineTo","stroke","bodyShadows","arc","closePath","distanceX","distanceY","shadowColor","shadowOffsetX","shadowOffsetY","shadowBlur","fill","globalAlpha","_getTexture","drawImage","rect","corrected","normalPosX","normalPosY","bucketKeys","inspector","selected","item","data","setLineDash","selectStart","selectBounds","createElement","oncontextmenu","onselectstart","devicePixelRatio","backingStorePixelRatio","webkitBackingStorePixelRatio","mozBackingStorePixelRatio","msBackingStorePixelRatio","oBackingStorePixelRatio","imagePath","image","Image","src","cssBackground","backgroundSize","renderer","container","spriteContainer","pixiOptions","transparent","view","antialias","backgroundColor","PIXI","WebGLRenderer","Container","sprites","primitives","addChild","children","removeChild","bgSprite","addChildAt","setBackground","isColor","Sprite","constraintRender","primitiveId","primitive","Graphics","beginFill","lineStyle","endFill","bodyRender","spriteId","_createBodySprite","_createBodyPrimitive","initialAngle","texturePath","strokeStyleIndicator","strokeStyleWireframe","strokeStyleWireframeIndicator","Texture","fromImage","rainOptions","rainOptions2","interval","raindrop","makeItRain","setInterval","rain","makeItRain2","rain2","makeItRain3","plantOptions2","plant2","pendulum","softBody1","softBody2","softBody3","softBody4"],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 37bbe2dec8ad6b67cb0e","const World1 = require(\"./world1.js\");\nconst World2 = require(\"./world2.js\");\nconst World3 = require(\"./world3.js\");\n\ndocument.addEventListener(\"DOMContentLoaded\", ()=>{\n  const world1 = document.getElementById(\"world1\");\n  const world2 = document.getElementById(\"world2\");\n  const world3 = document.getElementById(\"world3\");\n  const gravityButton = document.getElementById(\"gravity-button\");\n  console.log(gravityButton);\n  world1.onclick = function() {\n    let currentCanvas = document.querySelector(\"canvas\");\n    if(currentCanvas){\n      currentCanvas.remove();\n    }\n    new World1();\n  };\n\n  world2.onclick = function(){\n    let currentCanvas = document.querySelector(\"canvas\");\n    if(currentCanvas){\n      currentCanvas.remove();\n    }\n    new World2();\n  };\n\n  world3.onclick = function(){\n    let currentCanvas = document.querySelector(\"canvas\");\n    if(currentCanvas){\n      currentCanvas.remove();\n    }\n    new World3();\n  };\n\n  // gravityButton.onclick = function(){\n  //   let\n  // };\n\n});\n\n\n\n// WEBPACK FOOTER //\n// ./lib/tprime.js","const Matter = require(\"../matter\");\n\n//Normal gravity planet\n//pendulums\n//soft bodies\n//bridge\n\n//Visuals:\n  // background: https://static.pexels.com/photos/531360/pexels-photo-531360.jpeg\n  // objects:\n      //rain:https://pixabay.com/en/drop-raindrop-water-tear-teardrop-159527/\n      //chains:\n      //slingshot\n      //boxes\n\nconst World1 = function(){\n\n\n   const Engine = Matter.Engine,\n      Render = Matter.Render,\n      Runner = Matter.Runner,\n      World = Matter.World,\n      Mouse = Matter.Mouse,\n      Events = Matter.Events,\n      Constraint = Matter.Constraint,\n      MouseConstraint = Matter.MouseConstraint,\n      Composites = Matter.Composites,\n      Common = Matter.Common,\n      Bodies = Matter.Bodies,\n      Body = Matter.Body;\n\n    const engine = Engine.create(), world = engine.world;\n\n    const render = Render.create({\n        element: document.body,\n        engine: engine,\n        options: {\n          height: window.innerHeight*0.8,\n          width: window.innerWidth*0.8,\n          wireframes: true,\n          showAngleIndicator: false\n        }\n    });\n    console.log(MouseConstraint);\n\n    window.addEventListener(\"resize\", function(){\n      render.options.height = window.innerHeight*0.8;\n      render.options.width = window.innerWidth*0.8;\n    });\n\n    let background = Bodies.rectangle(0,0, 1, 1, {\n      isStatic: true,\n      render: {\n        sprite:{\n          texture: \"https://static.pexels.com/photos/531360/pexels-photo-531360.jpeg\",\n          xScale:0.5,\n          yScale: 0.5\n        }\n      },\n      collisionFilter: {\n        group: -1\n      }\n    });\n\n\n    World.add(world, background);\n\n    let ground = Bodies.rectangle(100, 700, 1, 1, {\n      isStatic: true,\n      collisionFilter: {\n        group: -3\n      }\n    }),\n            rockOptions = {\n              density: 0.004,\n              frictionAir: 0,\n              render:{\n                sprite: {\n                  texture: \"https://opengameart.org/sites/default/files/styles/medium/public/earththumb.png\",\n                  xScale: 0.2,\n                  yScale: 0.2\n                }\n              },\n              collisionFilter:{\n                group: -1\n              }\n              },\n            rock = Bodies.polygon(170, 450, 5, 20, rockOptions),\n            anchor = { x: 170, y: 450 },\n            elastic = Constraint.create({\n                pointA: anchor,\n                bodyB: rock,\n                stiffness: 0.08\n            });\n\n        const ground2 = Bodies.rectangle(850, 200, 300, 20, {\n          isStatic: true,\n          collisionFilter: {\n            group: -3\n          },\n          chamfer: {radius: 20},\n          render:{\n            sprite:{\n              texture: \"https://opengameart.org/sites/default/files/styles/medium/public/rock_d01.jpg\",\n              xScale:1,\n              yScale: 0.1\n            }\n          }\n        });\n\n        // const ground3 = Bodies.rectangle(500, 350, 300, 20, {\n        //   isStatic: true,\n        //   collisionFilter:{\n        //     group: -3\n        //   },\n        //   chamfer: {radius: 20},\n        //   render:{\n        //     sprite:{\n        //       texture: \"https://opengameart.org/sites/default/files/styles/medium/public/rock_d01.jpg\",\n        //       xScale:1,\n        //       yScale: 0.1\n        //     }\n        //   }\n        // });\n\n        const pyramid = Composites.pyramid(725, 100, 5, 10, 0, 0, function(x, y) {\n            return Bodies.rectangle(x, y, 30, 30, {\n              render:{\n                sprite:{\n                  texture: \"https://opengameart.org/sites/default/files/styles/medium/public/mars_type_planet_0.png\",\n                  xScale: 0.5,\n                  yScale: 0.5\n                }\n              },\n              friction: 2,\n            });\n        });\n\n        World.add(engine.world, [ground, pyramid, ground2, rock, elastic]);\n\n        Events.on(engine, 'afterUpdate', function() {\n            if (mouseConstraint.mouse.button === -1 && (rock.position.x > 190 || rock.position.y < 430)) {\n                rock = Bodies.polygon(170, 450, 7, 20, rockOptions);\n                World.add(engine.world, rock);\n                elastic.bodyB = rock;\n            }\n        });\n\n        // let interval;\n        //\n        // function makeItRain(){\n        //   interval = setInterval(rain, 1000);\n        // }\n        // function makeItRain2(){\n        //   interval = setInterval(rain2, 600);\n        // }\n        // function makeItRain3(){\n        //   interval = setInterval(rain3, 2000);\n        // }\n        //\n        // function makeItRain4(){\n        //   interval = setInterval(rain3, 2800);\n        // }\n        //\n        // let raindrop;\n        // let raindrop2;\n        //\n        // const rainOptions ={\n        //   frictionAir: 0.1,\n        //   mass: 0.00001,\n        //   collisionFilter: {\n        //     group: -3\n        //   },\n        //   render:{\n        //     sprite:{\n        //       texture:\"https://cdn.pixabay.com/photo/2013/07/13/12/16/drop-159527_1280.png\",\n        //       xScale: 0.01,\n        //       yScale: 0.01\n        //     }\n        //   }\n        // };\n        //\n        // function rain(){\n        //   for (let i = 0; i<3; i++) {\n        //       raindrop = Bodies.circle(Math.floor(Math.random()*1000), 0, 5, rainOptions);\n        //       World.add(engine.world, raindrop);\n        //   }\n        // }\n        //\n        // function rain2(){\n        //   for(let i =0; i<6; i++) {\n        //     raindrop = Bodies.circle(Math.floor(Math.random()*1000), 0, 5, rainOptions);\n        //     World.add(engine.world, raindrop);\n        //   }\n        // }\n        //\n        // function rain3(){\n        //   for(let i =0; i<5; i++) {\n        //     raindrop = Bodies.circle(Math.floor(Math.random()*1000), 0, 5, rainOptions);\n        //     World.add(engine.world, raindrop);\n        //   }\n        // }\n        //\n        // makeItRain();\n        // makeItRain2();\n        // makeItRain3();\n        // makeItRain4();\n        // add Runner\n      const runner = Runner.create();\n      Runner.run(runner, engine);\n        // add mouse control\n        const mouse = Mouse.create(render.canvas),\n            mouseConstraint = MouseConstraint.create(engine, {\n                mouse: mouse,\n                constraint: {\n                    stiffness: 0.2,\n                    render: {\n                        visible: false\n                    }\n                }\n            });\n\n        World.add(world, mouseConstraint);\n\n        const cradle = Composites.newtonsCradle(280, 0, 5, 30, 200);\n        World.add(world, cradle);\n        Body.translate(cradle.bodies[0], { x: -180, y: -100 });\n\n        render.mouse = mouse;\n\n\n    world.gravity.y = 1;\n    // world1.onclick = function() {\n    //   let currentCanvas = document.querySelector(\"canvas\");\n    //   if(currentCanvas){\n    //     currentCanvas.remove();\n    //   }\n    //   new World1();\n    // };\n    // run the engine\n    Engine.run(engine);\n\n    // run the renderer\n    Render.run(render);\n\n\n};\n\n\n\n\nmodule.exports =  World1;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/world1.js","/**\n* matter-js 0.10.0 by @liabru 2016-05-01\n* http://brm.io/matter-js/\n* License MIT\n*/\n\n/**\n * The MIT License (MIT)\n *\n * Copyright (c) 2014 Liam Brummitt\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.Matter = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n/**\n* The `Matter.Body` module contains methods for creating and manipulating body models.\n* A `Matter.Body` is a rigid body that can be simulated by a `Matter.Engine`.\n* Factories for commonly used body configurations (such as rectangles, circles and other polygons) can be found in the module `Matter.Bodies`.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n\n* @class Body\n*/\n\nvar Body = {};\n\nmodule.exports = Body;\n\nvar Vertices = require('../geometry/Vertices');\nvar Vector = require('../geometry/Vector');\nvar Sleeping = require('../core/Sleeping');\nvar Render = require('../render/Render');\nvar Common = require('../core/Common');\nvar Bounds = require('../geometry/Bounds');\nvar Axes = require('../geometry/Axes');\n\n(function() {\n\n    Body._inertiaScale = 4;\n    Body._nextCollidingGroupId = 1;\n    Body._nextNonCollidingGroupId = -1;\n    Body._nextCategory = 0x0001;\n\n    /**\n     * Creates a new rigid body model. The options parameter is an object that specifies any properties you wish to override the defaults.\n     * All properties have default values, and many are pre-calculated automatically based on other properties.\n     * See the properties section below for detailed information on what you can pass via the `options` object.\n     * @method create\n     * @param {} options\n     * @return {body} body\n     */\n    Body.create = function(options) {\n        var defaults = {\n            id: Common.nextId(),\n            type: 'body',\n            label: 'Body',\n            parts: [],\n            angle: 0,\n            vertices: Vertices.fromPath('L 0 0 L 40 0 L 40 40 L 0 40'),\n            position: { x: 0, y: 0 },\n            force: { x: 0, y: 0 },\n            torque: 0,\n            positionImpulse: { x: 0, y: 0 },\n            constraintImpulse: { x: 0, y: 0, angle: 0 },\n            totalContacts: 0,\n            speed: 0,\n            angularSpeed: 0,\n            velocity: { x: 0, y: 0 },\n            angularVelocity: 0,\n            isSensor: false,\n            isStatic: false,\n            isSleeping: false,\n            motion: 0,\n            sleepThreshold: 60,\n            density: 0.001,\n            restitution: 0,\n            friction: 0.1,\n            frictionStatic: 0.5,\n            frictionAir: 0.01,\n            collisionFilter: {\n                category: 0x0001,\n                mask: 0xFFFFFFFF,\n                group: 0\n            },\n            slop: 0.05,\n            timeScale: 1,\n            render: {\n                visible: true,\n                opacity: 1,\n                sprite: {\n                    xScale: 1,\n                    yScale: 1,\n                    xOffset: 0,\n                    yOffset: 0\n                },\n                lineWidth: 1.5\n            }\n        };\n\n        var body = Common.extend(defaults, options);\n\n        _initProperties(body, options);\n\n        return body;\n    };\n\n    /**\n     * Returns the next unique group index for which bodies will collide.\n     * If `isNonColliding` is `true`, returns the next unique group index for which bodies will _not_ collide.\n     * See `body.collisionFilter` for more information.\n     * @method nextGroup\n     * @param {bool} [isNonColliding=false]\n     * @return {Number} Unique group index\n     */\n    Body.nextGroup = function(isNonColliding) {\n        if (isNonColliding)\n            return Body._nextNonCollidingGroupId--;\n\n        return Body._nextCollidingGroupId++;\n    };\n\n    /**\n     * Returns the next unique category bitfield (starting after the initial default category `0x0001`).\n     * There are 32 available. See `body.collisionFilter` for more information.\n     * @method nextCategory\n     * @return {Number} Unique category bitfield\n     */\n    Body.nextCategory = function() {\n        Body._nextCategory = Body._nextCategory << 1;\n        return Body._nextCategory;\n    };\n\n    /**\n     * Initialises body properties.\n     * @method _initProperties\n     * @private\n     * @param {body} body\n     * @param {} options\n     */\n    var _initProperties = function(body, options) {\n        // init required properties (order is important)\n        Body.set(body, {\n            bounds: body.bounds || Bounds.create(body.vertices),\n            positionPrev: body.positionPrev || Vector.clone(body.position),\n            anglePrev: body.anglePrev || body.angle,\n            vertices: body.vertices,\n            parts: body.parts || [body],\n            isStatic: body.isStatic,\n            isSleeping: body.isSleeping,\n            parent: body.parent || body\n        });\n\n        Vertices.rotate(body.vertices, body.angle, body.position);\n        Axes.rotate(body.axes, body.angle);\n        Bounds.update(body.bounds, body.vertices, body.velocity);\n\n        // allow options to override the automatically calculated properties\n        Body.set(body, {\n            axes: options.axes || body.axes,\n            area: options.area || body.area,\n            mass: options.mass || body.mass,\n            inertia: options.inertia || body.inertia\n        });\n\n        // render properties\n        var defaultFillStyle = (body.isStatic ? '#eeeeee' : Common.choose(['#556270', '#4ECDC4', '#C7F464', '#FF6B6B', '#C44D58'])),\n            defaultStrokeStyle = Common.shadeColor(defaultFillStyle, -20);\n        body.render.fillStyle = body.render.fillStyle || defaultFillStyle;\n        body.render.strokeStyle = body.render.strokeStyle || defaultStrokeStyle;\n        body.render.sprite.xOffset += -(body.bounds.min.x - body.position.x) / (body.bounds.max.x - body.bounds.min.x);\n        body.render.sprite.yOffset += -(body.bounds.min.y - body.position.y) / (body.bounds.max.y - body.bounds.min.y);\n    };\n\n    /**\n     * Given a property and a value (or map of), sets the property(s) on the body, using the appropriate setter functions if they exist.\n     * Prefer to use the actual setter functions in performance critical situations.\n     * @method set\n     * @param {body} body\n     * @param {} settings A property name (or map of properties and values) to set on the body.\n     * @param {} value The value to set if `settings` is a single property name.\n     */\n    Body.set = function(body, settings, value) {\n        var property;\n\n        if (typeof settings === 'string') {\n            property = settings;\n            settings = {};\n            settings[property] = value;\n        }\n\n        for (property in settings) {\n            value = settings[property];\n\n            if (!settings.hasOwnProperty(property))\n                continue;\n\n            switch (property) {\n\n            case 'isStatic':\n                Body.setStatic(body, value);\n                break;\n            case 'isSleeping':\n                Sleeping.set(body, value);\n                break;\n            case 'mass':\n                Body.setMass(body, value);\n                break;\n            case 'density':\n                Body.setDensity(body, value);\n                break;\n            case 'inertia':\n                Body.setInertia(body, value);\n                break;\n            case 'vertices':\n                Body.setVertices(body, value);\n                break;\n            case 'position':\n                Body.setPosition(body, value);\n                break;\n            case 'angle':\n                Body.setAngle(body, value);\n                break;\n            case 'velocity':\n                Body.setVelocity(body, value);\n                break;\n            case 'angularVelocity':\n                Body.setAngularVelocity(body, value);\n                break;\n            case 'parts':\n                Body.setParts(body, value);\n                break;\n            default:\n                body[property] = value;\n\n            }\n        }\n    };\n\n    /**\n     * Sets the body as static, including isStatic flag and setting mass and inertia to Infinity.\n     * @method setStatic\n     * @param {body} body\n     * @param {bool} isStatic\n     */\n    Body.setStatic = function(body, isStatic) {\n        for (var i = 0; i < body.parts.length; i++) {\n            var part = body.parts[i];\n            part.isStatic = isStatic;\n\n            if (isStatic) {\n                part.restitution = 0;\n                part.friction = 1;\n                part.mass = part.inertia = part.density = Infinity;\n                part.inverseMass = part.inverseInertia = 0;\n\n                part.positionPrev.x = part.position.x;\n                part.positionPrev.y = part.position.y;\n                part.anglePrev = part.angle;\n                part.angularVelocity = 0;\n                part.speed = 0;\n                part.angularSpeed = 0;\n                part.motion = 0;\n            }\n        }\n    };\n\n    /**\n     * Sets the mass of the body. Inverse mass and density are automatically updated to reflect the change.\n     * @method setMass\n     * @param {body} body\n     * @param {number} mass\n     */\n    Body.setMass = function(body, mass) {\n        body.mass = mass;\n        body.inverseMass = 1 / body.mass;\n        body.density = body.mass / body.area;\n    };\n\n    /**\n     * Sets the density of the body. Mass is automatically updated to reflect the change.\n     * @method setDensity\n     * @param {body} body\n     * @param {number} density\n     */\n    Body.setDensity = function(body, density) {\n        Body.setMass(body, density * body.area);\n        body.density = density;\n    };\n\n    /**\n     * Sets the moment of inertia (i.e. second moment of area) of the body of the body.\n     * Inverse inertia is automatically updated to reflect the change. Mass is not changed.\n     * @method setInertia\n     * @param {body} body\n     * @param {number} inertia\n     */\n    Body.setInertia = function(body, inertia) {\n        body.inertia = inertia;\n        body.inverseInertia = 1 / body.inertia;\n    };\n\n    /**\n     * Sets the body's vertices and updates body properties accordingly, including inertia, area and mass (with respect to `body.density`).\n     * Vertices will be automatically transformed to be orientated around their centre of mass as the origin.\n     * They are then automatically translated to world space based on `body.position`.\n     *\n     * The `vertices` argument should be passed as an array of `Matter.Vector` points (or a `Matter.Vertices` array).\n     * Vertices must form a convex hull, concave hulls are not supported.\n     *\n     * @method setVertices\n     * @param {body} body\n     * @param {vector[]} vertices\n     */\n    Body.setVertices = function(body, vertices) {\n        // change vertices\n        if (vertices[0].body === body) {\n            body.vertices = vertices;\n        } else {\n            body.vertices = Vertices.create(vertices, body);\n        }\n\n        // update properties\n        body.axes = Axes.fromVertices(body.vertices);\n        body.area = Vertices.area(body.vertices);\n        Body.setMass(body, body.density * body.area);\n\n        // orient vertices around the centre of mass at origin (0, 0)\n        var centre = Vertices.centre(body.vertices);\n        Vertices.translate(body.vertices, centre, -1);\n\n        // update inertia while vertices are at origin (0, 0)\n        Body.setInertia(body, Body._inertiaScale * Vertices.inertia(body.vertices, body.mass));\n\n        // update geometry\n        Vertices.translate(body.vertices, body.position);\n        Bounds.update(body.bounds, body.vertices, body.velocity);\n    };\n\n    /**\n     * Sets the parts of the `body` and updates mass, inertia and centroid.\n     * Each part will have its parent set to `body`.\n     * By default the convex hull will be automatically computed and set on `body`, unless `autoHull` is set to `false.`\n     * Note that this method will ensure that the first part in `body.parts` will always be the `body`.\n     * @method setParts\n     * @param {body} body\n     * @param [body] parts\n     * @param {bool} [autoHull=true]\n     */\n    Body.setParts = function(body, parts, autoHull) {\n        var i;\n\n        // add all the parts, ensuring that the first part is always the parent body\n        parts = parts.slice(0);\n        body.parts.length = 0;\n        body.parts.push(body);\n        body.parent = body;\n\n        for (i = 0; i < parts.length; i++) {\n            var part = parts[i];\n            if (part !== body) {\n                part.parent = body;\n                body.parts.push(part);\n            }\n        }\n\n        if (body.parts.length === 1)\n            return;\n\n        autoHull = typeof autoHull !== 'undefined' ? autoHull : true;\n\n        // find the convex hull of all parts to set on the parent body\n        if (autoHull) {\n            var vertices = [];\n            for (i = 0; i < parts.length; i++) {\n                vertices = vertices.concat(parts[i].vertices);\n            }\n\n            Vertices.clockwiseSort(vertices);\n\n            var hull = Vertices.hull(vertices),\n                hullCentre = Vertices.centre(hull);\n\n            Body.setVertices(body, hull);\n            Vertices.translate(body.vertices, hullCentre);\n        }\n\n        // sum the properties of all compound parts of the parent body\n        var total = _totalProperties(body);\n\n        body.area = total.area;\n        body.parent = body;\n        body.position.x = total.centre.x;\n        body.position.y = total.centre.y;\n        body.positionPrev.x = total.centre.x;\n        body.positionPrev.y = total.centre.y;\n\n        Body.setMass(body, total.mass);\n        Body.setInertia(body, total.inertia);\n        Body.setPosition(body, total.centre);\n    };\n\n    /**\n     * Sets the position of the body instantly. Velocity, angle, force etc. are unchanged.\n     * @method setPosition\n     * @param {body} body\n     * @param {vector} position\n     */\n    Body.setPosition = function(body, position) {\n        var delta = Vector.sub(position, body.position);\n        body.positionPrev.x += delta.x;\n        body.positionPrev.y += delta.y;\n\n        for (var i = 0; i < body.parts.length; i++) {\n            var part = body.parts[i];\n            part.position.x += delta.x;\n            part.position.y += delta.y;\n            Vertices.translate(part.vertices, delta);\n            Bounds.update(part.bounds, part.vertices, body.velocity);\n        }\n    };\n\n    /**\n     * Sets the angle of the body instantly. Angular velocity, position, force etc. are unchanged.\n     * @method setAngle\n     * @param {body} body\n     * @param {number} angle\n     */\n    Body.setAngle = function(body, angle) {\n        var delta = angle - body.angle;\n        body.anglePrev += delta;\n\n        for (var i = 0; i < body.parts.length; i++) {\n            var part = body.parts[i];\n            part.angle += delta;\n            Vertices.rotate(part.vertices, delta, body.position);\n            Axes.rotate(part.axes, delta);\n            Bounds.update(part.bounds, part.vertices, body.velocity);\n            if (i > 0) {\n                Vector.rotateAbout(part.position, delta, body.position, part.position);\n            }\n        }\n    };\n\n    /**\n     * Sets the linear velocity of the body instantly. Position, angle, force etc. are unchanged. See also `Body.applyForce`.\n     * @method setVelocity\n     * @param {body} body\n     * @param {vector} velocity\n     */\n    Body.setVelocity = function(body, velocity) {\n        body.positionPrev.x = body.position.x - velocity.x;\n        body.positionPrev.y = body.position.y - velocity.y;\n        body.velocity.x = velocity.x;\n        body.velocity.y = velocity.y;\n        body.speed = Vector.magnitude(body.velocity);\n    };\n\n    /**\n     * Sets the angular velocity of the body instantly. Position, angle, force etc. are unchanged. See also `Body.applyForce`.\n     * @method setAngularVelocity\n     * @param {body} body\n     * @param {number} velocity\n     */\n    Body.setAngularVelocity = function(body, velocity) {\n        body.anglePrev = body.angle - velocity;\n        body.angularVelocity = velocity;\n        body.angularSpeed = Math.abs(body.angularVelocity);\n    };\n\n    /**\n     * Moves a body by a given vector relative to its current position, without imparting any velocity.\n     * @method translate\n     * @param {body} body\n     * @param {vector} translation\n     */\n    Body.translate = function(body, translation) {\n        Body.setPosition(body, Vector.add(body.position, translation));\n    };\n\n    /**\n     * Rotates a body by a given angle relative to its current angle, without imparting any angular velocity.\n     * @method rotate\n     * @param {body} body\n     * @param {number} rotation\n     */\n    Body.rotate = function(body, rotation) {\n        Body.setAngle(body, body.angle + rotation);\n    };\n\n    /**\n     * Scales the body, including updating physical properties (mass, area, axes, inertia), from a world-space point (default is body centre).\n     * @method scale\n     * @param {body} body\n     * @param {number} scaleX\n     * @param {number} scaleY\n     * @param {vector} [point]\n     */\n    Body.scale = function(body, scaleX, scaleY, point) {\n        for (var i = 0; i < body.parts.length; i++) {\n            var part = body.parts[i];\n\n            // scale vertices\n            Vertices.scale(part.vertices, scaleX, scaleY, body.position);\n\n            // update properties\n            part.axes = Axes.fromVertices(part.vertices);\n\n            if (!body.isStatic) {\n                part.area = Vertices.area(part.vertices);\n                Body.setMass(part, body.density * part.area);\n\n                // update inertia (requires vertices to be at origin)\n                Vertices.translate(part.vertices, { x: -part.position.x, y: -part.position.y });\n                Body.setInertia(part, Vertices.inertia(part.vertices, part.mass));\n                Vertices.translate(part.vertices, { x: part.position.x, y: part.position.y });\n            }\n\n            // update bounds\n            Bounds.update(part.bounds, part.vertices, body.velocity);\n        }\n\n        // handle circles\n        if (body.circleRadius) {\n            if (scaleX === scaleY) {\n                body.circleRadius *= scaleX;\n            } else {\n                // body is no longer a circle\n                body.circleRadius = null;\n            }\n        }\n\n        if (!body.isStatic) {\n            var total = _totalProperties(body);\n            body.area = total.area;\n            Body.setMass(body, total.mass);\n            Body.setInertia(body, total.inertia);\n        }\n    };\n\n    /**\n     * Performs a simulation step for the given `body`, including updating position and angle using Verlet integration.\n     * @method update\n     * @param {body} body\n     * @param {number} deltaTime\n     * @param {number} timeScale\n     * @param {number} correction\n     */\n    Body.update = function(body, deltaTime, timeScale, correction) {\n        var deltaTimeSquared = Math.pow(deltaTime * timeScale * body.timeScale, 2);\n\n        // from the previous step\n        var frictionAir = 1 - body.frictionAir * timeScale * body.timeScale,\n            velocityPrevX = body.position.x - body.positionPrev.x,\n            velocityPrevY = body.position.y - body.positionPrev.y;\n\n        // update velocity with Verlet integration\n        body.velocity.x = (velocityPrevX * frictionAir * correction) + (body.force.x / body.mass) * deltaTimeSquared;\n        body.velocity.y = (velocityPrevY * frictionAir * correction) + (body.force.y / body.mass) * deltaTimeSquared;\n\n        body.positionPrev.x = body.position.x;\n        body.positionPrev.y = body.position.y;\n        body.position.x += body.velocity.x;\n        body.position.y += body.velocity.y;\n\n        // update angular velocity with Verlet integration\n        body.angularVelocity = ((body.angle - body.anglePrev) * frictionAir * correction) + (body.torque / body.inertia) * deltaTimeSquared;\n        body.anglePrev = body.angle;\n        body.angle += body.angularVelocity;\n\n        // track speed and acceleration\n        body.speed = Vector.magnitude(body.velocity);\n        body.angularSpeed = Math.abs(body.angularVelocity);\n\n        // transform the body geometry\n        for (var i = 0; i < body.parts.length; i++) {\n            var part = body.parts[i];\n\n            Vertices.translate(part.vertices, body.velocity);\n\n            if (i > 0) {\n                part.position.x += body.velocity.x;\n                part.position.y += body.velocity.y;\n            }\n\n            if (body.angularVelocity !== 0) {\n                Vertices.rotate(part.vertices, body.angularVelocity, body.position);\n                Axes.rotate(part.axes, body.angularVelocity);\n                if (i > 0) {\n                    Vector.rotateAbout(part.position, body.angularVelocity, body.position, part.position);\n                }\n            }\n\n            Bounds.update(part.bounds, part.vertices, body.velocity);\n        }\n    };\n\n    /**\n     * Applies a force to a body from a given world-space position, including resulting torque.\n     * @method applyForce\n     * @param {body} body\n     * @param {vector} position\n     * @param {vector} force\n     */\n    Body.applyForce = function(body, position, force) {\n        body.force.x += force.x;\n        body.force.y += force.y;\n        var offset = { x: position.x - body.position.x, y: position.y - body.position.y };\n        body.torque += offset.x * force.y - offset.y * force.x;\n    };\n\n    /**\n     * Returns the sums of the properties of all compound parts of the parent body.\n     * @method _totalProperties\n     * @private\n     * @param {body} body\n     * @return {}\n     */\n    var _totalProperties = function(body) {\n        // https://ecourses.ou.edu/cgi-bin/ebook.cgi?doc=&topic=st&chap_sec=07.2&page=theory\n        // http://output.to/sideway/default.asp?qno=121100087\n\n        var properties = {\n            mass: 0,\n            area: 0,\n            inertia: 0,\n            centre: { x: 0, y: 0 }\n        };\n\n        // sum the properties of all compound parts of the parent body\n        for (var i = body.parts.length === 1 ? 0 : 1; i < body.parts.length; i++) {\n            var part = body.parts[i];\n            properties.mass += part.mass;\n            properties.area += part.area;\n            properties.inertia += part.inertia;\n            properties.centre = Vector.add(properties.centre,\n                                           Vector.mult(part.position, part.mass !== Infinity ? part.mass : 1));\n        }\n\n        properties.centre = Vector.div(properties.centre,\n                                       properties.mass !== Infinity ? properties.mass : body.parts.length);\n\n        return properties;\n    };\n\n    /*\n    *\n    *  Events Documentation\n    *\n    */\n\n    /**\n    * Fired when a body starts sleeping (where `this` is the body).\n    *\n    * @event sleepStart\n    * @this {body} The body that has started sleeping\n    * @param {} event An event object\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired when a body ends sleeping (where `this` is the body).\n    *\n    * @event sleepEnd\n    * @this {body} The body that has ended sleeping\n    * @param {} event An event object\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n    /**\n     * An integer `Number` uniquely identifying number generated in `Body.create` by `Common.nextId`.\n     *\n     * @property id\n     * @type number\n     */\n\n    /**\n     * A `String` denoting the type of object.\n     *\n     * @property type\n     * @type string\n     * @default \"body\"\n     * @readOnly\n     */\n\n    /**\n     * An arbitrary `String` name to help the user identify and manage bodies.\n     *\n     * @property label\n     * @type string\n     * @default \"Body\"\n     */\n\n    /**\n     * An array of bodies that make up this body.\n     * The first body in the array must always be a self reference to the current body instance.\n     * All bodies in the `parts` array together form a single rigid compound body.\n     * Parts are allowed to overlap, have gaps or holes or even form concave bodies.\n     * Parts themselves should never be added to a `World`, only the parent body should be.\n     * Use `Body.setParts` when setting parts to ensure correct updates of all properties.\n     *\n     * @property parts\n     * @type body[]\n     */\n\n    /**\n     * A self reference if the body is _not_ a part of another body.\n     * Otherwise this is a reference to the body that this is a part of.\n     * See `body.parts`.\n     *\n     * @property parent\n     * @type body\n     */\n\n    /**\n     * A `Number` specifying the angle of the body, in radians.\n     *\n     * @property angle\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * An array of `Vector` objects that specify the convex hull of the rigid body.\n     * These should be provided about the origin `(0, 0)`. E.g.\n     *\n     *     [{ x: 0, y: 0 }, { x: 25, y: 50 }, { x: 50, y: 0 }]\n     *\n     * When passed via `Body.create`, the vertices are translated relative to `body.position` (i.e. world-space, and constantly updated by `Body.update` during simulation).\n     * The `Vector` objects are also augmented with additional properties required for efficient collision detection.\n     *\n     * Other properties such as `inertia` and `bounds` are automatically calculated from the passed vertices (unless provided via `options`).\n     * Concave hulls are not currently supported. The module `Matter.Vertices` contains useful methods for working with vertices.\n     *\n     * @property vertices\n     * @type vector[]\n     */\n\n    /**\n     * A `Vector` that specifies the current world-space position of the body.\n     *\n     * @property position\n     * @type vector\n     * @default { x: 0, y: 0 }\n     */\n\n    /**\n     * A `Vector` that specifies the force to apply in the current step. It is zeroed after every `Body.update`. See also `Body.applyForce`.\n     *\n     * @property force\n     * @type vector\n     * @default { x: 0, y: 0 }\n     */\n\n    /**\n     * A `Number` that specifies the torque (turning force) to apply in the current step. It is zeroed after every `Body.update`.\n     *\n     * @property torque\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A `Number` that _measures_ the current speed of the body after the last `Body.update`. It is read-only and always positive (it's the magnitude of `body.velocity`).\n     *\n     * @readOnly\n     * @property speed\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A `Number` that _measures_ the current angular speed of the body after the last `Body.update`. It is read-only and always positive (it's the magnitude of `body.angularVelocity`).\n     *\n     * @readOnly\n     * @property angularSpeed\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A `Vector` that _measures_ the current velocity of the body after the last `Body.update`. It is read-only.\n     * If you need to modify a body's velocity directly, you should either apply a force or simply change the body's `position` (as the engine uses position-Verlet integration).\n     *\n     * @readOnly\n     * @property velocity\n     * @type vector\n     * @default { x: 0, y: 0 }\n     */\n\n    /**\n     * A `Number` that _measures_ the current angular velocity of the body after the last `Body.update`. It is read-only.\n     * If you need to modify a body's angular velocity directly, you should apply a torque or simply change the body's `angle` (as the engine uses position-Verlet integration).\n     *\n     * @readOnly\n     * @property angularVelocity\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A flag that indicates whether a body is considered static. A static body can never change position or angle and is completely fixed.\n     * If you need to set a body as static after its creation, you should use `Body.setStatic` as this requires more than just setting this flag.\n     *\n     * @property isStatic\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A flag that indicates whether a body is a sensor. Sensor triggers collision events, but doesn't react with colliding body physically.\n     *\n     * @property isSensor\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A flag that indicates whether the body is considered sleeping. A sleeping body acts similar to a static body, except it is only temporary and can be awoken.\n     * If you need to set a body as sleeping, you should use `Sleeping.set` as this requires more than just setting this flag.\n     *\n     * @property isSleeping\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A `Number` that _measures_ the amount of movement a body currently has (a combination of `speed` and `angularSpeed`). It is read-only and always positive.\n     * It is used and updated by the `Matter.Sleeping` module during simulation to decide if a body has come to rest.\n     *\n     * @readOnly\n     * @property motion\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A `Number` that defines the number of updates in which this body must have near-zero velocity before it is set as sleeping by the `Matter.Sleeping` module (if sleeping is enabled by the engine).\n     *\n     * @property sleepThreshold\n     * @type number\n     * @default 60\n     */\n\n    /**\n     * A `Number` that defines the density of the body, that is its mass per unit area.\n     * If you pass the density via `Body.create` the `mass` property is automatically calculated for you based on the size (area) of the object.\n     * This is generally preferable to simply setting mass and allows for more intuitive definition of materials (e.g. rock has a higher density than wood).\n     *\n     * @property density\n     * @type number\n     * @default 0.001\n     */\n\n    /**\n     * A `Number` that defines the mass of the body, although it may be more appropriate to specify the `density` property instead.\n     * If you modify this value, you must also modify the `body.inverseMass` property (`1 / mass`).\n     *\n     * @property mass\n     * @type number\n     */\n\n    /**\n     * A `Number` that defines the inverse mass of the body (`1 / mass`).\n     * If you modify this value, you must also modify the `body.mass` property.\n     *\n     * @property inverseMass\n     * @type number\n     */\n\n    /**\n     * A `Number` that defines the moment of inertia (i.e. second moment of area) of the body.\n     * It is automatically calculated from the given convex hull (`vertices` array) and density in `Body.create`.\n     * If you modify this value, you must also modify the `body.inverseInertia` property (`1 / inertia`).\n     *\n     * @property inertia\n     * @type number\n     */\n\n    /**\n     * A `Number` that defines the inverse moment of inertia of the body (`1 / inertia`).\n     * If you modify this value, you must also modify the `body.inertia` property.\n     *\n     * @property inverseInertia\n     * @type number\n     */\n\n    /**\n     * A `Number` that defines the restitution (elasticity) of the body. The value is always positive and is in the range `(0, 1)`.\n     * A value of `0` means collisions may be perfectly inelastic and no bouncing may occur.\n     * A value of `0.8` means the body may bounce back with approximately 80% of its kinetic energy.\n     * Note that collision response is based on _pairs_ of bodies, and that `restitution` values are _combined_ with the following formula:\n     *\n     *     Math.max(bodyA.restitution, bodyB.restitution)\n     *\n     * @property restitution\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A `Number` that defines the friction of the body. The value is always positive and is in the range `(0, 1)`.\n     * A value of `0` means that the body may slide indefinitely.\n     * A value of `1` means the body may come to a stop almost instantly after a force is applied.\n     *\n     * The effects of the value may be non-linear.\n     * High values may be unstable depending on the body.\n     * The engine uses a Coulomb friction model including static and kinetic friction.\n     * Note that collision response is based on _pairs_ of bodies, and that `friction` values are _combined_ with the following formula:\n     *\n     *     Math.min(bodyA.friction, bodyB.friction)\n     *\n     * @property friction\n     * @type number\n     * @default 0.1\n     */\n\n    /**\n     * A `Number` that defines the static friction of the body (in the Coulomb friction model).\n     * A value of `0` means the body will never 'stick' when it is nearly stationary and only dynamic `friction` is used.\n     * The higher the value (e.g. `10`), the more force it will take to initially get the body moving when nearly stationary.\n     * This value is multiplied with the `friction` property to make it easier to change `friction` and maintain an appropriate amount of static friction.\n     *\n     * @property frictionStatic\n     * @type number\n     * @default 0.5\n     */\n\n    /**\n     * A `Number` that defines the air friction of the body (air resistance).\n     * A value of `0` means the body will never slow as it moves through space.\n     * The higher the value, the faster a body slows when moving through space.\n     * The effects of the value are non-linear.\n     *\n     * @property frictionAir\n     * @type number\n     * @default 0.01\n     */\n\n    /**\n     * An `Object` that specifies the collision filtering properties of this body.\n     *\n     * Collisions between two bodies will obey the following rules:\n     * - If the two bodies have the same non-zero value of `collisionFilter.group`,\n     *   they will always collide if the value is positive, and they will never collide\n     *   if the value is negative.\n     * - If the two bodies have different values of `collisionFilter.group` or if one\n     *   (or both) of the bodies has a value of 0, then the category/mask rules apply as follows:\n     *\n     * Each body belongs to a collision category, given by `collisionFilter.category`. This\n     * value is used as a bit field and the category should have only one bit set, meaning that\n     * the value of this property is a power of two in the range [1, 2^31]. Thus, there are 32\n     * different collision categories available.\n     *\n     * Each body also defines a collision bitmask, given by `collisionFilter.mask` which specifies\n     * the categories it collides with (the value is the bitwise AND value of all these categories).\n     *\n     * Using the category/mask rules, two bodies `A` and `B` collide if each includes the other's\n     * category in its mask, i.e. `(categoryA & maskB) !== 0` and `(categoryB & maskA) !== 0`\n     * are both true.\n     *\n     * @property collisionFilter\n     * @type object\n     */\n\n    /**\n     * An Integer `Number`, that specifies the collision group this body belongs to.\n     * See `body.collisionFilter` for more information.\n     *\n     * @property collisionFilter.group\n     * @type object\n     * @default 0\n     */\n\n    /**\n     * A bit field that specifies the collision category this body belongs to.\n     * The category value should have only one bit set, for example `0x0001`.\n     * This means there are up to 32 unique collision categories available.\n     * See `body.collisionFilter` for more information.\n     *\n     * @property collisionFilter.category\n     * @type object\n     * @default 1\n     */\n\n    /**\n     * A bit mask that specifies the collision categories this body may collide with.\n     * See `body.collisionFilter` for more information.\n     *\n     * @property collisionFilter.mask\n     * @type object\n     * @default -1\n     */\n\n    /**\n     * A `Number` that specifies a tolerance on how far a body is allowed to 'sink' or rotate into other bodies.\n     * Avoid changing this value unless you understand the purpose of `slop` in physics engines.\n     * The default should generally suffice, although very large bodies may require larger values for stable stacking.\n     *\n     * @property slop\n     * @type number\n     * @default 0.05\n     */\n\n    /**\n     * A `Number` that allows per-body time scaling, e.g. a force-field where bodies inside are in slow-motion, while others are at full speed.\n     *\n     * @property timeScale\n     * @type number\n     * @default 1\n     */\n\n    /**\n     * An `Object` that defines the rendering properties to be consumed by the module `Matter.Render`.\n     *\n     * @property render\n     * @type object\n     */\n\n    /**\n     * A flag that indicates if the body should be rendered.\n     *\n     * @property render.visible\n     * @type boolean\n     * @default true\n     */\n\n    /**\n     * Sets the opacity to use when rendering.\n     *\n     * @property render.opacity\n     * @type number\n     * @default 1\n    */\n\n    /**\n     * An `Object` that defines the sprite properties to use when rendering, if any.\n     *\n     * @property render.sprite\n     * @type object\n     */\n\n    /**\n     * An `String` that defines the path to the image to use as the sprite texture, if any.\n     *\n     * @property render.sprite.texture\n     * @type string\n     */\n\n    /**\n     * A `Number` that defines the scaling in the x-axis for the sprite, if any.\n     *\n     * @property render.sprite.xScale\n     * @type number\n     * @default 1\n     */\n\n    /**\n     * A `Number` that defines the scaling in the y-axis for the sprite, if any.\n     *\n     * @property render.sprite.yScale\n     * @type number\n     * @default 1\n     */\n\n     /**\n      * A `Number` that defines the offset in the x-axis for the sprite (normalised by texture width).\n      *\n      * @property render.sprite.xOffset\n      * @type number\n      * @default 0\n      */\n\n     /**\n      * A `Number` that defines the offset in the y-axis for the sprite (normalised by texture height).\n      *\n      * @property render.sprite.yOffset\n      * @type number\n      * @default 0\n      */\n\n    /**\n     * A `Number` that defines the line width to use when rendering the body outline (if a sprite is not defined).\n     * A value of `0` means no outline will be rendered.\n     *\n     * @property render.lineWidth\n     * @type number\n     * @default 1.5\n     */\n\n    /**\n     * A `String` that defines the fill style to use when rendering the body (if a sprite is not defined).\n     * It is the same as when using a canvas, so it accepts CSS style property values.\n     *\n     * @property render.fillStyle\n     * @type string\n     * @default a random colour\n     */\n\n    /**\n     * A `String` that defines the stroke style to use when rendering the body outline (if a sprite is not defined).\n     * It is the same as when using a canvas, so it accepts CSS style property values.\n     *\n     * @property render.strokeStyle\n     * @type string\n     * @default a random colour\n     */\n\n    /**\n     * An array of unique axis vectors (edge normals) used for collision detection.\n     * These are automatically calculated from the given convex hull (`vertices` array) in `Body.create`.\n     * They are constantly updated by `Body.update` during the simulation.\n     *\n     * @property axes\n     * @type vector[]\n     */\n\n    /**\n     * A `Number` that _measures_ the area of the body's convex hull, calculated at creation by `Body.create`.\n     *\n     * @property area\n     * @type string\n     * @default\n     */\n\n    /**\n     * A `Bounds` object that defines the AABB region for the body.\n     * It is automatically calculated from the given convex hull (`vertices` array) in `Body.create` and constantly updated by `Body.update` during simulation.\n     *\n     * @property bounds\n     * @type bounds\n     */\n\n})();\n\n},{\"../core/Common\":14,\"../core/Sleeping\":20,\"../geometry/Axes\":23,\"../geometry/Bounds\":24,\"../geometry/Vector\":26,\"../geometry/Vertices\":27,\"../render/Render\":29}],2:[function(require,module,exports){\n/**\n* The `Matter.Composite` module contains methods for creating and manipulating composite bodies.\n* A composite body is a collection of `Matter.Body`, `Matter.Constraint` and other `Matter.Composite`, therefore composites form a tree structure.\n* It is important to use the functions in this module to modify composites, rather than directly modifying their properties.\n* Note that the `Matter.World` object is also a type of `Matter.Composite` and as such all composite methods here can also operate on a `Matter.World`.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Composite\n*/\n\nvar Composite = {};\n\nmodule.exports = Composite;\n\nvar Events = require('../core/Events');\nvar Common = require('../core/Common');\nvar Body = require('./Body');\n\n(function() {\n\n    /**\n     * Creates a new composite. The options parameter is an object that specifies any properties you wish to override the defaults.\n     * See the properites section below for detailed information on what you can pass via the `options` object.\n     * @method create\n     * @param {} [options]\n     * @return {composite} A new composite\n     */\n    Composite.create = function(options) {\n        return Common.extend({\n            id: Common.nextId(),\n            type: 'composite',\n            parent: null,\n            isModified: false,\n            bodies: [],\n            constraints: [],\n            composites: [],\n            label: 'Composite'\n        }, options);\n    };\n\n    /**\n     * Sets the composite's `isModified` flag.\n     * If `updateParents` is true, all parents will be set (default: false).\n     * If `updateChildren` is true, all children will be set (default: false).\n     * @method setModified\n     * @param {composite} composite\n     * @param {boolean} isModified\n     * @param {boolean} [updateParents=false]\n     * @param {boolean} [updateChildren=false]\n     */\n    Composite.setModified = function(composite, isModified, updateParents, updateChildren) {\n        composite.isModified = isModified;\n\n        if (updateParents && composite.parent) {\n            Composite.setModified(composite.parent, isModified, updateParents, updateChildren);\n        }\n\n        if (updateChildren) {\n            for(var i = 0; i < composite.composites.length; i++) {\n                var childComposite = composite.composites[i];\n                Composite.setModified(childComposite, isModified, updateParents, updateChildren);\n            }\n        }\n    };\n\n    /**\n     * Generic add function. Adds one or many body(s), constraint(s) or a composite(s) to the given composite.\n     * Triggers `beforeAdd` and `afterAdd` events on the `composite`.\n     * @method add\n     * @param {composite} composite\n     * @param {} object\n     * @return {composite} The original composite with the objects added\n     */\n    Composite.add = function(composite, object) {\n        var objects = [].concat(object);\n\n        Events.trigger(composite, 'beforeAdd', { object: object });\n\n        for (var i = 0; i < objects.length; i++) {\n            var obj = objects[i];\n\n            switch (obj.type) {\n\n            case 'body':\n                // skip adding compound parts\n                if (obj.parent !== obj) {\n                    Common.log('Composite.add: skipped adding a compound body part (you must add its parent instead)', 'warn');\n                    break;\n                }\n\n                Composite.addBody(composite, obj);\n                break;\n            case 'constraint':\n                Composite.addConstraint(composite, obj);\n                break;\n            case 'composite':\n                Composite.addComposite(composite, obj);\n                break;\n            case 'mouseConstraint':\n                Composite.addConstraint(composite, obj.constraint);\n                break;\n\n            }\n        }\n\n        Events.trigger(composite, 'afterAdd', { object: object });\n\n        return composite;\n    };\n\n    /**\n     * Generic remove function. Removes one or many body(s), constraint(s) or a composite(s) to the given composite.\n     * Optionally searching its children recursively.\n     * Triggers `beforeRemove` and `afterRemove` events on the `composite`.\n     * @method remove\n     * @param {composite} composite\n     * @param {} object\n     * @param {boolean} [deep=false]\n     * @return {composite} The original composite with the objects removed\n     */\n    Composite.remove = function(composite, object, deep) {\n        var objects = [].concat(object);\n\n        Events.trigger(composite, 'beforeRemove', { object: object });\n\n        for (var i = 0; i < objects.length; i++) {\n            var obj = objects[i];\n\n            switch (obj.type) {\n\n            case 'body':\n                Composite.removeBody(composite, obj, deep);\n                break;\n            case 'constraint':\n                Composite.removeConstraint(composite, obj, deep);\n                break;\n            case 'composite':\n                Composite.removeComposite(composite, obj, deep);\n                break;\n            case 'mouseConstraint':\n                Composite.removeConstraint(composite, obj.constraint);\n                break;\n\n            }\n        }\n\n        Events.trigger(composite, 'afterRemove', { object: object });\n\n        return composite;\n    };\n\n    /**\n     * Adds a composite to the given composite.\n     * @private\n     * @method addComposite\n     * @param {composite} compositeA\n     * @param {composite} compositeB\n     * @return {composite} The original compositeA with the objects from compositeB added\n     */\n    Composite.addComposite = function(compositeA, compositeB) {\n        compositeA.composites.push(compositeB);\n        compositeB.parent = compositeA;\n        Composite.setModified(compositeA, true, true, false);\n        return compositeA;\n    };\n\n    /**\n     * Removes a composite from the given composite, and optionally searching its children recursively.\n     * @private\n     * @method removeComposite\n     * @param {composite} compositeA\n     * @param {composite} compositeB\n     * @param {boolean} [deep=false]\n     * @return {composite} The original compositeA with the composite removed\n     */\n    Composite.removeComposite = function(compositeA, compositeB, deep) {\n        var position = Common.indexOf(compositeA.composites, compositeB);\n        if (position !== -1) {\n            Composite.removeCompositeAt(compositeA, position);\n            Composite.setModified(compositeA, true, true, false);\n        }\n\n        if (deep) {\n            for (var i = 0; i < compositeA.composites.length; i++){\n                Composite.removeComposite(compositeA.composites[i], compositeB, true);\n            }\n        }\n\n        return compositeA;\n    };\n\n    /**\n     * Removes a composite from the given composite.\n     * @private\n     * @method removeCompositeAt\n     * @param {composite} composite\n     * @param {number} position\n     * @return {composite} The original composite with the composite removed\n     */\n    Composite.removeCompositeAt = function(composite, position) {\n        composite.composites.splice(position, 1);\n        Composite.setModified(composite, true, true, false);\n        return composite;\n    };\n\n    /**\n     * Adds a body to the given composite.\n     * @private\n     * @method addBody\n     * @param {composite} composite\n     * @param {body} body\n     * @return {composite} The original composite with the body added\n     */\n    Composite.addBody = function(composite, body) {\n        composite.bodies.push(body);\n        Composite.setModified(composite, true, true, false);\n        return composite;\n    };\n\n    /**\n     * Removes a body from the given composite, and optionally searching its children recursively.\n     * @private\n     * @method removeBody\n     * @param {composite} composite\n     * @param {body} body\n     * @param {boolean} [deep=false]\n     * @return {composite} The original composite with the body removed\n     */\n    Composite.removeBody = function(composite, body, deep) {\n        var position = Common.indexOf(composite.bodies, body);\n        if (position !== -1) {\n            Composite.removeBodyAt(composite, position);\n            Composite.setModified(composite, true, true, false);\n        }\n\n        if (deep) {\n            for (var i = 0; i < composite.composites.length; i++){\n                Composite.removeBody(composite.composites[i], body, true);\n            }\n        }\n\n        return composite;\n    };\n\n    /**\n     * Removes a body from the given composite.\n     * @private\n     * @method removeBodyAt\n     * @param {composite} composite\n     * @param {number} position\n     * @return {composite} The original composite with the body removed\n     */\n    Composite.removeBodyAt = function(composite, position) {\n        composite.bodies.splice(position, 1);\n        Composite.setModified(composite, true, true, false);\n        return composite;\n    };\n\n    /**\n     * Adds a constraint to the given composite.\n     * @private\n     * @method addConstraint\n     * @param {composite} composite\n     * @param {constraint} constraint\n     * @return {composite} The original composite with the constraint added\n     */\n    Composite.addConstraint = function(composite, constraint) {\n        composite.constraints.push(constraint);\n        Composite.setModified(composite, true, true, false);\n        return composite;\n    };\n\n    /**\n     * Removes a constraint from the given composite, and optionally searching its children recursively.\n     * @private\n     * @method removeConstraint\n     * @param {composite} composite\n     * @param {constraint} constraint\n     * @param {boolean} [deep=false]\n     * @return {composite} The original composite with the constraint removed\n     */\n    Composite.removeConstraint = function(composite, constraint, deep) {\n        var position = Common.indexOf(composite.constraints, constraint);\n        if (position !== -1) {\n            Composite.removeConstraintAt(composite, position);\n        }\n\n        if (deep) {\n            for (var i = 0; i < composite.composites.length; i++){\n                Composite.removeConstraint(composite.composites[i], constraint, true);\n            }\n        }\n\n        return composite;\n    };\n\n    /**\n     * Removes a body from the given composite.\n     * @private\n     * @method removeConstraintAt\n     * @param {composite} composite\n     * @param {number} position\n     * @return {composite} The original composite with the constraint removed\n     */\n    Composite.removeConstraintAt = function(composite, position) {\n        composite.constraints.splice(position, 1);\n        Composite.setModified(composite, true, true, false);\n        return composite;\n    };\n\n    /**\n     * Removes all bodies, constraints and composites from the given composite.\n     * Optionally clearing its children recursively.\n     * @method clear\n     * @param {composite} composite\n     * @param {boolean} keepStatic\n     * @param {boolean} [deep=false]\n     */\n    Composite.clear = function(composite, keepStatic, deep) {\n        if (deep) {\n            for (var i = 0; i < composite.composites.length; i++){\n                Composite.clear(composite.composites[i], keepStatic, true);\n            }\n        }\n\n        if (keepStatic) {\n            composite.bodies = composite.bodies.filter(function(body) { return body.isStatic; });\n        } else {\n            composite.bodies.length = 0;\n        }\n\n        composite.constraints.length = 0;\n        composite.composites.length = 0;\n        Composite.setModified(composite, true, true, false);\n\n        return composite;\n    };\n\n    /**\n     * Returns all bodies in the given composite, including all bodies in its children, recursively.\n     * @method allBodies\n     * @param {composite} composite\n     * @return {body[]} All the bodies\n     */\n    Composite.allBodies = function(composite) {\n        var bodies = [].concat(composite.bodies);\n\n        for (var i = 0; i < composite.composites.length; i++)\n            bodies = bodies.concat(Composite.allBodies(composite.composites[i]));\n\n        return bodies;\n    };\n\n    /**\n     * Returns all constraints in the given composite, including all constraints in its children, recursively.\n     * @method allConstraints\n     * @param {composite} composite\n     * @return {constraint[]} All the constraints\n     */\n    Composite.allConstraints = function(composite) {\n        var constraints = [].concat(composite.constraints);\n\n        for (var i = 0; i < composite.composites.length; i++)\n            constraints = constraints.concat(Composite.allConstraints(composite.composites[i]));\n\n        return constraints;\n    };\n\n    /**\n     * Returns all composites in the given composite, including all composites in its children, recursively.\n     * @method allComposites\n     * @param {composite} composite\n     * @return {composite[]} All the composites\n     */\n    Composite.allComposites = function(composite) {\n        var composites = [].concat(composite.composites);\n\n        for (var i = 0; i < composite.composites.length; i++)\n            composites = composites.concat(Composite.allComposites(composite.composites[i]));\n\n        return composites;\n    };\n\n    /**\n     * Searches the composite recursively for an object matching the type and id supplied, null if not found.\n     * @method get\n     * @param {composite} composite\n     * @param {number} id\n     * @param {string} type\n     * @return {object} The requested object, if found\n     */\n    Composite.get = function(composite, id, type) {\n        var objects,\n            object;\n\n        switch (type) {\n        case 'body':\n            objects = Composite.allBodies(composite);\n            break;\n        case 'constraint':\n            objects = Composite.allConstraints(composite);\n            break;\n        case 'composite':\n            objects = Composite.allComposites(composite).concat(composite);\n            break;\n        }\n\n        if (!objects)\n            return null;\n\n        object = objects.filter(function(object) {\n            return object.id.toString() === id.toString();\n        });\n\n        return object.length === 0 ? null : object[0];\n    };\n\n    /**\n     * Moves the given object(s) from compositeA to compositeB (equal to a remove followed by an add).\n     * @method move\n     * @param {compositeA} compositeA\n     * @param {object[]} objects\n     * @param {compositeB} compositeB\n     * @return {composite} Returns compositeA\n     */\n    Composite.move = function(compositeA, objects, compositeB) {\n        Composite.remove(compositeA, objects);\n        Composite.add(compositeB, objects);\n        return compositeA;\n    };\n\n    /**\n     * Assigns new ids for all objects in the composite, recursively.\n     * @method rebase\n     * @param {composite} composite\n     * @return {composite} Returns composite\n     */\n    Composite.rebase = function(composite) {\n        var objects = Composite.allBodies(composite)\n                        .concat(Composite.allConstraints(composite))\n                        .concat(Composite.allComposites(composite));\n\n        for (var i = 0; i < objects.length; i++) {\n            objects[i].id = Common.nextId();\n        }\n\n        Composite.setModified(composite, true, true, false);\n\n        return composite;\n    };\n\n    /**\n     * Translates all children in the composite by a given vector relative to their current positions,\n     * without imparting any velocity.\n     * @method translate\n     * @param {composite} composite\n     * @param {vector} translation\n     * @param {bool} [recursive=true]\n     */\n    Composite.translate = function(composite, translation, recursive) {\n        var bodies = recursive ? Composite.allBodies(composite) : composite.bodies;\n\n        for (var i = 0; i < bodies.length; i++) {\n            Body.translate(bodies[i], translation);\n        }\n\n        Composite.setModified(composite, true, true, false);\n\n        return composite;\n    };\n\n    /**\n     * Rotates all children in the composite by a given angle about the given point, without imparting any angular velocity.\n     * @method rotate\n     * @param {composite} composite\n     * @param {number} rotation\n     * @param {vector} point\n     * @param {bool} [recursive=true]\n     */\n    Composite.rotate = function(composite, rotation, point, recursive) {\n        var cos = Math.cos(rotation),\n            sin = Math.sin(rotation),\n            bodies = recursive ? Composite.allBodies(composite) : composite.bodies;\n\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i],\n                dx = body.position.x - point.x,\n                dy = body.position.y - point.y;\n\n            Body.setPosition(body, {\n                x: point.x + (dx * cos - dy * sin),\n                y: point.y + (dx * sin + dy * cos)\n            });\n\n            Body.rotate(body, rotation);\n        }\n\n        Composite.setModified(composite, true, true, false);\n\n        return composite;\n    };\n\n    /**\n     * Scales all children in the composite, including updating physical properties (mass, area, axes, inertia), from a world-space point.\n     * @method scale\n     * @param {composite} composite\n     * @param {number} scaleX\n     * @param {number} scaleY\n     * @param {vector} point\n     * @param {bool} [recursive=true]\n     */\n    Composite.scale = function(composite, scaleX, scaleY, point, recursive) {\n        var bodies = recursive ? Composite.allBodies(composite) : composite.bodies;\n\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i],\n                dx = body.position.x - point.x,\n                dy = body.position.y - point.y;\n\n            Body.setPosition(body, {\n                x: point.x + dx * scaleX,\n                y: point.y + dy * scaleY\n            });\n\n            Body.scale(body, scaleX, scaleY);\n        }\n\n        Composite.setModified(composite, true, true, false);\n\n        return composite;\n    };\n\n    /*\n    *\n    *  Events Documentation\n    *\n    */\n\n    /**\n    * Fired when a call to `Composite.add` is made, before objects have been added.\n    *\n    * @event beforeAdd\n    * @param {} event An event object\n    * @param {} event.object The object(s) to be added (may be a single body, constraint, composite or a mixed array of these)\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired when a call to `Composite.add` is made, after objects have been added.\n    *\n    * @event afterAdd\n    * @param {} event An event object\n    * @param {} event.object The object(s) that have been added (may be a single body, constraint, composite or a mixed array of these)\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired when a call to `Composite.remove` is made, before objects have been removed.\n    *\n    * @event beforeRemove\n    * @param {} event An event object\n    * @param {} event.object The object(s) to be removed (may be a single body, constraint, composite or a mixed array of these)\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired when a call to `Composite.remove` is made, after objects have been removed.\n    *\n    * @event afterRemove\n    * @param {} event An event object\n    * @param {} event.object The object(s) that have been removed (may be a single body, constraint, composite or a mixed array of these)\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n    /**\n     * An integer `Number` uniquely identifying number generated in `Composite.create` by `Common.nextId`.\n     *\n     * @property id\n     * @type number\n     */\n\n    /**\n     * A `String` denoting the type of object.\n     *\n     * @property type\n     * @type string\n     * @default \"composite\"\n     * @readOnly\n     */\n\n    /**\n     * An arbitrary `String` name to help the user identify and manage composites.\n     *\n     * @property label\n     * @type string\n     * @default \"Composite\"\n     */\n\n    /**\n     * A flag that specifies whether the composite has been modified during the current step.\n     * Most `Matter.Composite` methods will automatically set this flag to `true` to inform the engine of changes to be handled.\n     * If you need to change it manually, you should use the `Composite.setModified` method.\n     *\n     * @property isModified\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * The `Composite` that is the parent of this composite. It is automatically managed by the `Matter.Composite` methods.\n     *\n     * @property parent\n     * @type composite\n     * @default null\n     */\n\n    /**\n     * An array of `Body` that are _direct_ children of this composite.\n     * To add or remove bodies you should use `Composite.add` and `Composite.remove` methods rather than directly modifying this property.\n     * If you wish to recursively find all descendants, you should use the `Composite.allBodies` method.\n     *\n     * @property bodies\n     * @type body[]\n     * @default []\n     */\n\n    /**\n     * An array of `Constraint` that are _direct_ children of this composite.\n     * To add or remove constraints you should use `Composite.add` and `Composite.remove` methods rather than directly modifying this property.\n     * If you wish to recursively find all descendants, you should use the `Composite.allConstraints` method.\n     *\n     * @property constraints\n     * @type constraint[]\n     * @default []\n     */\n\n    /**\n     * An array of `Composite` that are _direct_ children of this composite.\n     * To add or remove composites you should use `Composite.add` and `Composite.remove` methods rather than directly modifying this property.\n     * If you wish to recursively find all descendants, you should use the `Composite.allComposites` method.\n     *\n     * @property composites\n     * @type composite[]\n     * @default []\n     */\n\n})();\n\n},{\"../core/Common\":14,\"../core/Events\":16,\"./Body\":1}],3:[function(require,module,exports){\n/**\n* The `Matter.World` module contains methods for creating and manipulating the world composite.\n* A `Matter.World` is a `Matter.Composite` body, which is a collection of `Matter.Body`, `Matter.Constraint` and other `Matter.Composite`.\n* A `Matter.World` has a few additional properties including `gravity` and `bounds`.\n* It is important to use the functions in the `Matter.Composite` module to modify the world composite, rather than directly modifying its properties.\n* There are also a few methods here that alias those in `Matter.Composite` for easier readability.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class World\n* @extends Composite\n*/\n\nvar World = {};\n\nmodule.exports = World;\n\nvar Composite = require('./Composite');\nvar Constraint = require('../constraint/Constraint');\nvar Common = require('../core/Common');\n\n(function() {\n\n    /**\n     * Creates a new world composite. The options parameter is an object that specifies any properties you wish to override the defaults.\n     * See the properties section below for detailed information on what you can pass via the `options` object.\n     * @method create\n     * @constructor\n     * @param {} options\n     * @return {world} A new world\n     */\n    World.create = function(options) {\n        var composite = Composite.create();\n\n        var defaults = {\n            label: 'World',\n            gravity: {\n                x: 0,\n                y: 1,\n                scale: 0.001\n            },\n            bounds: {\n                min: { x: -Infinity, y: -Infinity },\n                max: { x: Infinity, y: Infinity }\n            }\n        };\n\n        return Common.extend(composite, defaults, options);\n    };\n\n    /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n    /**\n     * The gravity to apply on the world.\n     *\n     * @property gravity\n     * @type object\n     */\n\n    /**\n     * The gravity x component.\n     *\n     * @property gravity.x\n     * @type object\n     * @default 0\n     */\n\n    /**\n     * The gravity y component.\n     *\n     * @property gravity.y\n     * @type object\n     * @default 1\n     */\n\n    /**\n     * The gravity scale factor.\n     *\n     * @property gravity.scale\n     * @type object\n     * @default 0.001\n     */\n\n    /**\n     * A `Bounds` object that defines the world bounds for collision detection.\n     *\n     * @property bounds\n     * @type bounds\n     * @default { min: { x: -Infinity, y: -Infinity }, max: { x: Infinity, y: Infinity } }\n     */\n\n    // World is a Composite body\n    // see src/module/Outro.js for these aliases:\n\n    /**\n     * An alias for Composite.clear\n     * @method clear\n     * @param {world} world\n     * @param {boolean} keepStatic\n     */\n\n    /**\n     * An alias for Composite.add\n     * @method addComposite\n     * @param {world} world\n     * @param {composite} composite\n     * @return {world} The original world with the objects from composite added\n     */\n\n     /**\n      * An alias for Composite.addBody\n      * @method addBody\n      * @param {world} world\n      * @param {body} body\n      * @return {world} The original world with the body added\n      */\n\n     /**\n      * An alias for Composite.addConstraint\n      * @method addConstraint\n      * @param {world} world\n      * @param {constraint} constraint\n      * @return {world} The original world with the constraint added\n      */\n\n})();\n\n},{\"../constraint/Constraint\":12,\"../core/Common\":14,\"./Composite\":2}],4:[function(require,module,exports){\n/**\n* The `Matter.Contact` module contains methods for creating and manipulating collision contacts.\n*\n* @class Contact\n*/\n\nvar Contact = {};\n\nmodule.exports = Contact;\n\n(function() {\n\n    /**\n     * Creates a new contact.\n     * @method create\n     * @param {vertex} vertex\n     * @return {contact} A new contact\n     */\n    Contact.create = function(vertex) {\n        return {\n            id: Contact.id(vertex),\n            vertex: vertex,\n            normalImpulse: 0,\n            tangentImpulse: 0\n        };\n    };\n\n    /**\n     * Generates a contact id.\n     * @method id\n     * @param {vertex} vertex\n     * @return {string} Unique contactID\n     */\n    Contact.id = function(vertex) {\n        return vertex.body.id + '_' + vertex.index;\n    };\n\n})();\n\n},{}],5:[function(require,module,exports){\n/**\n* The `Matter.Detector` module contains methods for detecting collisions given a set of pairs.\n*\n* @class Detector\n*/\n\n// TODO: speculative contacts\n\nvar Detector = {};\n\nmodule.exports = Detector;\n\nvar SAT = require('./SAT');\nvar Pair = require('./Pair');\nvar Bounds = require('../geometry/Bounds');\n\n(function() {\n\n    /**\n     * Finds all collisions given a list of pairs.\n     * @method collisions\n     * @param {pair[]} broadphasePairs\n     * @param {engine} engine\n     * @return {array} collisions\n     */\n    Detector.collisions = function(broadphasePairs, engine) {\n        var collisions = [],\n            pairsTable = engine.pairs.table;\n\n\n        for (var i = 0; i < broadphasePairs.length; i++) {\n            var bodyA = broadphasePairs[i][0],\n                bodyB = broadphasePairs[i][1];\n\n            if ((bodyA.isStatic || bodyA.isSleeping) && (bodyB.isStatic || bodyB.isSleeping))\n                continue;\n\n            if (!Detector.canCollide(bodyA.collisionFilter, bodyB.collisionFilter))\n                continue;\n\n\n            // mid phase\n            if (Bounds.overlaps(bodyA.bounds, bodyB.bounds)) {\n                for (var j = bodyA.parts.length > 1 ? 1 : 0; j < bodyA.parts.length; j++) {\n                    var partA = bodyA.parts[j];\n\n                    for (var k = bodyB.parts.length > 1 ? 1 : 0; k < bodyB.parts.length; k++) {\n                        var partB = bodyB.parts[k];\n\n                        if ((partA === bodyA && partB === bodyB) || Bounds.overlaps(partA.bounds, partB.bounds)) {\n                            // find a previous collision we could reuse\n                            var pairId = Pair.id(partA, partB),\n                                pair = pairsTable[pairId],\n                                previousCollision;\n\n                            if (pair && pair.isActive) {\n                                previousCollision = pair.collision;\n                            } else {\n                                previousCollision = null;\n                            }\n\n                            // narrow phase\n                            var collision = SAT.collides(partA, partB, previousCollision);\n\n\n                            if (collision.collided) {\n                                collisions.push(collision);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        return collisions;\n    };\n\n    /**\n     * Returns `true` if both supplied collision filters will allow a collision to occur.\n     * See `body.collisionFilter` for more information.\n     * @method canCollide\n     * @param {} filterA\n     * @param {} filterB\n     * @return {bool} `true` if collision can occur\n     */\n    Detector.canCollide = function(filterA, filterB) {\n        if (filterA.group === filterB.group && filterA.group !== 0)\n            return filterA.group > 0;\n\n        return (filterA.mask & filterB.category) !== 0 && (filterB.mask & filterA.category) !== 0;\n    };\n\n})();\n\n},{\"../geometry/Bounds\":24,\"./Pair\":7,\"./SAT\":11}],6:[function(require,module,exports){\n/**\n* The `Matter.Grid` module contains methods for creating and manipulating collision broadphase grid structures.\n*\n* @class Grid\n*/\n\nvar Grid = {};\n\nmodule.exports = Grid;\n\nvar Pair = require('./Pair');\nvar Detector = require('./Detector');\nvar Common = require('../core/Common');\n\n(function() {\n\n    /**\n     * Creates a new grid.\n     * @method create\n     * @param {} options\n     * @return {grid} A new grid\n     */\n    Grid.create = function(options) {\n        var defaults = {\n            controller: Grid,\n            detector: Detector.collisions,\n            buckets: {},\n            pairs: {},\n            pairsList: [],\n            bucketWidth: 48,\n            bucketHeight: 48\n        };\n\n        return Common.extend(defaults, options);\n    };\n\n    /**\n     * The width of a single grid bucket.\n     *\n     * @property bucketWidth\n     * @type number\n     * @default 48\n     */\n\n    /**\n     * The height of a single grid bucket.\n     *\n     * @property bucketHeight\n     * @type number\n     * @default 48\n     */\n\n    /**\n     * Updates the grid.\n     * @method update\n     * @param {grid} grid\n     * @param {body[]} bodies\n     * @param {engine} engine\n     * @param {boolean} forceUpdate\n     */\n    Grid.update = function(grid, bodies, engine, forceUpdate) {\n        var i, col, row,\n            world = engine.world,\n            buckets = grid.buckets,\n            bucket,\n            bucketId,\n            gridChanged = false;\n\n\n        for (i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n\n            if (body.isSleeping && !forceUpdate)\n                continue;\n\n            // don't update out of world bodies\n            if (body.bounds.max.x < world.bounds.min.x || body.bounds.min.x > world.bounds.max.x\n                || body.bounds.max.y < world.bounds.min.y || body.bounds.min.y > world.bounds.max.y)\n                continue;\n\n            var newRegion = _getRegion(grid, body);\n\n            // if the body has changed grid region\n            if (!body.region || newRegion.id !== body.region.id || forceUpdate) {\n\n\n                if (!body.region || forceUpdate)\n                    body.region = newRegion;\n\n                var union = _regionUnion(newRegion, body.region);\n\n                // update grid buckets affected by region change\n                // iterate over the union of both regions\n                for (col = union.startCol; col <= union.endCol; col++) {\n                    for (row = union.startRow; row <= union.endRow; row++) {\n                        bucketId = _getBucketId(col, row);\n                        bucket = buckets[bucketId];\n\n                        var isInsideNewRegion = (col >= newRegion.startCol && col <= newRegion.endCol\n                                                && row >= newRegion.startRow && row <= newRegion.endRow);\n\n                        var isInsideOldRegion = (col >= body.region.startCol && col <= body.region.endCol\n                                                && row >= body.region.startRow && row <= body.region.endRow);\n\n                        // remove from old region buckets\n                        if (!isInsideNewRegion && isInsideOldRegion) {\n                            if (isInsideOldRegion) {\n                                if (bucket)\n                                    _bucketRemoveBody(grid, bucket, body);\n                            }\n                        }\n\n                        // add to new region buckets\n                        if (body.region === newRegion || (isInsideNewRegion && !isInsideOldRegion) || forceUpdate) {\n                            if (!bucket)\n                                bucket = _createBucket(buckets, bucketId);\n                            _bucketAddBody(grid, bucket, body);\n                        }\n                    }\n                }\n\n                // set the new region\n                body.region = newRegion;\n\n                // flag changes so we can update pairs\n                gridChanged = true;\n            }\n        }\n\n        // update pairs list only if pairs changed (i.e. a body changed region)\n        if (gridChanged)\n            grid.pairsList = _createActivePairsList(grid);\n    };\n\n    /**\n     * Clears the grid.\n     * @method clear\n     * @param {grid} grid\n     */\n    Grid.clear = function(grid) {\n        grid.buckets = {};\n        grid.pairs = {};\n        grid.pairsList = [];\n    };\n\n    /**\n     * Finds the union of two regions.\n     * @method _regionUnion\n     * @private\n     * @param {} regionA\n     * @param {} regionB\n     * @return {} region\n     */\n    var _regionUnion = function(regionA, regionB) {\n        var startCol = Math.min(regionA.startCol, regionB.startCol),\n            endCol = Math.max(regionA.endCol, regionB.endCol),\n            startRow = Math.min(regionA.startRow, regionB.startRow),\n            endRow = Math.max(regionA.endRow, regionB.endRow);\n\n        return _createRegion(startCol, endCol, startRow, endRow);\n    };\n\n    /**\n     * Gets the region a given body falls in for a given grid.\n     * @method _getRegion\n     * @private\n     * @param {} grid\n     * @param {} body\n     * @return {} region\n     */\n    var _getRegion = function(grid, body) {\n        var bounds = body.bounds,\n            startCol = Math.floor(bounds.min.x / grid.bucketWidth),\n            endCol = Math.floor(bounds.max.x / grid.bucketWidth),\n            startRow = Math.floor(bounds.min.y / grid.bucketHeight),\n            endRow = Math.floor(bounds.max.y / grid.bucketHeight);\n\n        return _createRegion(startCol, endCol, startRow, endRow);\n    };\n\n    /**\n     * Creates a region.\n     * @method _createRegion\n     * @private\n     * @param {} startCol\n     * @param {} endCol\n     * @param {} startRow\n     * @param {} endRow\n     * @return {} region\n     */\n    var _createRegion = function(startCol, endCol, startRow, endRow) {\n        return {\n            id: startCol + ',' + endCol + ',' + startRow + ',' + endRow,\n            startCol: startCol,\n            endCol: endCol,\n            startRow: startRow,\n            endRow: endRow\n        };\n    };\n\n    /**\n     * Gets the bucket id at the given position.\n     * @method _getBucketId\n     * @private\n     * @param {} column\n     * @param {} row\n     * @return {string} bucket id\n     */\n    var _getBucketId = function(column, row) {\n        return column + ',' + row;\n    };\n\n    /**\n     * Creates a bucket.\n     * @method _createBucket\n     * @private\n     * @param {} buckets\n     * @param {} bucketId\n     * @return {} bucket\n     */\n    var _createBucket = function(buckets, bucketId) {\n        var bucket = buckets[bucketId] = [];\n        return bucket;\n    };\n\n    /**\n     * Adds a body to a bucket.\n     * @method _bucketAddBody\n     * @private\n     * @param {} grid\n     * @param {} bucket\n     * @param {} body\n     */\n    var _bucketAddBody = function(grid, bucket, body) {\n        // add new pairs\n        for (var i = 0; i < bucket.length; i++) {\n            var bodyB = bucket[i];\n\n            if (body.id === bodyB.id || (body.isStatic && bodyB.isStatic))\n                continue;\n\n            // keep track of the number of buckets the pair exists in\n            // important for Grid.update to work\n            var pairId = Pair.id(body, bodyB),\n                pair = grid.pairs[pairId];\n\n            if (pair) {\n                pair[2] += 1;\n            } else {\n                grid.pairs[pairId] = [body, bodyB, 1];\n            }\n        }\n\n        // add to bodies (after pairs, otherwise pairs with self)\n        bucket.push(body);\n    };\n\n    /**\n     * Removes a body from a bucket.\n     * @method _bucketRemoveBody\n     * @private\n     * @param {} grid\n     * @param {} bucket\n     * @param {} body\n     */\n    var _bucketRemoveBody = function(grid, bucket, body) {\n        // remove from bucket\n        bucket.splice(Common.indexOf(bucket, body), 1);\n\n        // update pair counts\n        for (var i = 0; i < bucket.length; i++) {\n            // keep track of the number of buckets the pair exists in\n            // important for _createActivePairsList to work\n            var bodyB = bucket[i],\n                pairId = Pair.id(body, bodyB),\n                pair = grid.pairs[pairId];\n\n            if (pair)\n                pair[2] -= 1;\n        }\n    };\n\n    /**\n     * Generates a list of the active pairs in the grid.\n     * @method _createActivePairsList\n     * @private\n     * @param {} grid\n     * @return [] pairs\n     */\n    var _createActivePairsList = function(grid) {\n        var pairKeys,\n            pair,\n            pairs = [];\n\n        // grid.pairs is used as a hashmap\n        pairKeys = Common.keys(grid.pairs);\n\n        // iterate over grid.pairs\n        for (var k = 0; k < pairKeys.length; k++) {\n            pair = grid.pairs[pairKeys[k]];\n\n            // if pair exists in at least one bucket\n            // it is a pair that needs further collision testing so push it\n            if (pair[2] > 0) {\n                pairs.push(pair);\n            } else {\n                delete grid.pairs[pairKeys[k]];\n            }\n        }\n\n        return pairs;\n    };\n\n})();\n\n},{\"../core/Common\":14,\"./Detector\":5,\"./Pair\":7}],7:[function(require,module,exports){\n/**\n* The `Matter.Pair` module contains methods for creating and manipulating collision pairs.\n*\n* @class Pair\n*/\n\nvar Pair = {};\n\nmodule.exports = Pair;\n\nvar Contact = require('./Contact');\n\n(function() {\n\n    /**\n     * Creates a pair.\n     * @method create\n     * @param {collision} collision\n     * @param {number} timestamp\n     * @return {pair} A new pair\n     */\n    Pair.create = function(collision, timestamp) {\n        var bodyA = collision.bodyA,\n            bodyB = collision.bodyB,\n            parentA = collision.parentA,\n            parentB = collision.parentB;\n\n        var pair = {\n            id: Pair.id(bodyA, bodyB),\n            bodyA: bodyA,\n            bodyB: bodyB,\n            contacts: {},\n            activeContacts: [],\n            separation: 0,\n            isActive: true,\n            isSensor: bodyA.isSensor || bodyB.isSensor,\n            timeCreated: timestamp,\n            timeUpdated: timestamp,\n            inverseMass: parentA.inverseMass + parentB.inverseMass,\n            friction: Math.min(parentA.friction, parentB.friction),\n            frictionStatic: Math.max(parentA.frictionStatic, parentB.frictionStatic),\n            restitution: Math.max(parentA.restitution, parentB.restitution),\n            slop: Math.max(parentA.slop, parentB.slop)\n        };\n\n        Pair.update(pair, collision, timestamp);\n\n        return pair;\n    };\n\n    /**\n     * Updates a pair given a collision.\n     * @method update\n     * @param {pair} pair\n     * @param {collision} collision\n     * @param {number} timestamp\n     */\n    Pair.update = function(pair, collision, timestamp) {\n        var contacts = pair.contacts,\n            supports = collision.supports,\n            activeContacts = pair.activeContacts,\n            parentA = collision.parentA,\n            parentB = collision.parentB;\n\n        pair.collision = collision;\n        pair.inverseMass = parentA.inverseMass + parentB.inverseMass;\n        pair.friction = Math.min(parentA.friction, parentB.friction);\n        pair.frictionStatic = Math.max(parentA.frictionStatic, parentB.frictionStatic);\n        pair.restitution = Math.max(parentA.restitution, parentB.restitution);\n        pair.slop = Math.max(parentA.slop, parentB.slop);\n        activeContacts.length = 0;\n\n        if (collision.collided) {\n            for (var i = 0; i < supports.length; i++) {\n                var support = supports[i],\n                    contactId = Contact.id(support),\n                    contact = contacts[contactId];\n\n                if (contact) {\n                    activeContacts.push(contact);\n                } else {\n                    activeContacts.push(contacts[contactId] = Contact.create(support));\n                }\n            }\n\n            pair.separation = collision.depth;\n            Pair.setActive(pair, true, timestamp);\n        } else {\n            if (pair.isActive === true)\n                Pair.setActive(pair, false, timestamp);\n        }\n    };\n\n    /**\n     * Set a pair as active or inactive.\n     * @method setActive\n     * @param {pair} pair\n     * @param {bool} isActive\n     * @param {number} timestamp\n     */\n    Pair.setActive = function(pair, isActive, timestamp) {\n        if (isActive) {\n            pair.isActive = true;\n            pair.timeUpdated = timestamp;\n        } else {\n            pair.isActive = false;\n            pair.activeContacts.length = 0;\n        }\n    };\n\n    /**\n     * Get the id for the given pair.\n     * @method id\n     * @param {body} bodyA\n     * @param {body} bodyB\n     * @return {string} Unique pairId\n     */\n    Pair.id = function(bodyA, bodyB) {\n        if (bodyA.id < bodyB.id) {\n            return bodyA.id + '_' + bodyB.id;\n        } else {\n            return bodyB.id + '_' + bodyA.id;\n        }\n    };\n\n})();\n\n},{\"./Contact\":4}],8:[function(require,module,exports){\n/**\n* The `Matter.Pairs` module contains methods for creating and manipulating collision pair sets.\n*\n* @class Pairs\n*/\n\nvar Pairs = {};\n\nmodule.exports = Pairs;\n\nvar Pair = require('./Pair');\nvar Common = require('../core/Common');\n\n(function() {\n\n    var _pairMaxIdleLife = 1000;\n\n    /**\n     * Creates a new pairs structure.\n     * @method create\n     * @param {object} options\n     * @return {pairs} A new pairs structure\n     */\n    Pairs.create = function(options) {\n        return Common.extend({\n            table: {},\n            list: [],\n            collisionStart: [],\n            collisionActive: [],\n            collisionEnd: []\n        }, options);\n    };\n\n    /**\n     * Updates pairs given a list of collisions.\n     * @method update\n     * @param {object} pairs\n     * @param {collision[]} collisions\n     * @param {number} timestamp\n     */\n    Pairs.update = function(pairs, collisions, timestamp) {\n        var pairsList = pairs.list,\n            pairsTable = pairs.table,\n            collisionStart = pairs.collisionStart,\n            collisionEnd = pairs.collisionEnd,\n            collisionActive = pairs.collisionActive,\n            activePairIds = [],\n            collision,\n            pairId,\n            pair,\n            i;\n\n        // clear collision state arrays, but maintain old reference\n        collisionStart.length = 0;\n        collisionEnd.length = 0;\n        collisionActive.length = 0;\n\n        for (i = 0; i < collisions.length; i++) {\n            collision = collisions[i];\n\n            if (collision.collided) {\n                pairId = Pair.id(collision.bodyA, collision.bodyB);\n                activePairIds.push(pairId);\n\n                pair = pairsTable[pairId];\n\n                if (pair) {\n                    // pair already exists (but may or may not be active)\n                    if (pair.isActive) {\n                        // pair exists and is active\n                        collisionActive.push(pair);\n                    } else {\n                        // pair exists but was inactive, so a collision has just started again\n                        collisionStart.push(pair);\n                    }\n\n                    // update the pair\n                    Pair.update(pair, collision, timestamp);\n                } else {\n                    // pair did not exist, create a new pair\n                    pair = Pair.create(collision, timestamp);\n                    pairsTable[pairId] = pair;\n\n                    // push the new pair\n                    collisionStart.push(pair);\n                    pairsList.push(pair);\n                }\n            }\n        }\n\n        // deactivate previously active pairs that are now inactive\n        for (i = 0; i < pairsList.length; i++) {\n            pair = pairsList[i];\n            if (pair.isActive && Common.indexOf(activePairIds, pair.id) === -1) {\n                Pair.setActive(pair, false, timestamp);\n                collisionEnd.push(pair);\n            }\n        }\n    };\n\n    /**\n     * Finds and removes pairs that have been inactive for a set amount of time.\n     * @method removeOld\n     * @param {object} pairs\n     * @param {number} timestamp\n     */\n    Pairs.removeOld = function(pairs, timestamp) {\n        var pairsList = pairs.list,\n            pairsTable = pairs.table,\n            indexesToRemove = [],\n            pair,\n            collision,\n            pairIndex,\n            i;\n\n        for (i = 0; i < pairsList.length; i++) {\n            pair = pairsList[i];\n            collision = pair.collision;\n\n            // never remove sleeping pairs\n            if (collision.bodyA.isSleeping || collision.bodyB.isSleeping) {\n                pair.timeUpdated = timestamp;\n                continue;\n            }\n\n            // if pair is inactive for too long, mark it to be removed\n            if (timestamp - pair.timeUpdated > _pairMaxIdleLife) {\n                indexesToRemove.push(i);\n            }\n        }\n\n        // remove marked pairs\n        for (i = 0; i < indexesToRemove.length; i++) {\n            pairIndex = indexesToRemove[i] - i;\n            pair = pairsList[pairIndex];\n            delete pairsTable[pair.id];\n            pairsList.splice(pairIndex, 1);\n        }\n    };\n\n    /**\n     * Clears the given pairs structure.\n     * @method clear\n     * @param {pairs} pairs\n     * @return {pairs} pairs\n     */\n    Pairs.clear = function(pairs) {\n        pairs.table = {};\n        pairs.list.length = 0;\n        pairs.collisionStart.length = 0;\n        pairs.collisionActive.length = 0;\n        pairs.collisionEnd.length = 0;\n        return pairs;\n    };\n\n})();\n\n},{\"../core/Common\":14,\"./Pair\":7}],9:[function(require,module,exports){\n/**\n* The `Matter.Query` module contains methods for performing collision queries.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Query\n*/\n\nvar Query = {};\n\nmodule.exports = Query;\n\nvar Vector = require('../geometry/Vector');\nvar SAT = require('./SAT');\nvar Bounds = require('../geometry/Bounds');\nvar Bodies = require('../factory/Bodies');\nvar Vertices = require('../geometry/Vertices');\n\n(function() {\n\n    /**\n     * Casts a ray segment against a set of bodies and returns all collisions, ray width is optional. Intersection points are not provided.\n     * @method ray\n     * @param {body[]} bodies\n     * @param {vector} startPoint\n     * @param {vector} endPoint\n     * @param {number} [rayWidth]\n     * @return {object[]} Collisions\n     */\n    Query.ray = function(bodies, startPoint, endPoint, rayWidth) {\n        rayWidth = rayWidth || 1e-100;\n\n        var rayAngle = Vector.angle(startPoint, endPoint),\n            rayLength = Vector.magnitude(Vector.sub(startPoint, endPoint)),\n            rayX = (endPoint.x + startPoint.x) * 0.5,\n            rayY = (endPoint.y + startPoint.y) * 0.5,\n            ray = Bodies.rectangle(rayX, rayY, rayLength, rayWidth, { angle: rayAngle }),\n            collisions = [];\n\n        for (var i = 0; i < bodies.length; i++) {\n            var bodyA = bodies[i];\n\n            if (Bounds.overlaps(bodyA.bounds, ray.bounds)) {\n                for (var j = bodyA.parts.length === 1 ? 0 : 1; j < bodyA.parts.length; j++) {\n                    var part = bodyA.parts[j];\n\n                    if (Bounds.overlaps(part.bounds, ray.bounds)) {\n                        var collision = SAT.collides(part, ray);\n                        if (collision.collided) {\n                            collision.body = collision.bodyA = collision.bodyB = bodyA;\n                            collisions.push(collision);\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n\n        return collisions;\n    };\n\n    /**\n     * Returns all bodies whose bounds are inside (or outside if set) the given set of bounds, from the given set of bodies.\n     * @method region\n     * @param {body[]} bodies\n     * @param {bounds} bounds\n     * @param {bool} [outside=false]\n     * @return {body[]} The bodies matching the query\n     */\n    Query.region = function(bodies, bounds, outside) {\n        var result = [];\n\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i],\n                overlaps = Bounds.overlaps(body.bounds, bounds);\n            if ((overlaps && !outside) || (!overlaps && outside))\n                result.push(body);\n        }\n\n        return result;\n    };\n\n    /**\n     * Returns all bodies whose vertices contain the given point, from the given set of bodies.\n     * @method point\n     * @param {body[]} bodies\n     * @param {vector} point\n     * @return {body[]} The bodies matching the query\n     */\n    Query.point = function(bodies, point) {\n        var result = [];\n\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n\n            if (Bounds.contains(body.bounds, point)) {\n                for (var j = body.parts.length === 1 ? 0 : 1; j < body.parts.length; j++) {\n                    var part = body.parts[j];\n\n                    if (Bounds.contains(part.bounds, point)\n                        && Vertices.contains(part.vertices, point)) {\n                        result.push(body);\n                        break;\n                    }\n                }\n            }\n        }\n\n        return result;\n    };\n\n})();\n\n},{\"../factory/Bodies\":21,\"../geometry/Bounds\":24,\"../geometry/Vector\":26,\"../geometry/Vertices\":27,\"./SAT\":11}],10:[function(require,module,exports){\n/**\n* The `Matter.Resolver` module contains methods for resolving collision pairs.\n*\n* @class Resolver\n*/\n\nvar Resolver = {};\n\nmodule.exports = Resolver;\n\nvar Vertices = require('../geometry/Vertices');\nvar Vector = require('../geometry/Vector');\nvar Common = require('../core/Common');\nvar Bounds = require('../geometry/Bounds');\n\n(function() {\n\n    Resolver._restingThresh = 4;\n    Resolver._restingThreshTangent = 6;\n    Resolver._positionDampen = 0.9;\n    Resolver._positionWarming = 0.8;\n    Resolver._frictionNormalMultiplier = 5;\n\n    /**\n     * Prepare pairs for position solving.\n     * @method preSolvePosition\n     * @param {pair[]} pairs\n     */\n    Resolver.preSolvePosition = function(pairs) {\n        var i,\n            pair,\n            activeCount;\n\n        // find total contacts on each body\n        for (i = 0; i < pairs.length; i++) {\n            pair = pairs[i];\n\n            if (!pair.isActive)\n                continue;\n\n            activeCount = pair.activeContacts.length;\n            pair.collision.parentA.totalContacts += activeCount;\n            pair.collision.parentB.totalContacts += activeCount;\n        }\n    };\n\n    /**\n     * Find a solution for pair positions.\n     * @method solvePosition\n     * @param {pair[]} pairs\n     * @param {number} timeScale\n     */\n    Resolver.solvePosition = function(pairs, timeScale) {\n        var i,\n            pair,\n            collision,\n            bodyA,\n            bodyB,\n            normal,\n            bodyBtoA,\n            contactShare,\n            positionImpulse,\n            contactCount = {},\n            tempA = Vector._temp[0],\n            tempB = Vector._temp[1],\n            tempC = Vector._temp[2],\n            tempD = Vector._temp[3];\n\n        // find impulses required to resolve penetration\n        for (i = 0; i < pairs.length; i++) {\n            pair = pairs[i];\n\n            if (!pair.isActive || pair.isSensor)\n                continue;\n\n            collision = pair.collision;\n            bodyA = collision.parentA;\n            bodyB = collision.parentB;\n            normal = collision.normal;\n\n            // get current separation between body edges involved in collision\n            bodyBtoA = Vector.sub(Vector.add(bodyB.positionImpulse, bodyB.position, tempA),\n                                    Vector.add(bodyA.positionImpulse,\n                                        Vector.sub(bodyB.position, collision.penetration, tempB), tempC), tempD);\n\n            pair.separation = Vector.dot(normal, bodyBtoA);\n        }\n\n        for (i = 0; i < pairs.length; i++) {\n            pair = pairs[i];\n\n            if (!pair.isActive || pair.isSensor || pair.separation < 0)\n                continue;\n\n            collision = pair.collision;\n            bodyA = collision.parentA;\n            bodyB = collision.parentB;\n            normal = collision.normal;\n            positionImpulse = (pair.separation - pair.slop) * timeScale;\n\n            if (bodyA.isStatic || bodyB.isStatic)\n                positionImpulse *= 2;\n\n            if (!(bodyA.isStatic || bodyA.isSleeping)) {\n                contactShare = Resolver._positionDampen / bodyA.totalContacts;\n                bodyA.positionImpulse.x += normal.x * positionImpulse * contactShare;\n                bodyA.positionImpulse.y += normal.y * positionImpulse * contactShare;\n            }\n\n            if (!(bodyB.isStatic || bodyB.isSleeping)) {\n                contactShare = Resolver._positionDampen / bodyB.totalContacts;\n                bodyB.positionImpulse.x -= normal.x * positionImpulse * contactShare;\n                bodyB.positionImpulse.y -= normal.y * positionImpulse * contactShare;\n            }\n        }\n    };\n\n    /**\n     * Apply position resolution.\n     * @method postSolvePosition\n     * @param {body[]} bodies\n     */\n    Resolver.postSolvePosition = function(bodies) {\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n\n            // reset contact count\n            body.totalContacts = 0;\n\n            if (body.positionImpulse.x !== 0 || body.positionImpulse.y !== 0) {\n                // update body geometry\n                for (var j = 0; j < body.parts.length; j++) {\n                    var part = body.parts[j];\n                    Vertices.translate(part.vertices, body.positionImpulse);\n                    Bounds.update(part.bounds, part.vertices, body.velocity);\n                    part.position.x += body.positionImpulse.x;\n                    part.position.y += body.positionImpulse.y;\n                }\n\n                // move the body without changing velocity\n                body.positionPrev.x += body.positionImpulse.x;\n                body.positionPrev.y += body.positionImpulse.y;\n\n                if (Vector.dot(body.positionImpulse, body.velocity) < 0) {\n                    // reset cached impulse if the body has velocity along it\n                    body.positionImpulse.x = 0;\n                    body.positionImpulse.y = 0;\n                } else {\n                    // warm the next iteration\n                    body.positionImpulse.x *= Resolver._positionWarming;\n                    body.positionImpulse.y *= Resolver._positionWarming;\n                }\n            }\n        }\n    };\n\n    /**\n     * Prepare pairs for velocity solving.\n     * @method preSolveVelocity\n     * @param {pair[]} pairs\n     */\n    Resolver.preSolveVelocity = function(pairs) {\n        var i,\n            j,\n            pair,\n            contacts,\n            collision,\n            bodyA,\n            bodyB,\n            normal,\n            tangent,\n            contact,\n            contactVertex,\n            normalImpulse,\n            tangentImpulse,\n            offset,\n            impulse = Vector._temp[0],\n            tempA = Vector._temp[1];\n\n        for (i = 0; i < pairs.length; i++) {\n            pair = pairs[i];\n\n            if (!pair.isActive || pair.isSensor)\n                continue;\n\n            contacts = pair.activeContacts;\n            collision = pair.collision;\n            bodyA = collision.parentA;\n            bodyB = collision.parentB;\n            normal = collision.normal;\n            tangent = collision.tangent;\n\n            // resolve each contact\n            for (j = 0; j < contacts.length; j++) {\n                contact = contacts[j];\n                contactVertex = contact.vertex;\n                normalImpulse = contact.normalImpulse;\n                tangentImpulse = contact.tangentImpulse;\n\n                if (normalImpulse !== 0 || tangentImpulse !== 0) {\n                    // total impulse from contact\n                    impulse.x = (normal.x * normalImpulse) + (tangent.x * tangentImpulse);\n                    impulse.y = (normal.y * normalImpulse) + (tangent.y * tangentImpulse);\n\n                    // apply impulse from contact\n                    if (!(bodyA.isStatic || bodyA.isSleeping)) {\n                        offset = Vector.sub(contactVertex, bodyA.position, tempA);\n                        bodyA.positionPrev.x += impulse.x * bodyA.inverseMass;\n                        bodyA.positionPrev.y += impulse.y * bodyA.inverseMass;\n                        bodyA.anglePrev += Vector.cross(offset, impulse) * bodyA.inverseInertia;\n                    }\n\n                    if (!(bodyB.isStatic || bodyB.isSleeping)) {\n                        offset = Vector.sub(contactVertex, bodyB.position, tempA);\n                        bodyB.positionPrev.x -= impulse.x * bodyB.inverseMass;\n                        bodyB.positionPrev.y -= impulse.y * bodyB.inverseMass;\n                        bodyB.anglePrev -= Vector.cross(offset, impulse) * bodyB.inverseInertia;\n                    }\n                }\n            }\n        }\n    };\n\n    /**\n     * Find a solution for pair velocities.\n     * @method solveVelocity\n     * @param {pair[]} pairs\n     * @param {number} timeScale\n     */\n    Resolver.solveVelocity = function(pairs, timeScale) {\n        var timeScaleSquared = timeScale * timeScale,\n            impulse = Vector._temp[0],\n            tempA = Vector._temp[1],\n            tempB = Vector._temp[2],\n            tempC = Vector._temp[3],\n            tempD = Vector._temp[4],\n            tempE = Vector._temp[5];\n\n        for (var i = 0; i < pairs.length; i++) {\n            var pair = pairs[i];\n\n            if (!pair.isActive || pair.isSensor)\n                continue;\n\n            var collision = pair.collision,\n                bodyA = collision.parentA,\n                bodyB = collision.parentB,\n                normal = collision.normal,\n                tangent = collision.tangent,\n                contacts = pair.activeContacts,\n                contactShare = 1 / contacts.length;\n\n            // update body velocities\n            bodyA.velocity.x = bodyA.position.x - bodyA.positionPrev.x;\n            bodyA.velocity.y = bodyA.position.y - bodyA.positionPrev.y;\n            bodyB.velocity.x = bodyB.position.x - bodyB.positionPrev.x;\n            bodyB.velocity.y = bodyB.position.y - bodyB.positionPrev.y;\n            bodyA.angularVelocity = bodyA.angle - bodyA.anglePrev;\n            bodyB.angularVelocity = bodyB.angle - bodyB.anglePrev;\n\n            // resolve each contact\n            for (var j = 0; j < contacts.length; j++) {\n                var contact = contacts[j],\n                    contactVertex = contact.vertex,\n                    offsetA = Vector.sub(contactVertex, bodyA.position, tempA),\n                    offsetB = Vector.sub(contactVertex, bodyB.position, tempB),\n                    velocityPointA = Vector.add(bodyA.velocity, Vector.mult(Vector.perp(offsetA), bodyA.angularVelocity), tempC),\n                    velocityPointB = Vector.add(bodyB.velocity, Vector.mult(Vector.perp(offsetB), bodyB.angularVelocity), tempD),\n                    relativeVelocity = Vector.sub(velocityPointA, velocityPointB, tempE),\n                    normalVelocity = Vector.dot(normal, relativeVelocity);\n\n                var tangentVelocity = Vector.dot(tangent, relativeVelocity),\n                    tangentSpeed = Math.abs(tangentVelocity),\n                    tangentVelocityDirection = Common.sign(tangentVelocity);\n\n                // raw impulses\n                var normalImpulse = (1 + pair.restitution) * normalVelocity,\n                    normalForce = Common.clamp(pair.separation + normalVelocity, 0, 1) * Resolver._frictionNormalMultiplier;\n\n                // coulomb friction\n                var tangentImpulse = tangentVelocity,\n                    maxFriction = Infinity;\n\n                if (tangentSpeed > pair.friction * pair.frictionStatic * normalForce * timeScaleSquared) {\n                    maxFriction = tangentSpeed;\n                    tangentImpulse = Common.clamp(\n                        pair.friction * tangentVelocityDirection * timeScaleSquared,\n                        -maxFriction, maxFriction\n                    );\n                }\n\n                // modify impulses accounting for mass, inertia and offset\n                var oAcN = Vector.cross(offsetA, normal),\n                    oBcN = Vector.cross(offsetB, normal),\n                    share = contactShare / (bodyA.inverseMass + bodyB.inverseMass + bodyA.inverseInertia * oAcN * oAcN  + bodyB.inverseInertia * oBcN * oBcN);\n\n                normalImpulse *= share;\n                tangentImpulse *= share;\n\n                // handle high velocity and resting collisions separately\n                if (normalVelocity < 0 && normalVelocity * normalVelocity > Resolver._restingThresh * timeScaleSquared) {\n                    // high normal velocity so clear cached contact normal impulse\n                    contact.normalImpulse = 0;\n                } else {\n                    // solve resting collision constraints using Erin Catto's method (GDC08)\n                    // impulse constraint tends to 0\n                    var contactNormalImpulse = contact.normalImpulse;\n                    contact.normalImpulse = Math.min(contact.normalImpulse + normalImpulse, 0);\n                    normalImpulse = contact.normalImpulse - contactNormalImpulse;\n                }\n\n                // handle high velocity and resting collisions separately\n                if (tangentVelocity * tangentVelocity > Resolver._restingThreshTangent * timeScaleSquared) {\n                    // high tangent velocity so clear cached contact tangent impulse\n                    contact.tangentImpulse = 0;\n                } else {\n                    // solve resting collision constraints using Erin Catto's method (GDC08)\n                    // tangent impulse tends to -tangentSpeed or +tangentSpeed\n                    var contactTangentImpulse = contact.tangentImpulse;\n                    contact.tangentImpulse = Common.clamp(contact.tangentImpulse + tangentImpulse, -maxFriction, maxFriction);\n                    tangentImpulse = contact.tangentImpulse - contactTangentImpulse;\n                }\n\n                // total impulse from contact\n                impulse.x = (normal.x * normalImpulse) + (tangent.x * tangentImpulse);\n                impulse.y = (normal.y * normalImpulse) + (tangent.y * tangentImpulse);\n\n                // apply impulse from contact\n                if (!(bodyA.isStatic || bodyA.isSleeping)) {\n                    bodyA.positionPrev.x += impulse.x * bodyA.inverseMass;\n                    bodyA.positionPrev.y += impulse.y * bodyA.inverseMass;\n                    bodyA.anglePrev += Vector.cross(offsetA, impulse) * bodyA.inverseInertia;\n                }\n\n                if (!(bodyB.isStatic || bodyB.isSleeping)) {\n                    bodyB.positionPrev.x -= impulse.x * bodyB.inverseMass;\n                    bodyB.positionPrev.y -= impulse.y * bodyB.inverseMass;\n                    bodyB.anglePrev -= Vector.cross(offsetB, impulse) * bodyB.inverseInertia;\n                }\n            }\n        }\n    };\n\n})();\n\n},{\"../core/Common\":14,\"../geometry/Bounds\":24,\"../geometry/Vector\":26,\"../geometry/Vertices\":27}],11:[function(require,module,exports){\n/**\n* The `Matter.SAT` module contains methods for detecting collisions using the Separating Axis Theorem.\n*\n* @class SAT\n*/\n\n// TODO: true circles and curves\n\nvar SAT = {};\n\nmodule.exports = SAT;\n\nvar Vertices = require('../geometry/Vertices');\nvar Vector = require('../geometry/Vector');\n\n(function() {\n\n    /**\n     * Detect collision between two bodies using the Separating Axis Theorem.\n     * @method collides\n     * @param {body} bodyA\n     * @param {body} bodyB\n     * @param {collision} previousCollision\n     * @return {collision} collision\n     */\n    SAT.collides = function(bodyA, bodyB, previousCollision) {\n        var overlapAB,\n            overlapBA,\n            minOverlap,\n            collision,\n            prevCol = previousCollision,\n            canReusePrevCol = false;\n\n        if (prevCol) {\n            // estimate total motion\n            var parentA = bodyA.parent,\n                parentB = bodyB.parent,\n                motion = parentA.speed * parentA.speed + parentA.angularSpeed * parentA.angularSpeed\n                       + parentB.speed * parentB.speed + parentB.angularSpeed * parentB.angularSpeed;\n\n            // we may be able to (partially) reuse collision result\n            // but only safe if collision was resting\n            canReusePrevCol = prevCol && prevCol.collided && motion < 0.2;\n\n            // reuse collision object\n            collision = prevCol;\n        } else {\n            collision = { collided: false, bodyA: bodyA, bodyB: bodyB };\n        }\n\n        if (prevCol && canReusePrevCol) {\n            // if we can reuse the collision result\n            // we only need to test the previously found axis\n            var axisBodyA = collision.axisBody,\n                axisBodyB = axisBodyA === bodyA ? bodyB : bodyA,\n                axes = [axisBodyA.axes[prevCol.axisNumber]];\n\n            minOverlap = _overlapAxes(axisBodyA.vertices, axisBodyB.vertices, axes);\n            collision.reused = true;\n\n            if (minOverlap.overlap <= 0) {\n                collision.collided = false;\n                return collision;\n            }\n        } else {\n            // if we can't reuse a result, perform a full SAT test\n\n            overlapAB = _overlapAxes(bodyA.vertices, bodyB.vertices, bodyA.axes);\n\n            if (overlapAB.overlap <= 0) {\n                collision.collided = false;\n                return collision;\n            }\n\n            overlapBA = _overlapAxes(bodyB.vertices, bodyA.vertices, bodyB.axes);\n\n            if (overlapBA.overlap <= 0) {\n                collision.collided = false;\n                return collision;\n            }\n\n            if (overlapAB.overlap < overlapBA.overlap) {\n                minOverlap = overlapAB;\n                collision.axisBody = bodyA;\n            } else {\n                minOverlap = overlapBA;\n                collision.axisBody = bodyB;\n            }\n\n            // important for reuse later\n            collision.axisNumber = minOverlap.axisNumber;\n        }\n\n        collision.bodyA = bodyA.id < bodyB.id ? bodyA : bodyB;\n        collision.bodyB = bodyA.id < bodyB.id ? bodyB : bodyA;\n        collision.collided = true;\n        collision.normal = minOverlap.axis;\n        collision.depth = minOverlap.overlap;\n        collision.parentA = collision.bodyA.parent;\n        collision.parentB = collision.bodyB.parent;\n\n        bodyA = collision.bodyA;\n        bodyB = collision.bodyB;\n\n        // ensure normal is facing away from bodyA\n        if (Vector.dot(collision.normal, Vector.sub(bodyB.position, bodyA.position)) > 0)\n            collision.normal = Vector.neg(collision.normal);\n\n        collision.tangent = Vector.perp(collision.normal);\n\n        collision.penetration = {\n            x: collision.normal.x * collision.depth,\n            y: collision.normal.y * collision.depth\n        };\n\n        // find support points, there is always either exactly one or two\n        var verticesB = _findSupports(bodyA, bodyB, collision.normal),\n            supports = collision.supports || [];\n        supports.length = 0;\n\n        // find the supports from bodyB that are inside bodyA\n        if (Vertices.contains(bodyA.vertices, verticesB[0]))\n            supports.push(verticesB[0]);\n\n        if (Vertices.contains(bodyA.vertices, verticesB[1]))\n            supports.push(verticesB[1]);\n\n        // find the supports from bodyA that are inside bodyB\n        if (supports.length < 2) {\n            var verticesA = _findSupports(bodyB, bodyA, Vector.neg(collision.normal));\n\n            if (Vertices.contains(bodyB.vertices, verticesA[0]))\n                supports.push(verticesA[0]);\n\n            if (supports.length < 2 && Vertices.contains(bodyB.vertices, verticesA[1]))\n                supports.push(verticesA[1]);\n        }\n\n        // account for the edge case of overlapping but no vertex containment\n        if (supports.length < 1)\n            supports = [verticesB[0]];\n\n        collision.supports = supports;\n\n        return collision;\n    };\n\n    /**\n     * Find the overlap between two sets of vertices.\n     * @method _overlapAxes\n     * @private\n     * @param {} verticesA\n     * @param {} verticesB\n     * @param {} axes\n     * @return result\n     */\n    var _overlapAxes = function(verticesA, verticesB, axes) {\n        var projectionA = Vector._temp[0],\n            projectionB = Vector._temp[1],\n            result = { overlap: Number.MAX_VALUE },\n            overlap,\n            axis;\n\n        for (var i = 0; i < axes.length; i++) {\n            axis = axes[i];\n\n            _projectToAxis(projectionA, verticesA, axis);\n            _projectToAxis(projectionB, verticesB, axis);\n\n            overlap = Math.min(projectionA.max - projectionB.min, projectionB.max - projectionA.min);\n\n            if (overlap <= 0) {\n                result.overlap = overlap;\n                return result;\n            }\n\n            if (overlap < result.overlap) {\n                result.overlap = overlap;\n                result.axis = axis;\n                result.axisNumber = i;\n            }\n        }\n\n        return result;\n    };\n\n    /**\n     * Projects vertices on an axis and returns an interval.\n     * @method _projectToAxis\n     * @private\n     * @param {} projection\n     * @param {} vertices\n     * @param {} axis\n     */\n    var _projectToAxis = function(projection, vertices, axis) {\n        var min = Vector.dot(vertices[0], axis),\n            max = min;\n\n        for (var i = 1; i < vertices.length; i += 1) {\n            var dot = Vector.dot(vertices[i], axis);\n\n            if (dot > max) {\n                max = dot;\n            } else if (dot < min) {\n                min = dot;\n            }\n        }\n\n        projection.min = min;\n        projection.max = max;\n    };\n\n    /**\n     * Finds supporting vertices given two bodies along a given direction using hill-climbing.\n     * @method _findSupports\n     * @private\n     * @param {} bodyA\n     * @param {} bodyB\n     * @param {} normal\n     * @return [vector]\n     */\n    var _findSupports = function(bodyA, bodyB, normal) {\n        var nearestDistance = Number.MAX_VALUE,\n            vertexToBody = Vector._temp[0],\n            vertices = bodyB.vertices,\n            bodyAPosition = bodyA.position,\n            distance,\n            vertex,\n            vertexA,\n            vertexB;\n\n        // find closest vertex on bodyB\n        for (var i = 0; i < vertices.length; i++) {\n            vertex = vertices[i];\n            vertexToBody.x = vertex.x - bodyAPosition.x;\n            vertexToBody.y = vertex.y - bodyAPosition.y;\n            distance = -Vector.dot(normal, vertexToBody);\n\n            if (distance < nearestDistance) {\n                nearestDistance = distance;\n                vertexA = vertex;\n            }\n        }\n\n        // find next closest vertex using the two connected to it\n        var prevIndex = vertexA.index - 1 >= 0 ? vertexA.index - 1 : vertices.length - 1;\n        vertex = vertices[prevIndex];\n        vertexToBody.x = vertex.x - bodyAPosition.x;\n        vertexToBody.y = vertex.y - bodyAPosition.y;\n        nearestDistance = -Vector.dot(normal, vertexToBody);\n        vertexB = vertex;\n\n        var nextIndex = (vertexA.index + 1) % vertices.length;\n        vertex = vertices[nextIndex];\n        vertexToBody.x = vertex.x - bodyAPosition.x;\n        vertexToBody.y = vertex.y - bodyAPosition.y;\n        distance = -Vector.dot(normal, vertexToBody);\n        if (distance < nearestDistance) {\n            vertexB = vertex;\n        }\n\n        return [vertexA, vertexB];\n    };\n\n})();\n\n},{\"../geometry/Vector\":26,\"../geometry/Vertices\":27}],12:[function(require,module,exports){\n/**\n* The `Matter.Constraint` module contains methods for creating and manipulating constraints.\n* Constraints are used for specifying that a fixed distance must be maintained between two bodies (or a body and a fixed world-space position).\n* The stiffness of constraints can be modified to create springs or elastic.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Constraint\n*/\n\n// TODO: fix instability issues with torque\n// TODO: linked constraints\n// TODO: breakable constraints\n// TODO: collision constraints\n// TODO: allow constrained bodies to sleep\n// TODO: handle 0 length constraints properly\n// TODO: impulse caching and warming\n\nvar Constraint = {};\n\nmodule.exports = Constraint;\n\nvar Vertices = require('../geometry/Vertices');\nvar Vector = require('../geometry/Vector');\nvar Sleeping = require('../core/Sleeping');\nvar Bounds = require('../geometry/Bounds');\nvar Axes = require('../geometry/Axes');\nvar Common = require('../core/Common');\n\n(function() {\n\n    var _minLength = 0.000001,\n        _minDifference = 0.001;\n\n    /**\n     * Creates a new constraint.\n     * All properties have default values, and many are pre-calculated automatically based on other properties.\n     * See the properties section below for detailed information on what you can pass via the `options` object.\n     * @method create\n     * @param {} options\n     * @return {constraint} constraint\n     */\n    Constraint.create = function(options) {\n        var constraint = options;\n\n        // if bodies defined but no points, use body centre\n        if (constraint.bodyA && !constraint.pointA)\n            constraint.pointA = { x: 0, y: 0 };\n        if (constraint.bodyB && !constraint.pointB)\n            constraint.pointB = { x: 0, y: 0 };\n\n        // calculate static length using initial world space points\n        var initialPointA = constraint.bodyA ? Vector.add(constraint.bodyA.position, constraint.pointA) : constraint.pointA,\n            initialPointB = constraint.bodyB ? Vector.add(constraint.bodyB.position, constraint.pointB) : constraint.pointB,\n            length = Vector.magnitude(Vector.sub(initialPointA, initialPointB));\n\n        constraint.length = constraint.length || length || _minLength;\n\n        // render\n        var render = {\n            visible: true,\n            lineWidth: 2,\n            strokeStyle: '#666'\n        };\n\n        constraint.render = Common.extend(render, constraint.render);\n\n        // option defaults\n        constraint.id = constraint.id || Common.nextId();\n        constraint.label = constraint.label || 'Constraint';\n        constraint.type = 'constraint';\n        constraint.stiffness = constraint.stiffness || 1;\n        constraint.angularStiffness = constraint.angularStiffness || 0;\n        constraint.angleA = constraint.bodyA ? constraint.bodyA.angle : constraint.angleA;\n        constraint.angleB = constraint.bodyB ? constraint.bodyB.angle : constraint.angleB;\n\n        return constraint;\n    };\n\n    /**\n     * Solves all constraints in a list of collisions.\n     * @private\n     * @method solveAll\n     * @param {constraint[]} constraints\n     * @param {number} timeScale\n     */\n    Constraint.solveAll = function(constraints, timeScale) {\n        for (var i = 0; i < constraints.length; i++) {\n            Constraint.solve(constraints[i], timeScale);\n        }\n    };\n\n    /**\n     * Solves a distance constraint with Gauss-Siedel method.\n     * @private\n     * @method solve\n     * @param {constraint} constraint\n     * @param {number} timeScale\n     */\n    Constraint.solve = function(constraint, timeScale) {\n        var bodyA = constraint.bodyA,\n            bodyB = constraint.bodyB,\n            pointA = constraint.pointA,\n            pointB = constraint.pointB;\n\n        // update reference angle\n        if (bodyA && !bodyA.isStatic) {\n            constraint.pointA = Vector.rotate(pointA, bodyA.angle - constraint.angleA);\n            constraint.angleA = bodyA.angle;\n        }\n\n        // update reference angle\n        if (bodyB && !bodyB.isStatic) {\n            constraint.pointB = Vector.rotate(pointB, bodyB.angle - constraint.angleB);\n            constraint.angleB = bodyB.angle;\n        }\n\n        var pointAWorld = pointA,\n            pointBWorld = pointB;\n\n        if (bodyA) pointAWorld = Vector.add(bodyA.position, pointA);\n        if (bodyB) pointBWorld = Vector.add(bodyB.position, pointB);\n\n        if (!pointAWorld || !pointBWorld)\n            return;\n\n        var delta = Vector.sub(pointAWorld, pointBWorld),\n            currentLength = Vector.magnitude(delta);\n\n        // prevent singularity\n        if (currentLength === 0)\n            currentLength = _minLength;\n\n        // solve distance constraint with Gauss-Siedel method\n        var difference = (currentLength - constraint.length) / currentLength,\n            normal = Vector.div(delta, currentLength),\n            force = Vector.mult(delta, difference * 0.5 * constraint.stiffness * timeScale * timeScale);\n\n        // if difference is very small, we can skip\n        if (Math.abs(1 - (currentLength / constraint.length)) < _minDifference * timeScale)\n            return;\n\n        var velocityPointA,\n            velocityPointB,\n            offsetA,\n            offsetB,\n            oAn,\n            oBn,\n            bodyADenom,\n            bodyBDenom;\n\n        if (bodyA && !bodyA.isStatic) {\n            // point body offset\n            offsetA = {\n                x: pointAWorld.x - bodyA.position.x + force.x,\n                y: pointAWorld.y - bodyA.position.y + force.y\n            };\n\n            // update velocity\n            bodyA.velocity.x = bodyA.position.x - bodyA.positionPrev.x;\n            bodyA.velocity.y = bodyA.position.y - bodyA.positionPrev.y;\n            bodyA.angularVelocity = bodyA.angle - bodyA.anglePrev;\n\n            // find point velocity and body mass\n            velocityPointA = Vector.add(bodyA.velocity, Vector.mult(Vector.perp(offsetA), bodyA.angularVelocity));\n            oAn = Vector.dot(offsetA, normal);\n            bodyADenom = bodyA.inverseMass + bodyA.inverseInertia * oAn * oAn;\n        } else {\n            velocityPointA = { x: 0, y: 0 };\n            bodyADenom = bodyA ? bodyA.inverseMass : 0;\n        }\n\n        if (bodyB && !bodyB.isStatic) {\n            // point body offset\n            offsetB = {\n                x: pointBWorld.x - bodyB.position.x - force.x,\n                y: pointBWorld.y - bodyB.position.y - force.y\n            };\n\n            // update velocity\n            bodyB.velocity.x = bodyB.position.x - bodyB.positionPrev.x;\n            bodyB.velocity.y = bodyB.position.y - bodyB.positionPrev.y;\n            bodyB.angularVelocity = bodyB.angle - bodyB.anglePrev;\n\n            // find point velocity and body mass\n            velocityPointB = Vector.add(bodyB.velocity, Vector.mult(Vector.perp(offsetB), bodyB.angularVelocity));\n            oBn = Vector.dot(offsetB, normal);\n            bodyBDenom = bodyB.inverseMass + bodyB.inverseInertia * oBn * oBn;\n        } else {\n            velocityPointB = { x: 0, y: 0 };\n            bodyBDenom = bodyB ? bodyB.inverseMass : 0;\n        }\n\n        var relativeVelocity = Vector.sub(velocityPointB, velocityPointA),\n            normalImpulse = Vector.dot(normal, relativeVelocity) / (bodyADenom + bodyBDenom);\n\n        if (normalImpulse > 0) normalImpulse = 0;\n\n        var normalVelocity = {\n            x: normal.x * normalImpulse,\n            y: normal.y * normalImpulse\n        };\n\n        var torque;\n\n        if (bodyA && !bodyA.isStatic) {\n            torque = Vector.cross(offsetA, normalVelocity) * bodyA.inverseInertia * (1 - constraint.angularStiffness);\n\n            // keep track of applied impulses for post solving\n            bodyA.constraintImpulse.x -= force.x;\n            bodyA.constraintImpulse.y -= force.y;\n            bodyA.constraintImpulse.angle += torque;\n\n            // apply forces\n            bodyA.position.x -= force.x;\n            bodyA.position.y -= force.y;\n            bodyA.angle += torque;\n        }\n\n        if (bodyB && !bodyB.isStatic) {\n            torque = Vector.cross(offsetB, normalVelocity) * bodyB.inverseInertia * (1 - constraint.angularStiffness);\n\n            // keep track of applied impulses for post solving\n            bodyB.constraintImpulse.x += force.x;\n            bodyB.constraintImpulse.y += force.y;\n            bodyB.constraintImpulse.angle -= torque;\n\n            // apply forces\n            bodyB.position.x += force.x;\n            bodyB.position.y += force.y;\n            bodyB.angle -= torque;\n        }\n\n    };\n\n    /**\n     * Performs body updates required after solving constraints.\n     * @private\n     * @method postSolveAll\n     * @param {body[]} bodies\n     */\n    Constraint.postSolveAll = function(bodies) {\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i],\n                impulse = body.constraintImpulse;\n\n            if (impulse.x === 0 && impulse.y === 0 && impulse.angle === 0) {\n                continue;\n            }\n\n            Sleeping.set(body, false);\n\n            // update geometry and reset\n            for (var j = 0; j < body.parts.length; j++) {\n                var part = body.parts[j];\n\n                Vertices.translate(part.vertices, impulse);\n\n                if (j > 0) {\n                    part.position.x += impulse.x;\n                    part.position.y += impulse.y;\n                }\n\n                if (impulse.angle !== 0) {\n                    Vertices.rotate(part.vertices, impulse.angle, body.position);\n                    Axes.rotate(part.axes, impulse.angle);\n                    if (j > 0) {\n                        Vector.rotateAbout(part.position, impulse.angle, body.position, part.position);\n                    }\n                }\n\n                Bounds.update(part.bounds, part.vertices, body.velocity);\n            }\n\n            impulse.angle = 0;\n            impulse.x = 0;\n            impulse.y = 0;\n        }\n    };\n\n    /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n    /**\n     * An integer `Number` uniquely identifying number generated in `Composite.create` by `Common.nextId`.\n     *\n     * @property id\n     * @type number\n     */\n\n    /**\n     * A `String` denoting the type of object.\n     *\n     * @property type\n     * @type string\n     * @default \"constraint\"\n     * @readOnly\n     */\n\n    /**\n     * An arbitrary `String` name to help the user identify and manage bodies.\n     *\n     * @property label\n     * @type string\n     * @default \"Constraint\"\n     */\n\n    /**\n     * An `Object` that defines the rendering properties to be consumed by the module `Matter.Render`.\n     *\n     * @property render\n     * @type object\n     */\n\n    /**\n     * A flag that indicates if the constraint should be rendered.\n     *\n     * @property render.visible\n     * @type boolean\n     * @default true\n     */\n\n    /**\n     * A `Number` that defines the line width to use when rendering the constraint outline.\n     * A value of `0` means no outline will be rendered.\n     *\n     * @property render.lineWidth\n     * @type number\n     * @default 2\n     */\n\n    /**\n     * A `String` that defines the stroke style to use when rendering the constraint outline.\n     * It is the same as when using a canvas, so it accepts CSS style property values.\n     *\n     * @property render.strokeStyle\n     * @type string\n     * @default a random colour\n     */\n\n    /**\n     * The first possible `Body` that this constraint is attached to.\n     *\n     * @property bodyA\n     * @type body\n     * @default null\n     */\n\n    /**\n     * The second possible `Body` that this constraint is attached to.\n     *\n     * @property bodyB\n     * @type body\n     * @default null\n     */\n\n    /**\n     * A `Vector` that specifies the offset of the constraint from center of the `constraint.bodyA` if defined, otherwise a world-space position.\n     *\n     * @property pointA\n     * @type vector\n     * @default { x: 0, y: 0 }\n     */\n\n    /**\n     * A `Vector` that specifies the offset of the constraint from center of the `constraint.bodyA` if defined, otherwise a world-space position.\n     *\n     * @property pointB\n     * @type vector\n     * @default { x: 0, y: 0 }\n     */\n\n    /**\n     * A `Number` that specifies the stiffness of the constraint, i.e. the rate at which it returns to its resting `constraint.length`.\n     * A value of `1` means the constraint should be very stiff.\n     * A value of `0.2` means the constraint acts like a soft spring.\n     *\n     * @property stiffness\n     * @type number\n     * @default 1\n     */\n\n    /**\n     * A `Number` that specifies the target resting length of the constraint.\n     * It is calculated automatically in `Constraint.create` from initial positions of the `constraint.bodyA` and `constraint.bodyB`.\n     *\n     * @property length\n     * @type number\n     */\n\n})();\n\n},{\"../core/Common\":14,\"../core/Sleeping\":20,\"../geometry/Axes\":23,\"../geometry/Bounds\":24,\"../geometry/Vector\":26,\"../geometry/Vertices\":27}],13:[function(require,module,exports){\n/**\n* The `Matter.MouseConstraint` module contains methods for creating mouse constraints.\n* Mouse constraints are used for allowing user interaction, providing the ability to move bodies via the mouse or touch.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class MouseConstraint\n*/\n\nvar MouseConstraint = {};\n\nmodule.exports = MouseConstraint;\n\nvar Vertices = require('../geometry/Vertices');\nvar Sleeping = require('../core/Sleeping');\nvar Mouse = require('../core/Mouse');\nvar Events = require('../core/Events');\nvar Detector = require('../collision/Detector');\nvar Constraint = require('./Constraint');\nvar Composite = require('../body/Composite');\nvar Common = require('../core/Common');\nvar Bounds = require('../geometry/Bounds');\n\n(function() {\n\n    /**\n     * Creates a new mouse constraint.\n     * All properties have default values, and many are pre-calculated automatically based on other properties.\n     * See the properties section below for detailed information on what you can pass via the `options` object.\n     * @method create\n     * @param {engine} engine\n     * @param {} options\n     * @return {MouseConstraint} A new MouseConstraint\n     */\n    MouseConstraint.create = function(engine, options) {\n        var mouse = (engine ? engine.mouse : null) || (options ? options.mouse : null);\n\n        if (!mouse) {\n            if (engine && engine.render && engine.render.canvas) {\n                mouse = Mouse.create(engine.render.canvas);\n            } else if (options && options.element) {\n                mouse = Mouse.create(options.element);\n            } else {\n                mouse = Mouse.create();\n                Common.log('MouseConstraint.create: options.mouse was undefined, options.element was undefined, may not function as expected', 'warn');\n            }\n        }\n\n        var constraint = Constraint.create({\n            label: 'Mouse Constraint',\n            pointA: mouse.position,\n            pointB: { x: 0, y: 0 },\n            length: 0.01,\n            stiffness: 0.1,\n            angularStiffness: 1,\n            render: {\n                strokeStyle: '#90EE90',\n                lineWidth: 3\n            }\n        });\n\n        var defaults = {\n            type: 'mouseConstraint',\n            mouse: mouse,\n            element: null,\n            body: null,\n            constraint: constraint,\n            collisionFilter: {\n                category: 0x0001,\n                mask: 0xFFFFFFFF,\n                group: 0\n            }\n        };\n\n        var mouseConstraint = Common.extend(defaults, options);\n\n        Events.on(engine, 'tick', function() {\n            var allBodies = Composite.allBodies(engine.world);\n            MouseConstraint.update(mouseConstraint, allBodies);\n            _triggerEvents(mouseConstraint);\n        });\n\n        return mouseConstraint;\n    };\n\n    /**\n     * Updates the given mouse constraint.\n     * @private\n     * @method update\n     * @param {MouseConstraint} mouseConstraint\n     * @param {body[]} bodies\n     */\n    MouseConstraint.update = function(mouseConstraint, bodies) {\n        var mouse = mouseConstraint.mouse,\n            constraint = mouseConstraint.constraint,\n            body = mouseConstraint.body;\n\n        if (mouse.button === 0) {\n            if (!constraint.bodyB) {\n                for (var i = 0; i < bodies.length; i++) {\n                    body = bodies[i];\n                    if (Bounds.contains(body.bounds, mouse.position)\n                            && Detector.canCollide(body.collisionFilter, mouseConstraint.collisionFilter)) {\n                        for (var j = body.parts.length > 1 ? 1 : 0; j < body.parts.length; j++) {\n                            var part = body.parts[j];\n                            if (Vertices.contains(part.vertices, mouse.position)) {\n                                constraint.pointA = mouse.position;\n                                constraint.bodyB = mouseConstraint.body = body;\n                                constraint.pointB = { x: mouse.position.x - body.position.x, y: mouse.position.y - body.position.y };\n                                constraint.angleB = body.angle;\n\n                                Sleeping.set(body, false);\n                                Events.trigger(mouseConstraint, 'startdrag', { mouse: mouse, body: body });\n\n                                break;\n                            }\n                        }\n                    }\n                }\n            } else {\n                Sleeping.set(constraint.bodyB, false);\n                constraint.pointA = mouse.position;\n            }\n        } else {\n            constraint.bodyB = mouseConstraint.body = null;\n            constraint.pointB = null;\n\n            if (body)\n                Events.trigger(mouseConstraint, 'enddrag', { mouse: mouse, body: body });\n        }\n    };\n\n    /**\n     * Triggers mouse constraint events.\n     * @method _triggerEvents\n     * @private\n     * @param {mouse} mouseConstraint\n     */\n    var _triggerEvents = function(mouseConstraint) {\n        var mouse = mouseConstraint.mouse,\n            mouseEvents = mouse.sourceEvents;\n\n        if (mouseEvents.mousemove)\n            Events.trigger(mouseConstraint, 'mousemove', { mouse: mouse });\n\n        if (mouseEvents.mousedown)\n            Events.trigger(mouseConstraint, 'mousedown', { mouse: mouse });\n\n        if (mouseEvents.mouseup)\n            Events.trigger(mouseConstraint, 'mouseup', { mouse: mouse });\n\n        // reset the mouse state ready for the next step\n        Mouse.clearSourceEvents(mouse);\n    };\n\n    /*\n    *\n    *  Events Documentation\n    *\n    */\n\n    /**\n    * Fired when the mouse has moved (or a touch moves) during the last step\n    *\n    * @event mousemove\n    * @param {} event An event object\n    * @param {mouse} event.mouse The engine's mouse instance\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired when the mouse is down (or a touch has started) during the last step\n    *\n    * @event mousedown\n    * @param {} event An event object\n    * @param {mouse} event.mouse The engine's mouse instance\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired when the mouse is up (or a touch has ended) during the last step\n    *\n    * @event mouseup\n    * @param {} event An event object\n    * @param {mouse} event.mouse The engine's mouse instance\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired when the user starts dragging a body\n    *\n    * @event startdrag\n    * @param {} event An event object\n    * @param {mouse} event.mouse The engine's mouse instance\n    * @param {body} event.body The body being dragged\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired when the user ends dragging a body\n    *\n    * @event enddrag\n    * @param {} event An event object\n    * @param {mouse} event.mouse The engine's mouse instance\n    * @param {body} event.body The body that has stopped being dragged\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n    /**\n     * A `String` denoting the type of object.\n     *\n     * @property type\n     * @type string\n     * @default \"constraint\"\n     * @readOnly\n     */\n\n    /**\n     * The `Mouse` instance in use. If not supplied in `MouseConstraint.create`, one will be created.\n     *\n     * @property mouse\n     * @type mouse\n     * @default mouse\n     */\n\n    /**\n     * The `Body` that is currently being moved by the user, or `null` if no body.\n     *\n     * @property body\n     * @type body\n     * @default null\n     */\n\n    /**\n     * The `Constraint` object that is used to move the body during interaction.\n     *\n     * @property constraint\n     * @type constraint\n     */\n\n    /**\n     * An `Object` that specifies the collision filter properties.\n     * The collision filter allows the user to define which types of body this mouse constraint can interact with.\n     * See `body.collisionFilter` for more information.\n     *\n     * @property collisionFilter\n     * @type object\n     */\n\n})();\n\n},{\"../body/Composite\":2,\"../collision/Detector\":5,\"../core/Common\":14,\"../core/Events\":16,\"../core/Mouse\":18,\"../core/Sleeping\":20,\"../geometry/Bounds\":24,\"../geometry/Vertices\":27,\"./Constraint\":12}],14:[function(require,module,exports){\n/**\n* The `Matter.Common` module contains utility functions that are common to all modules.\n*\n* @class Common\n*/\n\nvar Common = {};\n\nmodule.exports = Common;\n\n(function() {\n\n    Common._nextId = 0;\n    Common._seed = 0;\n\n    /**\n     * Extends the object in the first argument using the object in the second argument.\n     * @method extend\n     * @param {} obj\n     * @param {boolean} deep\n     * @return {} obj extended\n     */\n    Common.extend = function(obj, deep) {\n        var argsStart,\n            args,\n            deepClone;\n\n        if (typeof deep === 'boolean') {\n            argsStart = 2;\n            deepClone = deep;\n        } else {\n            argsStart = 1;\n            deepClone = true;\n        }\n\n        args = Array.prototype.slice.call(arguments, argsStart);\n\n        for (var i = 0; i < args.length; i++) {\n            var source = args[i];\n\n            if (source) {\n                for (var prop in source) {\n                    if (deepClone && source[prop] && source[prop].constructor === Object) {\n                        if (!obj[prop] || obj[prop].constructor === Object) {\n                            obj[prop] = obj[prop] || {};\n                            Common.extend(obj[prop], deepClone, source[prop]);\n                        } else {\n                            obj[prop] = source[prop];\n                        }\n                    } else {\n                        obj[prop] = source[prop];\n                    }\n                }\n            }\n        }\n\n        return obj;\n    };\n\n    /**\n     * Creates a new clone of the object, if deep is true references will also be cloned.\n     * @method clone\n     * @param {} obj\n     * @param {bool} deep\n     * @return {} obj cloned\n     */\n    Common.clone = function(obj, deep) {\n        return Common.extend({}, deep, obj);\n    };\n\n    /**\n     * Returns the list of keys for the given object.\n     * @method keys\n     * @param {} obj\n     * @return {string[]} keys\n     */\n    Common.keys = function(obj) {\n        if (Object.keys)\n            return Object.keys(obj);\n\n        // avoid hasOwnProperty for performance\n        var keys = [];\n        for (var key in obj)\n            keys.push(key);\n        return keys;\n    };\n\n    /**\n     * Returns the list of values for the given object.\n     * @method values\n     * @param {} obj\n     * @return {array} Array of the objects property values\n     */\n    Common.values = function(obj) {\n        var values = [];\n\n        if (Object.keys) {\n            var keys = Object.keys(obj);\n            for (var i = 0; i < keys.length; i++) {\n                values.push(obj[keys[i]]);\n            }\n            return values;\n        }\n\n        // avoid hasOwnProperty for performance\n        for (var key in obj)\n            values.push(obj[key]);\n        return values;\n    };\n\n    /**\n     * Returns a hex colour string made by lightening or darkening color by percent.\n     * @method shadeColor\n     * @param {string} color\n     * @param {number} percent\n     * @return {string} A hex colour\n     */\n    Common.shadeColor = function(color, percent) {\n        // http://stackoverflow.com/questions/5560248/programmatically-lighten-or-darken-a-hex-color\n        var colorInteger = parseInt(color.slice(1),16),\n            amount = Math.round(2.55 * percent),\n            R = (colorInteger >> 16) + amount,\n            B = (colorInteger >> 8 & 0x00FF) + amount,\n            G = (colorInteger & 0x0000FF) + amount;\n        return \"#\" + (0x1000000 + (R < 255 ? R < 1 ? 0 : R :255) * 0x10000\n                + (B < 255 ? B < 1 ? 0 : B : 255) * 0x100\n                + (G < 255 ? G < 1 ? 0 : G : 255)).toString(16).slice(1);\n    };\n\n    /**\n     * Shuffles the given array in-place.\n     * The function uses a seeded random generator.\n     * @method shuffle\n     * @param {array} array\n     * @return {array} array shuffled randomly\n     */\n    Common.shuffle = function(array) {\n        for (var i = array.length - 1; i > 0; i--) {\n            var j = Math.floor(Common.random() * (i + 1));\n            var temp = array[i];\n            array[i] = array[j];\n            array[j] = temp;\n        }\n        return array;\n    };\n\n    /**\n     * Randomly chooses a value from a list with equal probability.\n     * The function uses a seeded random generator.\n     * @method choose\n     * @param {array} choices\n     * @return {object} A random choice object from the array\n     */\n    Common.choose = function(choices) {\n        return choices[Math.floor(Common.random() * choices.length)];\n    };\n\n    /**\n     * Returns true if the object is a HTMLElement, otherwise false.\n     * @method isElement\n     * @param {object} obj\n     * @return {boolean} True if the object is a HTMLElement, otherwise false\n     */\n    Common.isElement = function(obj) {\n        // http://stackoverflow.com/questions/384286/javascript-isdom-how-do-you-check-if-a-javascript-object-is-a-dom-object\n        try {\n            return obj instanceof HTMLElement;\n        }\n        catch(e){\n            return (typeof obj===\"object\") &&\n              (obj.nodeType===1) && (typeof obj.style === \"object\") &&\n              (typeof obj.ownerDocument ===\"object\");\n        }\n    };\n\n    /**\n     * Returns true if the object is an array.\n     * @method isArray\n     * @param {object} obj\n     * @return {boolean} True if the object is an array, otherwise false\n     */\n    Common.isArray = function(obj) {\n        return Object.prototype.toString.call(obj) === '[object Array]';\n    };\n\n    /**\n     * Returns the given value clamped between a minimum and maximum value.\n     * @method clamp\n     * @param {number} value\n     * @param {number} min\n     * @param {number} max\n     * @return {number} The value clamped between min and max inclusive\n     */\n    Common.clamp = function(value, min, max) {\n        if (value < min)\n            return min;\n        if (value > max)\n            return max;\n        return value;\n    };\n\n    /**\n     * Returns the sign of the given value.\n     * @method sign\n     * @param {number} value\n     * @return {number} -1 if negative, +1 if 0 or positive\n     */\n    Common.sign = function(value) {\n        return value < 0 ? -1 : 1;\n    };\n\n    /**\n     * Returns the current timestamp (high-res if available).\n     * @method now\n     * @return {number} the current timestamp (high-res if available)\n     */\n    Common.now = function() {\n        // http://stackoverflow.com/questions/221294/how-do-you-get-a-timestamp-in-javascript\n        // https://gist.github.com/davidwaterston/2982531\n\n        var performance = window.performance || {};\n\n        performance.now = (function() {\n            return performance.now    ||\n            performance.webkitNow     ||\n            performance.msNow         ||\n            performance.oNow          ||\n            performance.mozNow        ||\n            function() { return +(new Date()); };\n        })();\n\n        return performance.now();\n    };\n\n\n    /**\n     * Returns a random value between a minimum and a maximum value inclusive.\n     * The function uses a seeded random generator.\n     * @method random\n     * @param {number} min\n     * @param {number} max\n     * @return {number} A random number between min and max inclusive\n     */\n    Common.random = function(min, max) {\n        min = (typeof min !== \"undefined\") ? min : 0;\n        max = (typeof max !== \"undefined\") ? max : 1;\n        return min + _seededRandom() * (max - min);\n    };\n\n    /**\n     * Converts a CSS hex colour string into an integer.\n     * @method colorToNumber\n     * @param {string} colorString\n     * @return {number} An integer representing the CSS hex string\n     */\n    Common.colorToNumber = function(colorString) {\n        colorString = colorString.replace('#','');\n\n        if (colorString.length == 3) {\n            colorString = colorString.charAt(0) + colorString.charAt(0)\n                        + colorString.charAt(1) + colorString.charAt(1)\n                        + colorString.charAt(2) + colorString.charAt(2);\n        }\n\n        return parseInt(colorString, 16);\n    };\n\n    /**\n     * A wrapper for console.log, for providing errors and warnings.\n     * @method log\n     * @param {string} message\n     * @param {string} type\n     */\n    Common.log = function(message, type) {\n        if (!console || !console.log || !console.warn)\n            return;\n\n        switch (type) {\n\n        case 'warn':\n            console.warn('Matter.js:', message);\n            break;\n        case 'error':\n            console.log('Matter.js:', message);\n            break;\n\n        }\n    };\n\n    /**\n     * Returns the next unique sequential ID.\n     * @method nextId\n     * @return {Number} Unique sequential ID\n     */\n    Common.nextId = function() {\n        return Common._nextId++;\n    };\n\n    /**\n     * A cross browser compatible indexOf implementation.\n     * @method indexOf\n     * @param {array} haystack\n     * @param {object} needle\n     */\n    Common.indexOf = function(haystack, needle) {\n        if (haystack.indexOf)\n            return haystack.indexOf(needle);\n\n        for (var i = 0; i < haystack.length; i++) {\n            if (haystack[i] === needle)\n                return i;\n        }\n\n        return -1;\n    };\n\n    var _seededRandom = function() {\n        // https://gist.github.com/ngryman/3830489\n        Common._seed = (Common._seed * 9301 + 49297) % 233280;\n        return Common._seed / 233280;\n    };\n\n})();\n\n},{}],15:[function(require,module,exports){\n/**\n* The `Matter.Engine` module contains methods for creating and manipulating engines.\n* An engine is a controller that manages updating the simulation of the world.\n* See `Matter.Runner` for an optional game loop utility.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Engine\n*/\n\nvar Engine = {};\n\nmodule.exports = Engine;\n\nvar World = require('../body/World');\nvar Sleeping = require('./Sleeping');\nvar Resolver = require('../collision/Resolver');\nvar Render = require('../render/Render');\nvar Pairs = require('../collision/Pairs');\nvar Metrics = require('./Metrics');\nvar Grid = require('../collision/Grid');\nvar Events = require('./Events');\nvar Composite = require('../body/Composite');\nvar Constraint = require('../constraint/Constraint');\nvar Common = require('./Common');\nvar Body = require('../body/Body');\n\n(function() {\n\n    /**\n     * Creates a new engine. The options parameter is an object that specifies any properties you wish to override the defaults.\n     * All properties have default values, and many are pre-calculated automatically based on other properties.\n     * See the properties section below for detailed information on what you can pass via the `options` object.\n     * @method create\n     * @param {object} [options]\n     * @return {engine} engine\n     */\n    Engine.create = function(element, options) {\n        // options may be passed as the first (and only) argument\n        options = Common.isElement(element) ? options : element;\n        element = Common.isElement(element) ? element : null;\n        options = options || {};\n\n        if (element || options.render) {\n            Common.log('Engine.create: engine.render is deprecated (see docs)', 'warn');\n        }\n\n        var defaults = {\n            positionIterations: 6,\n            velocityIterations: 4,\n            constraintIterations: 2,\n            enableSleeping: false,\n            events: [],\n            timing: {\n                timestamp: 0,\n                timeScale: 1\n            },\n            broadphase: {\n                controller: Grid\n            }\n        };\n\n        var engine = Common.extend(defaults, options);\n\n        // @deprecated\n        if (element || engine.render) {\n            var renderDefaults = {\n                element: element,\n                controller: Render\n            };\n\n            engine.render = Common.extend(renderDefaults, engine.render);\n        }\n\n        // @deprecated\n        if (engine.render && engine.render.controller) {\n            engine.render = engine.render.controller.create(engine.render);\n        }\n\n        // @deprecated\n        if (engine.render) {\n            engine.render.engine = engine;\n        }\n\n        engine.world = options.world || World.create(engine.world);\n        engine.pairs = Pairs.create();\n        engine.broadphase = engine.broadphase.controller.create(engine.broadphase);\n        engine.metrics = engine.metrics || { extended: false };\n\n\n        return engine;\n    };\n\n    /**\n     * Moves the simulation forward in time by `delta` ms.\n     * The `correction` argument is an optional `Number` that specifies the time correction factor to apply to the update.\n     * This can help improve the accuracy of the simulation in cases where `delta` is changing between updates.\n     * The value of `correction` is defined as `delta / lastDelta`, i.e. the percentage change of `delta` over the last step.\n     * Therefore the value is always `1` (no correction) when `delta` constant (or when no correction is desired, which is the default).\n     * See the paper on <a href=\"http://lonesock.net/article/verlet.html\">Time Corrected Verlet</a> for more information.\n     *\n     * Triggers `beforeUpdate` and `afterUpdate` events.\n     * Triggers `collisionStart`, `collisionActive` and `collisionEnd` events.\n     * @method update\n     * @param {engine} engine\n     * @param {number} [delta=16.666]\n     * @param {number} [correction=1]\n     */\n    Engine.update = function(engine, delta, correction) {\n        delta = delta || 1000 / 60;\n        correction = correction || 1;\n\n        var world = engine.world,\n            timing = engine.timing,\n            broadphase = engine.broadphase,\n            broadphasePairs = [],\n            i;\n\n        // increment timestamp\n        timing.timestamp += delta * timing.timeScale;\n\n        // create an event object\n        var event = {\n            timestamp: timing.timestamp\n        };\n\n        Events.trigger(engine, 'beforeUpdate', event);\n\n        // get lists of all bodies and constraints, no matter what composites they are in\n        var allBodies = Composite.allBodies(world),\n            allConstraints = Composite.allConstraints(world);\n\n\n        // if sleeping enabled, call the sleeping controller\n        if (engine.enableSleeping)\n            Sleeping.update(allBodies, timing.timeScale);\n\n        // applies gravity to all bodies\n        _bodiesApplyGravity(allBodies, world.gravity);\n\n        // update all body position and rotation by integration\n        _bodiesUpdate(allBodies, delta, timing.timeScale, correction, world.bounds);\n\n        // update all constraints\n        for (i = 0; i < engine.constraintIterations; i++) {\n            Constraint.solveAll(allConstraints, timing.timeScale);\n        }\n        Constraint.postSolveAll(allBodies);\n\n        // broadphase pass: find potential collision pairs\n        if (broadphase.controller) {\n\n            // if world is dirty, we must flush the whole grid\n            if (world.isModified)\n                broadphase.controller.clear(broadphase);\n\n            // update the grid buckets based on current bodies\n            broadphase.controller.update(broadphase, allBodies, engine, world.isModified);\n            broadphasePairs = broadphase.pairsList;\n        } else {\n\n            // if no broadphase set, we just pass all bodies\n            broadphasePairs = allBodies;\n        }\n\n        // clear all composite modified flags\n        if (world.isModified) {\n            Composite.setModified(world, false, false, true);\n        }\n\n        // narrowphase pass: find actual collisions, then create or update collision pairs\n        var collisions = broadphase.detector(broadphasePairs, engine);\n\n        // update collision pairs\n        var pairs = engine.pairs,\n            timestamp = timing.timestamp;\n        Pairs.update(pairs, collisions, timestamp);\n        Pairs.removeOld(pairs, timestamp);\n\n        // wake up bodies involved in collisions\n        if (engine.enableSleeping)\n            Sleeping.afterCollisions(pairs.list, timing.timeScale);\n\n        // trigger collision events\n        if (pairs.collisionStart.length > 0)\n            Events.trigger(engine, 'collisionStart', { pairs: pairs.collisionStart });\n\n        // iteratively resolve position between collisions\n        Resolver.preSolvePosition(pairs.list);\n        for (i = 0; i < engine.positionIterations; i++) {\n            Resolver.solvePosition(pairs.list, timing.timeScale);\n        }\n        Resolver.postSolvePosition(allBodies);\n\n        // iteratively resolve velocity between collisions\n        Resolver.preSolveVelocity(pairs.list);\n        for (i = 0; i < engine.velocityIterations; i++) {\n            Resolver.solveVelocity(pairs.list, timing.timeScale);\n        }\n\n        // trigger collision events\n        if (pairs.collisionActive.length > 0)\n            Events.trigger(engine, 'collisionActive', { pairs: pairs.collisionActive });\n\n        if (pairs.collisionEnd.length > 0)\n            Events.trigger(engine, 'collisionEnd', { pairs: pairs.collisionEnd });\n\n\n        // clear force buffers\n        _bodiesClearForces(allBodies);\n\n        Events.trigger(engine, 'afterUpdate', event);\n\n        return engine;\n    };\n\n    /**\n     * Merges two engines by keeping the configuration of `engineA` but replacing the world with the one from `engineB`.\n     * @method merge\n     * @param {engine} engineA\n     * @param {engine} engineB\n     */\n    Engine.merge = function(engineA, engineB) {\n        Common.extend(engineA, engineB);\n\n        if (engineB.world) {\n            engineA.world = engineB.world;\n\n            Engine.clear(engineA);\n\n            var bodies = Composite.allBodies(engineA.world);\n\n            for (var i = 0; i < bodies.length; i++) {\n                var body = bodies[i];\n                Sleeping.set(body, false);\n                body.id = Common.nextId();\n            }\n        }\n    };\n\n    /**\n     * Clears the engine including the world, pairs and broadphase.\n     * @method clear\n     * @param {engine} engine\n     */\n    Engine.clear = function(engine) {\n        var world = engine.world;\n\n        Pairs.clear(engine.pairs);\n\n        var broadphase = engine.broadphase;\n        if (broadphase.controller) {\n            var bodies = Composite.allBodies(world);\n            broadphase.controller.clear(broadphase);\n            broadphase.controller.update(broadphase, bodies, engine, true);\n        }\n    };\n\n    /**\n     * Zeroes the `body.force` and `body.torque` force buffers.\n     * @method bodiesClearForces\n     * @private\n     * @param {body[]} bodies\n     */\n    var _bodiesClearForces = function(bodies) {\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n\n            // reset force buffers\n            body.force.x = 0;\n            body.force.y = 0;\n            body.torque = 0;\n        }\n    };\n\n    /**\n     * Applys a mass dependant force to all given bodies.\n     * @method bodiesApplyGravity\n     * @private\n     * @param {body[]} bodies\n     * @param {vector} gravity\n     */\n    var _bodiesApplyGravity = function(bodies, gravity) {\n        var gravityScale = typeof gravity.scale !== 'undefined' ? gravity.scale : 0.001;\n\n        if ((gravity.x === 0 && gravity.y === 0) || gravityScale === 0) {\n            return;\n        }\n\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n\n            if (body.isStatic || body.isSleeping)\n                continue;\n\n            // apply gravity\n            body.force.y += body.mass * gravity.y * gravityScale;\n            body.force.x += body.mass * gravity.x * gravityScale;\n        }\n    };\n\n    /**\n     * Applys `Body.update` to all given `bodies`.\n     * @method updateAll\n     * @private\n     * @param {body[]} bodies\n     * @param {number} deltaTime\n     * The amount of time elapsed between updates\n     * @param {number} timeScale\n     * @param {number} correction\n     * The Verlet correction factor (deltaTime / lastDeltaTime)\n     * @param {bounds} worldBounds\n     */\n    var _bodiesUpdate = function(bodies, deltaTime, timeScale, correction, worldBounds) {\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n\n            if (body.isStatic || body.isSleeping)\n                continue;\n\n            Body.update(body, deltaTime, timeScale, correction);\n        }\n    };\n\n    /**\n     * An alias for `Runner.run`, see `Matter.Runner` for more information.\n     * @method run\n     * @param {engine} engine\n     */\n\n    /**\n    * Fired just before an update\n    *\n    * @event beforeUpdate\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired after engine update and all collision events\n    *\n    * @event afterUpdate\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired after engine update, provides a list of all pairs that have started to collide in the current tick (if any)\n    *\n    * @event collisionStart\n    * @param {} event An event object\n    * @param {} event.pairs List of affected pairs\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired after engine update, provides a list of all pairs that are colliding in the current tick (if any)\n    *\n    * @event collisionActive\n    * @param {} event An event object\n    * @param {} event.pairs List of affected pairs\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired after engine update, provides a list of all pairs that have ended collision in the current tick (if any)\n    *\n    * @event collisionEnd\n    * @param {} event An event object\n    * @param {} event.pairs List of affected pairs\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n    /**\n     * An integer `Number` that specifies the number of position iterations to perform each update.\n     * The higher the value, the higher quality the simulation will be at the expense of performance.\n     *\n     * @property positionIterations\n     * @type number\n     * @default 6\n     */\n\n    /**\n     * An integer `Number` that specifies the number of velocity iterations to perform each update.\n     * The higher the value, the higher quality the simulation will be at the expense of performance.\n     *\n     * @property velocityIterations\n     * @type number\n     * @default 4\n     */\n\n    /**\n     * An integer `Number` that specifies the number of constraint iterations to perform each update.\n     * The higher the value, the higher quality the simulation will be at the expense of performance.\n     * The default value of `2` is usually very adequate.\n     *\n     * @property constraintIterations\n     * @type number\n     * @default 2\n     */\n\n    /**\n     * A flag that specifies whether the engine should allow sleeping via the `Matter.Sleeping` module.\n     * Sleeping can improve stability and performance, but often at the expense of accuracy.\n     *\n     * @property enableSleeping\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * An `Object` containing properties regarding the timing systems of the engine.\n     *\n     * @property timing\n     * @type object\n     */\n\n    /**\n     * A `Number` that specifies the global scaling factor of time for all bodies.\n     * A value of `0` freezes the simulation.\n     * A value of `0.1` gives a slow-motion effect.\n     * A value of `1.2` gives a speed-up effect.\n     *\n     * @property timing.timeScale\n     * @type number\n     * @default 1\n     */\n\n    /**\n     * A `Number` that specifies the current simulation-time in milliseconds starting from `0`.\n     * It is incremented on every `Engine.update` by the given `delta` argument.\n     *\n     * @property timing.timestamp\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * An instance of a `Render` controller. The default value is a `Matter.Render` instance created by `Engine.create`.\n     * One may also develop a custom renderer module based on `Matter.Render` and pass an instance of it to `Engine.create` via `options.render`.\n     *\n     * A minimal custom renderer object must define at least three functions: `create`, `clear` and `world` (see `Matter.Render`).\n     * It is also possible to instead pass the _module_ reference via `options.render.controller` and `Engine.create` will instantiate one for you.\n     *\n     * @property render\n     * @type render\n     * @deprecated see Demo.js for an example of creating a renderer\n     * @default a Matter.Render instance\n     */\n\n    /**\n     * An instance of a broadphase controller. The default value is a `Matter.Grid` instance created by `Engine.create`.\n     *\n     * @property broadphase\n     * @type grid\n     * @default a Matter.Grid instance\n     */\n\n    /**\n     * A `World` composite object that will contain all simulated bodies and constraints.\n     *\n     * @property world\n     * @type world\n     * @default a Matter.World instance\n     */\n\n})();\n\n},{\"../body/Body\":1,\"../body/Composite\":2,\"../body/World\":3,\"../collision/Grid\":6,\"../collision/Pairs\":8,\"../collision/Resolver\":10,\"../constraint/Constraint\":12,\"../render/Render\":29,\"./Common\":14,\"./Events\":16,\"./Metrics\":17,\"./Sleeping\":20}],16:[function(require,module,exports){\n/**\n* The `Matter.Events` module contains methods to fire and listen to events on other objects.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Events\n*/\n\nvar Events = {};\n\nmodule.exports = Events;\n\nvar Common = require('./Common');\n\n(function() {\n\n    /**\n     * Subscribes a callback function to the given object's `eventName`.\n     * @method on\n     * @param {} object\n     * @param {string} eventNames\n     * @param {function} callback\n     */\n    Events.on = function(object, eventNames, callback) {\n        var names = eventNames.split(' '),\n            name;\n\n        for (var i = 0; i < names.length; i++) {\n            name = names[i];\n            object.events = object.events || {};\n            object.events[name] = object.events[name] || [];\n            object.events[name].push(callback);\n        }\n\n        return callback;\n    };\n\n    /**\n     * Removes the given event callback. If no callback, clears all callbacks in `eventNames`. If no `eventNames`, clears all events.\n     * @method off\n     * @param {} object\n     * @param {string} eventNames\n     * @param {function} callback\n     */\n    Events.off = function(object, eventNames, callback) {\n        if (!eventNames) {\n            object.events = {};\n            return;\n        }\n\n        // handle Events.off(object, callback)\n        if (typeof eventNames === 'function') {\n            callback = eventNames;\n            eventNames = Common.keys(object.events).join(' ');\n        }\n\n        var names = eventNames.split(' ');\n\n        for (var i = 0; i < names.length; i++) {\n            var callbacks = object.events[names[i]],\n                newCallbacks = [];\n\n            if (callback && callbacks) {\n                for (var j = 0; j < callbacks.length; j++) {\n                    if (callbacks[j] !== callback)\n                        newCallbacks.push(callbacks[j]);\n                }\n            }\n\n            object.events[names[i]] = newCallbacks;\n        }\n    };\n\n    /**\n     * Fires all the callbacks subscribed to the given object's `eventName`, in the order they subscribed, if any.\n     * @method trigger\n     * @param {} object\n     * @param {string} eventNames\n     * @param {} event\n     */\n    Events.trigger = function(object, eventNames, event) {\n        var names,\n            name,\n            callbacks,\n            eventClone;\n\n        if (object.events) {\n            if (!event)\n                event = {};\n\n            names = eventNames.split(' ');\n\n            for (var i = 0; i < names.length; i++) {\n                name = names[i];\n                callbacks = object.events[name];\n\n                if (callbacks) {\n                    eventClone = Common.clone(event, false);\n                    eventClone.name = name;\n                    eventClone.source = object;\n\n                    for (var j = 0; j < callbacks.length; j++) {\n                        callbacks[j].apply(object, [eventClone]);\n                    }\n                }\n            }\n        }\n    };\n\n})();\n\n},{\"./Common\":14}],17:[function(require,module,exports){\n\n},{\"../body/Composite\":2,\"./Common\":14}],18:[function(require,module,exports){\n/**\n* The `Matter.Mouse` module contains methods for creating and manipulating mouse inputs.\n*\n* @class Mouse\n*/\n\nvar Mouse = {};\n\nmodule.exports = Mouse;\n\nvar Common = require('../core/Common');\n\n(function() {\n\n    /**\n     * Creates a mouse input.\n     * @method create\n     * @param {HTMLElement} element\n     * @return {mouse} A new mouse\n     */\n    Mouse.create = function(element) {\n        var mouse = {};\n\n        if (!element) {\n            Common.log('Mouse.create: element was undefined, defaulting to document.body', 'warn');\n        }\n\n        mouse.element = element || document.body;\n        mouse.absolute = { x: 0, y: 0 };\n        mouse.position = { x: 0, y: 0 };\n        mouse.mousedownPosition = { x: 0, y: 0 };\n        mouse.mouseupPosition = { x: 0, y: 0 };\n        mouse.offset = { x: 0, y: 0 };\n        mouse.scale = { x: 1, y: 1 };\n        mouse.wheelDelta = 0;\n        mouse.button = -1;\n        mouse.pixelRatio = mouse.element.getAttribute('data-pixel-ratio') || 1;\n\n        mouse.sourceEvents = {\n            mousemove: null,\n            mousedown: null,\n            mouseup: null,\n            mousewheel: null\n        };\n\n        mouse.mousemove = function(event) {\n            var position = _getRelativeMousePosition(event, mouse.element, mouse.pixelRatio),\n                touches = event.changedTouches;\n\n            if (touches) {\n                mouse.button = 0;\n                event.preventDefault();\n            }\n\n            mouse.absolute.x = position.x;\n            mouse.absolute.y = position.y;\n            mouse.position.x = mouse.absolute.x * mouse.scale.x + mouse.offset.x;\n            mouse.position.y = mouse.absolute.y * mouse.scale.y + mouse.offset.y;\n            mouse.sourceEvents.mousemove = event;\n        };\n\n        mouse.mousedown = function(event) {\n            var position = _getRelativeMousePosition(event, mouse.element, mouse.pixelRatio),\n                touches = event.changedTouches;\n\n            if (touches) {\n                mouse.button = 0;\n                event.preventDefault();\n            } else {\n                mouse.button = event.button;\n            }\n\n            mouse.absolute.x = position.x;\n            mouse.absolute.y = position.y;\n            mouse.position.x = mouse.absolute.x * mouse.scale.x + mouse.offset.x;\n            mouse.position.y = mouse.absolute.y * mouse.scale.y + mouse.offset.y;\n            mouse.mousedownPosition.x = mouse.position.x;\n            mouse.mousedownPosition.y = mouse.position.y;\n            mouse.sourceEvents.mousedown = event;\n        };\n\n        mouse.mouseup = function(event) {\n            var position = _getRelativeMousePosition(event, mouse.element, mouse.pixelRatio),\n                touches = event.changedTouches;\n\n            if (touches) {\n                event.preventDefault();\n            }\n\n            mouse.button = -1;\n            mouse.absolute.x = position.x;\n            mouse.absolute.y = position.y;\n            mouse.position.x = mouse.absolute.x * mouse.scale.x + mouse.offset.x;\n            mouse.position.y = mouse.absolute.y * mouse.scale.y + mouse.offset.y;\n            mouse.mouseupPosition.x = mouse.position.x;\n            mouse.mouseupPosition.y = mouse.position.y;\n            mouse.sourceEvents.mouseup = event;\n        };\n\n        mouse.mousewheel = function(event) {\n            mouse.wheelDelta = Math.max(-1, Math.min(1, event.wheelDelta || -event.detail));\n            event.preventDefault();\n        };\n\n        Mouse.setElement(mouse, mouse.element);\n\n        return mouse;\n    };\n\n    /**\n     * Sets the element the mouse is bound to (and relative to).\n     * @method setElement\n     * @param {mouse} mouse\n     * @param {HTMLElement} element\n     */\n    Mouse.setElement = function(mouse, element) {\n        mouse.element = element;\n\n        element.addEventListener('mousemove', mouse.mousemove);\n        element.addEventListener('mousedown', mouse.mousedown);\n        element.addEventListener('mouseup', mouse.mouseup);\n\n        element.addEventListener('mousewheel', mouse.mousewheel);\n        element.addEventListener('DOMMouseScroll', mouse.mousewheel);\n\n        element.addEventListener('touchmove', mouse.mousemove);\n        element.addEventListener('touchstart', mouse.mousedown);\n        element.addEventListener('touchend', mouse.mouseup);\n    };\n\n    /**\n     * Clears all captured source events.\n     * @method clearSourceEvents\n     * @param {mouse} mouse\n     */\n    Mouse.clearSourceEvents = function(mouse) {\n        mouse.sourceEvents.mousemove = null;\n        mouse.sourceEvents.mousedown = null;\n        mouse.sourceEvents.mouseup = null;\n        mouse.sourceEvents.mousewheel = null;\n        mouse.wheelDelta = 0;\n    };\n\n    /**\n     * Sets the mouse position offset.\n     * @method setOffset\n     * @param {mouse} mouse\n     * @param {vector} offset\n     */\n    Mouse.setOffset = function(mouse, offset) {\n        mouse.offset.x = offset.x;\n        mouse.offset.y = offset.y;\n        mouse.position.x = mouse.absolute.x * mouse.scale.x + mouse.offset.x;\n        mouse.position.y = mouse.absolute.y * mouse.scale.y + mouse.offset.y;\n    };\n\n    /**\n     * Sets the mouse position scale.\n     * @method setScale\n     * @param {mouse} mouse\n     * @param {vector} scale\n     */\n    Mouse.setScale = function(mouse, scale) {\n        mouse.scale.x = scale.x;\n        mouse.scale.y = scale.y;\n        mouse.position.x = mouse.absolute.x * mouse.scale.x + mouse.offset.x;\n        mouse.position.y = mouse.absolute.y * mouse.scale.y + mouse.offset.y;\n    };\n\n    /**\n     * Gets the mouse position relative to an element given a screen pixel ratio.\n     * @method _getRelativeMousePosition\n     * @private\n     * @param {} event\n     * @param {} element\n     * @param {number} pixelRatio\n     * @return {}\n     */\n    var _getRelativeMousePosition = function(event, element, pixelRatio) {\n        var elementBounds = element.getBoundingClientRect(),\n            rootNode = (document.documentElement || document.body.parentNode || document.body),\n            scrollX = (window.pageXOffset !== undefined) ? window.pageXOffset : rootNode.scrollLeft,\n            scrollY = (window.pageYOffset !== undefined) ? window.pageYOffset : rootNode.scrollTop,\n            touches = event.changedTouches,\n            x, y;\n\n        if (touches) {\n            x = touches[0].pageX - elementBounds.left - scrollX;\n            y = touches[0].pageY - elementBounds.top - scrollY;\n        } else {\n            x = event.pageX - elementBounds.left - scrollX;\n            y = event.pageY - elementBounds.top - scrollY;\n        }\n\n        return {\n            x: x / (element.clientWidth / element.width * pixelRatio),\n            y: y / (element.clientHeight / element.height * pixelRatio)\n        };\n    };\n\n})();\n\n},{\"../core/Common\":14}],19:[function(require,module,exports){\n/**\n* The `Matter.Runner` module is an optional utility which provides a game loop,\n* that handles continuously updating a `Matter.Engine` for you within a browser.\n* It is intended for development and debugging purposes, but may also be suitable for simple games.\n* If you are using your own game loop instead, then you do not need the `Matter.Runner` module.\n* Instead just call `Engine.update(engine, delta)` in your own loop.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Runner\n*/\n\nvar Runner = {};\n\nmodule.exports = Runner;\n\nvar Events = require('./Events');\nvar Engine = require('./Engine');\nvar Common = require('./Common');\n\n(function() {\n\n    var _requestAnimationFrame,\n        _cancelAnimationFrame;\n\n    if (typeof window !== 'undefined') {\n        _requestAnimationFrame = window.requestAnimationFrame || window.webkitRequestAnimationFrame\n                                      || window.mozRequestAnimationFrame || window.msRequestAnimationFrame\n                                      || function(callback){ window.setTimeout(function() { callback(Common.now()); }, 1000 / 60); };\n\n        _cancelAnimationFrame = window.cancelAnimationFrame || window.mozCancelAnimationFrame\n                                      || window.webkitCancelAnimationFrame || window.msCancelAnimationFrame;\n    }\n\n    /**\n     * Creates a new Runner. The options parameter is an object that specifies any properties you wish to override the defaults.\n     * @method create\n     * @param {} options\n     */\n    Runner.create = function(options) {\n        var defaults = {\n            fps: 60,\n            correction: 1,\n            deltaSampleSize: 60,\n            counterTimestamp: 0,\n            frameCounter: 0,\n            deltaHistory: [],\n            timePrev: null,\n            timeScalePrev: 1,\n            frameRequestId: null,\n            isFixed: false,\n            enabled: true\n        };\n\n        var runner = Common.extend(defaults, options);\n\n        runner.delta = runner.delta || 1000 / runner.fps;\n        runner.deltaMin = runner.deltaMin || 1000 / runner.fps;\n        runner.deltaMax = runner.deltaMax || 1000 / (runner.fps * 0.5);\n        runner.fps = 1000 / runner.delta;\n\n        return runner;\n    };\n\n    /**\n     * Continuously ticks a `Matter.Engine` by calling `Runner.tick` on the `requestAnimationFrame` event.\n     * @method run\n     * @param {engine} engine\n     */\n    Runner.run = function(runner, engine) {\n        // create runner if engine is first argument\n        if (typeof runner.positionIterations !== 'undefined') {\n            engine = runner;\n            runner = Runner.create();\n        }\n\n        (function render(time){\n            runner.frameRequestId = _requestAnimationFrame(render);\n\n            if (time && runner.enabled) {\n                Runner.tick(runner, engine, time);\n            }\n        })();\n\n        return runner;\n    };\n\n    /**\n     * A game loop utility that updates the engine and renderer by one step (a 'tick').\n     * Features delta smoothing, time correction and fixed or dynamic timing.\n     * Triggers `beforeTick`, `tick` and `afterTick` events on the engine.\n     * Consider just `Engine.update(engine, delta)` if you're using your own loop.\n     * @method tick\n     * @param {runner} runner\n     * @param {engine} engine\n     * @param {number} time\n     */\n    Runner.tick = function(runner, engine, time) {\n        var timing = engine.timing,\n            correction = 1,\n            delta;\n\n        // create an event object\n        var event = {\n            timestamp: timing.timestamp\n        };\n\n        Events.trigger(runner, 'beforeTick', event);\n        Events.trigger(engine, 'beforeTick', event); // @deprecated\n\n        if (runner.isFixed) {\n            // fixed timestep\n            delta = runner.delta;\n        } else {\n            // dynamic timestep based on wall clock between calls\n            delta = (time - runner.timePrev) || runner.delta;\n            runner.timePrev = time;\n\n            // optimistically filter delta over a few frames, to improve stability\n            runner.deltaHistory.push(delta);\n            runner.deltaHistory = runner.deltaHistory.slice(-runner.deltaSampleSize);\n            delta = Math.min.apply(null, runner.deltaHistory);\n\n            // limit delta\n            delta = delta < runner.deltaMin ? runner.deltaMin : delta;\n            delta = delta > runner.deltaMax ? runner.deltaMax : delta;\n\n            // correction for delta\n            correction = delta / runner.delta;\n\n            // update engine timing object\n            runner.delta = delta;\n        }\n\n        // time correction for time scaling\n        if (runner.timeScalePrev !== 0)\n            correction *= timing.timeScale / runner.timeScalePrev;\n\n        if (timing.timeScale === 0)\n            correction = 0;\n\n        runner.timeScalePrev = timing.timeScale;\n        runner.correction = correction;\n\n        // fps counter\n        runner.frameCounter += 1;\n        if (time - runner.counterTimestamp >= 1000) {\n            runner.fps = runner.frameCounter * ((time - runner.counterTimestamp) / 1000);\n            runner.counterTimestamp = time;\n            runner.frameCounter = 0;\n        }\n\n        Events.trigger(runner, 'tick', event);\n        Events.trigger(engine, 'tick', event); // @deprecated\n\n        // if world has been modified, clear the render scene graph\n        if (engine.world.isModified\n            && engine.render\n            && engine.render.controller\n            && engine.render.controller.clear) {\n            engine.render.controller.clear(engine.render);\n        }\n\n        // update\n        Events.trigger(runner, 'beforeUpdate', event);\n        Engine.update(engine, delta, correction);\n        Events.trigger(runner, 'afterUpdate', event);\n\n        // render\n        // @deprecated\n        if (engine.render && engine.render.controller) {\n            Events.trigger(runner, 'beforeRender', event);\n            Events.trigger(engine, 'beforeRender', event); // @deprecated\n\n            engine.render.controller.world(engine.render);\n\n            Events.trigger(runner, 'afterRender', event);\n            Events.trigger(engine, 'afterRender', event); // @deprecated\n        }\n\n        Events.trigger(runner, 'afterTick', event);\n        Events.trigger(engine, 'afterTick', event); // @deprecated\n    };\n\n    /**\n     * Ends execution of `Runner.run` on the given `runner`, by canceling the animation frame request event loop.\n     * If you wish to only temporarily pause the engine, see `engine.enabled` instead.\n     * @method stop\n     * @param {runner} runner\n     */\n    Runner.stop = function(runner) {\n        _cancelAnimationFrame(runner.frameRequestId);\n    };\n\n    /**\n     * Alias for `Runner.run`.\n     * @method start\n     * @param {runner} runner\n     * @param {engine} engine\n     */\n    Runner.start = function(runner, engine) {\n        Runner.run(runner, engine);\n    };\n\n    /*\n    *\n    *  Events Documentation\n    *\n    */\n\n    /**\n    * Fired at the start of a tick, before any updates to the engine or timing\n    *\n    * @event beforeTick\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired after engine timing updated, but just before update\n    *\n    * @event tick\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired at the end of a tick, after engine update and after rendering\n    *\n    * @event afterTick\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired before update\n    *\n    * @event beforeUpdate\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired after update\n    *\n    * @event afterUpdate\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired before rendering\n    *\n    * @event beforeRender\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    * @deprecated\n    */\n\n    /**\n    * Fired after rendering\n    *\n    * @event afterRender\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    * @deprecated\n    */\n\n    /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n    /**\n     * A flag that specifies whether the runner is running or not.\n     *\n     * @property enabled\n     * @type boolean\n     * @default true\n     */\n\n    /**\n     * A `Boolean` that specifies if the runner should use a fixed timestep (otherwise it is variable).\n     * If timing is fixed, then the apparent simulation speed will change depending on the frame rate (but behaviour will be deterministic).\n     * If the timing is variable, then the apparent simulation speed will be constant (approximately, but at the cost of determininism).\n     *\n     * @property isFixed\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A `Number` that specifies the time step between updates in milliseconds.\n     * If `engine.timing.isFixed` is set to `true`, then `delta` is fixed.\n     * If it is `false`, then `delta` can dynamically change to maintain the correct apparent simulation speed.\n     *\n     * @property delta\n     * @type number\n     * @default 1000 / 60\n     */\n\n})();\n\n},{\"./Common\":14,\"./Engine\":15,\"./Events\":16}],20:[function(require,module,exports){\n/**\n* The `Matter.Sleeping` module contains methods to manage the sleeping state of bodies.\n*\n* @class Sleeping\n*/\n\nvar Sleeping = {};\n\nmodule.exports = Sleeping;\n\nvar Events = require('./Events');\n\n(function() {\n\n    Sleeping._motionWakeThreshold = 0.18;\n    Sleeping._motionSleepThreshold = 0.08;\n    Sleeping._minBias = 0.9;\n\n    /**\n     * Puts bodies to sleep or wakes them up depending on their motion.\n     * @method update\n     * @param {body[]} bodies\n     * @param {number} timeScale\n     */\n    Sleeping.update = function(bodies, timeScale) {\n        var timeFactor = timeScale * timeScale * timeScale;\n\n        // update bodies sleeping status\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i],\n                motion = body.speed * body.speed + body.angularSpeed * body.angularSpeed;\n\n            // wake up bodies if they have a force applied\n            if (body.force.x !== 0 || body.force.y !== 0) {\n                Sleeping.set(body, false);\n                continue;\n            }\n\n            var minMotion = Math.min(body.motion, motion),\n                maxMotion = Math.max(body.motion, motion);\n\n            // biased average motion estimation between frames\n            body.motion = Sleeping._minBias * minMotion + (1 - Sleeping._minBias) * maxMotion;\n\n            if (body.sleepThreshold > 0 && body.motion < Sleeping._motionSleepThreshold * timeFactor) {\n                body.sleepCounter += 1;\n\n                if (body.sleepCounter >= body.sleepThreshold)\n                    Sleeping.set(body, true);\n            } else if (body.sleepCounter > 0) {\n                body.sleepCounter -= 1;\n            }\n        }\n    };\n\n    /**\n     * Given a set of colliding pairs, wakes the sleeping bodies involved.\n     * @method afterCollisions\n     * @param {pair[]} pairs\n     * @param {number} timeScale\n     */\n    Sleeping.afterCollisions = function(pairs, timeScale) {\n        var timeFactor = timeScale * timeScale * timeScale;\n\n        // wake up bodies involved in collisions\n        for (var i = 0; i < pairs.length; i++) {\n            var pair = pairs[i];\n\n            // don't wake inactive pairs\n            if (!pair.isActive)\n                continue;\n\n            var collision = pair.collision,\n                bodyA = collision.bodyA.parent,\n                bodyB = collision.bodyB.parent;\n\n            // don't wake if at least one body is static\n            if ((bodyA.isSleeping && bodyB.isSleeping) || bodyA.isStatic || bodyB.isStatic)\n                continue;\n\n            if (bodyA.isSleeping || bodyB.isSleeping) {\n                var sleepingBody = (bodyA.isSleeping && !bodyA.isStatic) ? bodyA : bodyB,\n                    movingBody = sleepingBody === bodyA ? bodyB : bodyA;\n\n                if (!sleepingBody.isStatic && movingBody.motion > Sleeping._motionWakeThreshold * timeFactor) {\n                    Sleeping.set(sleepingBody, false);\n                }\n            }\n        }\n    };\n\n    /**\n     * Set a body as sleeping or awake.\n     * @method set\n     * @param {body} body\n     * @param {boolean} isSleeping\n     */\n    Sleeping.set = function(body, isSleeping) {\n        var wasSleeping = body.isSleeping;\n\n        if (isSleeping) {\n            body.isSleeping = true;\n            body.sleepCounter = body.sleepThreshold;\n\n            body.positionImpulse.x = 0;\n            body.positionImpulse.y = 0;\n\n            body.positionPrev.x = body.position.x;\n            body.positionPrev.y = body.position.y;\n\n            body.anglePrev = body.angle;\n            body.speed = 0;\n            body.angularSpeed = 0;\n            body.motion = 0;\n\n            if (!wasSleeping) {\n                Events.trigger(body, 'sleepStart');\n            }\n        } else {\n            body.isSleeping = false;\n            body.sleepCounter = 0;\n\n            if (wasSleeping) {\n                Events.trigger(body, 'sleepEnd');\n            }\n        }\n    };\n\n})();\n\n},{\"./Events\":16}],21:[function(require,module,exports){\n/**\n* The `Matter.Bodies` module contains factory methods for creating rigid body models\n* with commonly used body configurations (such as rectangles, circles and other polygons).\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Bodies\n*/\n\n// TODO: true circle bodies\n\nvar Bodies = {};\n\nmodule.exports = Bodies;\n\nvar Vertices = require('../geometry/Vertices');\nvar Common = require('../core/Common');\nvar Body = require('../body/Body');\nvar Bounds = require('../geometry/Bounds');\nvar Vector = require('../geometry/Vector');\n\n(function() {\n\n    /**\n     * Creates a new rigid body model with a rectangle hull.\n     * The options parameter is an object that specifies any properties you wish to override the defaults.\n     * See the properties section of the `Matter.Body` module for detailed information on what you can pass via the `options` object.\n     * @method rectangle\n     * @param {number} x\n     * @param {number} y\n     * @param {number} width\n     * @param {number} height\n     * @param {object} [options]\n     * @return {body} A new rectangle body\n     */\n    Bodies.rectangle = function(x, y, width, height, options) {\n        options = options || {};\n\n        var rectangle = {\n            label: 'Rectangle Body',\n            position: { x: x, y: y },\n            vertices: Vertices.fromPath('L 0 0 L ' + width + ' 0 L ' + width + ' ' + height + ' L 0 ' + height)\n        };\n\n        if (options.chamfer) {\n            var chamfer = options.chamfer;\n            rectangle.vertices = Vertices.chamfer(rectangle.vertices, chamfer.radius,\n                                    chamfer.quality, chamfer.qualityMin, chamfer.qualityMax);\n            delete options.chamfer;\n        }\n\n        return Body.create(Common.extend({}, rectangle, options));\n    };\n\n    /**\n     * Creates a new rigid body model with a trapezoid hull.\n     * The options parameter is an object that specifies any properties you wish to override the defaults.\n     * See the properties section of the `Matter.Body` module for detailed information on what you can pass via the `options` object.\n     * @method trapezoid\n     * @param {number} x\n     * @param {number} y\n     * @param {number} width\n     * @param {number} height\n     * @param {number} slope\n     * @param {object} [options]\n     * @return {body} A new trapezoid body\n     */\n    Bodies.trapezoid = function(x, y, width, height, slope, options) {\n        options = options || {};\n\n        slope *= 0.5;\n        var roof = (1 - (slope * 2)) * width;\n\n        var x1 = width * slope,\n            x2 = x1 + roof,\n            x3 = x2 + x1,\n            verticesPath;\n\n        if (slope < 0.5) {\n            verticesPath = 'L 0 0 L ' + x1 + ' ' + (-height) + ' L ' + x2 + ' ' + (-height) + ' L ' + x3 + ' 0';\n        } else {\n            verticesPath = 'L 0 0 L ' + x2 + ' ' + (-height) + ' L ' + x3 + ' 0';\n        }\n\n        var trapezoid = {\n            label: 'Trapezoid Body',\n            position: { x: x, y: y },\n            vertices: Vertices.fromPath(verticesPath)\n        };\n\n        if (options.chamfer) {\n            var chamfer = options.chamfer;\n            trapezoid.vertices = Vertices.chamfer(trapezoid.vertices, chamfer.radius,\n                                    chamfer.quality, chamfer.qualityMin, chamfer.qualityMax);\n            delete options.chamfer;\n        }\n\n        return Body.create(Common.extend({}, trapezoid, options));\n    };\n\n    /**\n     * Creates a new rigid body model with a circle hull.\n     * The options parameter is an object that specifies any properties you wish to override the defaults.\n     * See the properties section of the `Matter.Body` module for detailed information on what you can pass via the `options` object.\n     * @method circle\n     * @param {number} x\n     * @param {number} y\n     * @param {number} radius\n     * @param {object} [options]\n     * @param {number} [maxSides]\n     * @return {body} A new circle body\n     */\n    Bodies.circle = function(x, y, radius, options, maxSides) {\n        options = options || {};\n\n        var circle = {\n            label: 'Circle Body',\n            circleRadius: radius\n        };\n\n        // approximate circles with polygons until true circles implemented in SAT\n        maxSides = maxSides || 25;\n        var sides = Math.ceil(Math.max(10, Math.min(maxSides, radius)));\n\n        // optimisation: always use even number of sides (half the number of unique axes)\n        if (sides % 2 === 1)\n            sides += 1;\n\n        return Bodies.polygon(x, y, sides, radius, Common.extend({}, circle, options));\n    };\n\n    /**\n     * Creates a new rigid body model with a regular polygon hull with the given number of sides.\n     * The options parameter is an object that specifies any properties you wish to override the defaults.\n     * See the properties section of the `Matter.Body` module for detailed information on what you can pass via the `options` object.\n     * @method polygon\n     * @param {number} x\n     * @param {number} y\n     * @param {number} sides\n     * @param {number} radius\n     * @param {object} [options]\n     * @return {body} A new regular polygon body\n     */\n    Bodies.polygon = function(x, y, sides, radius, options) {\n        options = options || {};\n\n        if (sides < 3)\n            return Bodies.circle(x, y, radius, options);\n\n        var theta = 2 * Math.PI / sides,\n            path = '',\n            offset = theta * 0.5;\n\n        for (var i = 0; i < sides; i += 1) {\n            var angle = offset + (i * theta),\n                xx = Math.cos(angle) * radius,\n                yy = Math.sin(angle) * radius;\n\n            path += 'L ' + xx.toFixed(3) + ' ' + yy.toFixed(3) + ' ';\n        }\n\n        var polygon = {\n            label: 'Polygon Body',\n            position: { x: x, y: y },\n            vertices: Vertices.fromPath(path)\n        };\n\n        if (options.chamfer) {\n            var chamfer = options.chamfer;\n            polygon.vertices = Vertices.chamfer(polygon.vertices, chamfer.radius,\n                                    chamfer.quality, chamfer.qualityMin, chamfer.qualityMax);\n            delete options.chamfer;\n        }\n\n        return Body.create(Common.extend({}, polygon, options));\n    };\n\n    /**\n     * Creates a body using the supplied vertices (or an array containing multiple sets of vertices).\n     * If the vertices are convex, they will pass through as supplied.\n     * Otherwise if the vertices are concave, they will be decomposed if [poly-decomp.js](https://github.com/schteppe/poly-decomp.js) is available.\n     * Note that this process is not guaranteed to support complex sets of vertices (e.g. those with holes may fail).\n     * By default the decomposition will discard collinear edges (to improve performance).\n     * It can also optionally discard any parts that have an area less than `minimumArea`.\n     * If the vertices can not be decomposed, the result will fall back to using the convex hull.\n     * The options parameter is an object that specifies any `Matter.Body` properties you wish to override the defaults.\n     * See the properties section of the `Matter.Body` module for detailed information on what you can pass via the `options` object.\n     * @method fromVertices\n     * @param {number} x\n     * @param {number} y\n     * @param [[vector]] vertexSets\n     * @param {object} [options]\n     * @param {bool} [flagInternal=false]\n     * @param {number} [removeCollinear=0.01]\n     * @param {number} [minimumArea=10]\n     * @return {body}\n     */\n    Bodies.fromVertices = function(x, y, vertexSets, options, flagInternal, removeCollinear, minimumArea) {\n        var body,\n            parts,\n            isConvex,\n            vertices,\n            i,\n            j,\n            k,\n            v,\n            z;\n\n        options = options || {};\n        parts = [];\n\n        flagInternal = typeof flagInternal !== 'undefined' ? flagInternal : false;\n        removeCollinear = typeof removeCollinear !== 'undefined' ? removeCollinear : 0.01;\n        minimumArea = typeof minimumArea !== 'undefined' ? minimumArea : 10;\n\n        if (!window.decomp) {\n            Common.log('Bodies.fromVertices: poly-decomp.js required. Could not decompose vertices. Fallback to convex hull.', 'warn');\n        }\n\n        // ensure vertexSets is an array of arrays\n        if (!Common.isArray(vertexSets[0])) {\n            vertexSets = [vertexSets];\n        }\n\n        for (v = 0; v < vertexSets.length; v += 1) {\n            vertices = vertexSets[v];\n            isConvex = Vertices.isConvex(vertices);\n\n            if (isConvex || !window.decomp) {\n                if (isConvex) {\n                    vertices = Vertices.clockwiseSort(vertices);\n                } else {\n                    // fallback to convex hull when decomposition is not possible\n                    vertices = Vertices.hull(vertices);\n                }\n\n                parts.push({\n                    position: { x: x, y: y },\n                    vertices: vertices\n                });\n            } else {\n                // initialise a decomposition\n                var concave = new decomp.Polygon();\n                for (i = 0; i < vertices.length; i++) {\n                    concave.vertices.push([vertices[i].x, vertices[i].y]);\n                }\n\n                // vertices are concave and simple, we can decompose into parts\n                concave.makeCCW();\n                if (removeCollinear !== false)\n                    concave.removeCollinearPoints(removeCollinear);\n\n                // use the quick decomposition algorithm (Bayazit)\n                var decomposed = concave.quickDecomp();\n\n                // for each decomposed chunk\n                for (i = 0; i < decomposed.length; i++) {\n                    var chunk = decomposed[i],\n                        chunkVertices = [];\n\n                    // convert vertices into the correct structure\n                    for (j = 0; j < chunk.vertices.length; j++) {\n                        chunkVertices.push({ x: chunk.vertices[j][0], y: chunk.vertices[j][1] });\n                    }\n\n                    // skip small chunks\n                    if (minimumArea > 0 && Vertices.area(chunkVertices) < minimumArea)\n                        continue;\n\n                    // create a compound part\n                    parts.push({\n                        position: Vertices.centre(chunkVertices),\n                        vertices: chunkVertices\n                    });\n                }\n            }\n        }\n\n        // create body parts\n        for (i = 0; i < parts.length; i++) {\n            parts[i] = Body.create(Common.extend(parts[i], options));\n        }\n\n        // flag internal edges (coincident part edges)\n        if (flagInternal) {\n            var coincident_max_dist = 5;\n\n            for (i = 0; i < parts.length; i++) {\n                var partA = parts[i];\n\n                for (j = i + 1; j < parts.length; j++) {\n                    var partB = parts[j];\n\n                    if (Bounds.overlaps(partA.bounds, partB.bounds)) {\n                        var pav = partA.vertices,\n                            pbv = partB.vertices;\n\n                        // iterate vertices of both parts\n                        for (k = 0; k < partA.vertices.length; k++) {\n                            for (z = 0; z < partB.vertices.length; z++) {\n                                // find distances between the vertices\n                                var da = Vector.magnitudeSquared(Vector.sub(pav[(k + 1) % pav.length], pbv[z])),\n                                    db = Vector.magnitudeSquared(Vector.sub(pav[k], pbv[(z + 1) % pbv.length]));\n\n                                // if both vertices are very close, consider the edge concident (internal)\n                                if (da < coincident_max_dist && db < coincident_max_dist) {\n                                    pav[k].isInternal = true;\n                                    pbv[z].isInternal = true;\n                                }\n                            }\n                        }\n\n                    }\n                }\n            }\n        }\n\n        if (parts.length > 1) {\n            // create the parent body to be returned, that contains generated compound parts\n            body = Body.create(Common.extend({ parts: parts.slice(0) }, options));\n            Body.setPosition(body, { x: x, y: y });\n\n            return body;\n        } else {\n            return parts[0];\n        }\n    };\n\n})();\n},{\"../body/Body\":1,\"../core/Common\":14,\"../geometry/Bounds\":24,\"../geometry/Vector\":26,\"../geometry/Vertices\":27}],22:[function(require,module,exports){\n/**\n* The `Matter.Composites` module contains factory methods for creating composite bodies\n* with commonly used configurations (such as stacks and chains).\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Composites\n*/\n\nvar Composites = {};\n\nmodule.exports = Composites;\n\nvar Composite = require('../body/Composite');\nvar Constraint = require('../constraint/Constraint');\nvar Common = require('../core/Common');\nvar Body = require('../body/Body');\nvar Bodies = require('./Bodies');\n\n(function() {\n\n    /**\n     * Create a new composite containing bodies created in the callback in a grid arrangement.\n     * This function uses the body's bounds to prevent overlaps.\n     * @method stack\n     * @param {number} xx\n     * @param {number} yy\n     * @param {number} columns\n     * @param {number} rows\n     * @param {number} columnGap\n     * @param {number} rowGap\n     * @param {function} callback\n     * @return {composite} A new composite containing objects created in the callback\n     */\n    Composites.stack = function(xx, yy, columns, rows, columnGap, rowGap, callback) {\n        var stack = Composite.create({ label: 'Stack' }),\n            x = xx,\n            y = yy,\n            lastBody,\n            i = 0;\n\n        for (var row = 0; row < rows; row++) {\n            var maxHeight = 0;\n\n            for (var column = 0; column < columns; column++) {\n                var body = callback(x, y, column, row, lastBody, i);\n\n                if (body) {\n                    var bodyHeight = body.bounds.max.y - body.bounds.min.y,\n                        bodyWidth = body.bounds.max.x - body.bounds.min.x;\n\n                    if (bodyHeight > maxHeight)\n                        maxHeight = bodyHeight;\n\n                    Body.translate(body, { x: bodyWidth * 0.5, y: bodyHeight * 0.5 });\n\n                    x = body.bounds.max.x + columnGap;\n\n                    Composite.addBody(stack, body);\n\n                    lastBody = body;\n                    i += 1;\n                } else {\n                    x += columnGap;\n                }\n            }\n\n            y += maxHeight + rowGap;\n            x = xx;\n        }\n\n        return stack;\n    };\n\n    /**\n     * Chains all bodies in the given composite together using constraints.\n     * @method chain\n     * @param {composite} composite\n     * @param {number} xOffsetA\n     * @param {number} yOffsetA\n     * @param {number} xOffsetB\n     * @param {number} yOffsetB\n     * @param {object} options\n     * @return {composite} A new composite containing objects chained together with constraints\n     */\n    Composites.chain = function(composite, xOffsetA, yOffsetA, xOffsetB, yOffsetB, options) {\n        var bodies = composite.bodies;\n\n        for (var i = 1; i < bodies.length; i++) {\n            var bodyA = bodies[i - 1],\n                bodyB = bodies[i],\n                bodyAHeight = bodyA.bounds.max.y - bodyA.bounds.min.y,\n                bodyAWidth = bodyA.bounds.max.x - bodyA.bounds.min.x,\n                bodyBHeight = bodyB.bounds.max.y - bodyB.bounds.min.y,\n                bodyBWidth = bodyB.bounds.max.x - bodyB.bounds.min.x;\n\n            var defaults = {\n                bodyA: bodyA,\n                pointA: { x: bodyAWidth * xOffsetA, y: bodyAHeight * yOffsetA },\n                bodyB: bodyB,\n                pointB: { x: bodyBWidth * xOffsetB, y: bodyBHeight * yOffsetB }\n            };\n\n            var constraint = Common.extend(defaults, options);\n\n            Composite.addConstraint(composite, Constraint.create(constraint));\n        }\n\n        composite.label += ' Chain';\n\n        return composite;\n    };\n\n    /**\n     * Connects bodies in the composite with constraints in a grid pattern, with optional cross braces.\n     * @method mesh\n     * @param {composite} composite\n     * @param {number} columns\n     * @param {number} rows\n     * @param {boolean} crossBrace\n     * @param {object} options\n     * @return {composite} The composite containing objects meshed together with constraints\n     */\n    Composites.mesh = function(composite, columns, rows, crossBrace, options) {\n        var bodies = composite.bodies,\n            row,\n            col,\n            bodyA,\n            bodyB,\n            bodyC;\n\n        for (row = 0; row < rows; row++) {\n            for (col = 1; col < columns; col++) {\n                bodyA = bodies[(col - 1) + (row * columns)];\n                bodyB = bodies[col + (row * columns)];\n                Composite.addConstraint(composite, Constraint.create(Common.extend({ bodyA: bodyA, bodyB: bodyB }, options)));\n            }\n\n            if (row > 0) {\n                for (col = 0; col < columns; col++) {\n                    bodyA = bodies[col + ((row - 1) * columns)];\n                    bodyB = bodies[col + (row * columns)];\n                    Composite.addConstraint(composite, Constraint.create(Common.extend({ bodyA: bodyA, bodyB: bodyB }, options)));\n\n                    if (crossBrace && col > 0) {\n                        bodyC = bodies[(col - 1) + ((row - 1) * columns)];\n                        Composite.addConstraint(composite, Constraint.create(Common.extend({ bodyA: bodyC, bodyB: bodyB }, options)));\n                    }\n\n                    if (crossBrace && col < columns - 1) {\n                        bodyC = bodies[(col + 1) + ((row - 1) * columns)];\n                        Composite.addConstraint(composite, Constraint.create(Common.extend({ bodyA: bodyC, bodyB: bodyB }, options)));\n                    }\n                }\n            }\n        }\n\n        composite.label += ' Mesh';\n\n        return composite;\n    };\n\n    /**\n     * Create a new composite containing bodies created in the callback in a pyramid arrangement.\n     * This function uses the body's bounds to prevent overlaps.\n     * @method pyramid\n     * @param {number} xx\n     * @param {number} yy\n     * @param {number} columns\n     * @param {number} rows\n     * @param {number} columnGap\n     * @param {number} rowGap\n     * @param {function} callback\n     * @return {composite} A new composite containing objects created in the callback\n     */\n    Composites.pyramid = function(xx, yy, columns, rows, columnGap, rowGap, callback) {\n        return Composites.stack(xx, yy, columns, rows, columnGap, rowGap, function(x, y, column, row, lastBody, i) {\n            var actualRows = Math.min(rows, Math.ceil(columns / 2)),\n                lastBodyWidth = lastBody ? lastBody.bounds.max.x - lastBody.bounds.min.x : 0;\n\n            if (row > actualRows)\n                return;\n\n            // reverse row order\n            row = actualRows - row;\n\n            var start = row,\n                end = columns - 1 - row;\n\n            if (column < start || column > end)\n                return;\n\n            // retroactively fix the first body's position, since width was unknown\n            if (i === 1) {\n                Body.translate(lastBody, { x: (column + (columns % 2 === 1 ? 1 : -1)) * lastBodyWidth, y: 0 });\n            }\n\n            var xOffset = lastBody ? column * lastBodyWidth : 0;\n\n            return callback(xx + xOffset + column * columnGap, y, column, row, lastBody, i);\n        });\n    };\n\n    /**\n     * Creates a composite with a Newton's Cradle setup of bodies and constraints.\n     * @method newtonsCradle\n     * @param {number} xx\n     * @param {number} yy\n     * @param {number} number\n     * @param {number} size\n     * @param {number} length\n     * @return {composite} A new composite newtonsCradle body\n     */\n    Composites.newtonsCradle = function(xx, yy, number, size, length) {\n        var newtonsCradle = Composite.create({ label: 'Newtons Cradle' });\n\n        for (var i = 0; i < number; i++) {\n            var separation = 1.9,\n                circle = Bodies.circle(xx + i * (size * separation), yy + length, size,\n                            { inertia: Infinity, restitution: 1, friction: 0, frictionAir: 0.0001, slop: 1 }),\n                constraint = Constraint.create({ pointA: { x: xx + i * (size * separation), y: yy }, bodyB: circle });\n\n            Composite.addBody(newtonsCradle, circle);\n            Composite.addConstraint(newtonsCradle, constraint);\n        }\n\n        return newtonsCradle;\n    };\n\n    /**\n     * Creates a composite with simple car setup of bodies and constraints.\n     * @method car\n     * @param {number} xx\n     * @param {number} yy\n     * @param {number} width\n     * @param {number} height\n     * @param {number} wheelSize\n     * @return {composite} A new composite car body\n     */\n    Composites.car = function(xx, yy, width, height, wheelSize) {\n        var group = Body.nextGroup(true),\n            wheelBase = -20,\n            wheelAOffset = -width * 0.5 + wheelBase,\n            wheelBOffset = width * 0.5 - wheelBase,\n            wheelYOffset = 0;\n\n        var car = Composite.create({ label: 'Car' }),\n            body = Bodies.trapezoid(xx, yy, width, height, 0.3, {\n                collisionFilter: {\n                    group: group\n                },\n                friction: 0.01,\n                chamfer: {\n                    radius: 10\n                }\n            });\n\n        var wheelA = Bodies.circle(xx + wheelAOffset, yy + wheelYOffset, wheelSize, {\n            collisionFilter: {\n                group: group\n            },\n            friction: 0.8,\n            density: 0.01\n        });\n\n        var wheelB = Bodies.circle(xx + wheelBOffset, yy + wheelYOffset, wheelSize, {\n            collisionFilter: {\n                group: group\n            },\n            friction: 0.8,\n            density: 0.01\n        });\n\n        var axelA = Constraint.create({\n            bodyA: body,\n            pointA: { x: wheelAOffset, y: wheelYOffset },\n            bodyB: wheelA,\n            stiffness: 0.2\n        });\n\n        var axelB = Constraint.create({\n            bodyA: body,\n            pointA: { x: wheelBOffset, y: wheelYOffset },\n            bodyB: wheelB,\n            stiffness: 0.2\n        });\n\n        Composite.addBody(car, body);\n        Composite.addBody(car, wheelA);\n        Composite.addBody(car, wheelB);\n        Composite.addConstraint(car, axelA);\n        Composite.addConstraint(car, axelB);\n\n        return car;\n    };\n\n    /**\n     * Creates a simple soft body like object.\n     * @method softBody\n     * @param {number} xx\n     * @param {number} yy\n     * @param {number} columns\n     * @param {number} rows\n     * @param {number} columnGap\n     * @param {number} rowGap\n     * @param {boolean} crossBrace\n     * @param {number} particleRadius\n     * @param {} particleOptions\n     * @param {} constraintOptions\n     * @return {composite} A new composite softBody\n     */\n    Composites.softBody = function(xx, yy, columns, rows, columnGap, rowGap, crossBrace, particleRadius, particleOptions, constraintOptions) {\n        particleOptions = Common.extend({ inertia: Infinity }, particleOptions);\n        constraintOptions = Common.extend({ stiffness: 0.4 }, constraintOptions);\n\n        var softBody = Composites.stack(xx, yy, columns, rows, columnGap, rowGap, function(x, y) {\n            return Bodies.circle(x, y, particleRadius, particleOptions);\n        });\n\n        Composites.mesh(softBody, columns, rows, crossBrace, constraintOptions);\n\n        softBody.label = 'Soft Body';\n\n        return softBody;\n    };\n\n})();\n\n},{\"../body/Body\":1,\"../body/Composite\":2,\"../constraint/Constraint\":12,\"../core/Common\":14,\"./Bodies\":21}],23:[function(require,module,exports){\n/**\n* The `Matter.Axes` module contains methods for creating and manipulating sets of axes.\n*\n* @class Axes\n*/\n\nvar Axes = {};\n\nmodule.exports = Axes;\n\nvar Vector = require('../geometry/Vector');\nvar Common = require('../core/Common');\n\n(function() {\n\n    /**\n     * Creates a new set of axes from the given vertices.\n     * @method fromVertices\n     * @param {vertices} vertices\n     * @return {axes} A new axes from the given vertices\n     */\n    Axes.fromVertices = function(vertices) {\n        var axes = {};\n\n        // find the unique axes, using edge normal gradients\n        for (var i = 0; i < vertices.length; i++) {\n            var j = (i + 1) % vertices.length,\n                normal = Vector.normalise({\n                    x: vertices[j].y - vertices[i].y,\n                    y: vertices[i].x - vertices[j].x\n                }),\n                gradient = (normal.y === 0) ? Infinity : (normal.x / normal.y);\n\n            // limit precision\n            gradient = gradient.toFixed(3).toString();\n            axes[gradient] = normal;\n        }\n\n        return Common.values(axes);\n    };\n\n    /**\n     * Rotates a set of axes by the given angle.\n     * @method rotate\n     * @param {axes} axes\n     * @param {number} angle\n     */\n    Axes.rotate = function(axes, angle) {\n        if (angle === 0)\n            return;\n\n        var cos = Math.cos(angle),\n            sin = Math.sin(angle);\n\n        for (var i = 0; i < axes.length; i++) {\n            var axis = axes[i],\n                xx;\n            xx = axis.x * cos - axis.y * sin;\n            axis.y = axis.x * sin + axis.y * cos;\n            axis.x = xx;\n        }\n    };\n\n})();\n\n},{\"../core/Common\":14,\"../geometry/Vector\":26}],24:[function(require,module,exports){\n/**\n* The `Matter.Bounds` module contains methods for creating and manipulating axis-aligned bounding boxes (AABB).\n*\n* @class Bounds\n*/\n\nvar Bounds = {};\n\nmodule.exports = Bounds;\n\n(function() {\n\n    /**\n     * Creates a new axis-aligned bounding box (AABB) for the given vertices.\n     * @method create\n     * @param {vertices} vertices\n     * @return {bounds} A new bounds object\n     */\n    Bounds.create = function(vertices) {\n        var bounds = {\n            min: { x: 0, y: 0 },\n            max: { x: 0, y: 0 }\n        };\n\n        if (vertices)\n            Bounds.update(bounds, vertices);\n\n        return bounds;\n    };\n\n    /**\n     * Updates bounds using the given vertices and extends the bounds given a velocity.\n     * @method update\n     * @param {bounds} bounds\n     * @param {vertices} vertices\n     * @param {vector} velocity\n     */\n    Bounds.update = function(bounds, vertices, velocity) {\n        bounds.min.x = Infinity;\n        bounds.max.x = -Infinity;\n        bounds.min.y = Infinity;\n        bounds.max.y = -Infinity;\n\n        for (var i = 0; i < vertices.length; i++) {\n            var vertex = vertices[i];\n            if (vertex.x > bounds.max.x) bounds.max.x = vertex.x;\n            if (vertex.x < bounds.min.x) bounds.min.x = vertex.x;\n            if (vertex.y > bounds.max.y) bounds.max.y = vertex.y;\n            if (vertex.y < bounds.min.y) bounds.min.y = vertex.y;\n        }\n\n        if (velocity) {\n            if (velocity.x > 0) {\n                bounds.max.x += velocity.x;\n            } else {\n                bounds.min.x += velocity.x;\n            }\n\n            if (velocity.y > 0) {\n                bounds.max.y += velocity.y;\n            } else {\n                bounds.min.y += velocity.y;\n            }\n        }\n    };\n\n    /**\n     * Returns true if the bounds contains the given point.\n     * @method contains\n     * @param {bounds} bounds\n     * @param {vector} point\n     * @return {boolean} True if the bounds contain the point, otherwise false\n     */\n    Bounds.contains = function(bounds, point) {\n        return point.x >= bounds.min.x && point.x <= bounds.max.x\n               && point.y >= bounds.min.y && point.y <= bounds.max.y;\n    };\n\n    /**\n     * Returns true if the two bounds intersect.\n     * @method overlaps\n     * @param {bounds} boundsA\n     * @param {bounds} boundsB\n     * @return {boolean} True if the bounds overlap, otherwise false\n     */\n    Bounds.overlaps = function(boundsA, boundsB) {\n        return (boundsA.min.x <= boundsB.max.x && boundsA.max.x >= boundsB.min.x\n                && boundsA.max.y >= boundsB.min.y && boundsA.min.y <= boundsB.max.y);\n    };\n\n    /**\n     * Translates the bounds by the given vector.\n     * @method translate\n     * @param {bounds} bounds\n     * @param {vector} vector\n     */\n    Bounds.translate = function(bounds, vector) {\n        bounds.min.x += vector.x;\n        bounds.max.x += vector.x;\n        bounds.min.y += vector.y;\n        bounds.max.y += vector.y;\n    };\n\n    /**\n     * Shifts the bounds to the given position.\n     * @method shift\n     * @param {bounds} bounds\n     * @param {vector} position\n     */\n    Bounds.shift = function(bounds, position) {\n        var deltaX = bounds.max.x - bounds.min.x,\n            deltaY = bounds.max.y - bounds.min.y;\n\n        bounds.min.x = position.x;\n        bounds.max.x = position.x + deltaX;\n        bounds.min.y = position.y;\n        bounds.max.y = position.y + deltaY;\n    };\n\n})();\n\n},{}],25:[function(require,module,exports){\n/**\n* The `Matter.Svg` module contains methods for converting SVG images into an array of vector points.\n*\n* To use this module you also need the SVGPathSeg polyfill: https://github.com/progers/pathseg\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Svg\n*/\n\nvar Svg = {};\n\nmodule.exports = Svg;\n\nvar Bounds = require('../geometry/Bounds');\n\n(function() {\n\n    /**\n     * Converts an SVG path into an array of vector points.\n     * If the input path forms a concave shape, you must decompose the result into convex parts before use.\n     * See `Bodies.fromVertices` which provides support for this.\n     * Note that this function is not guaranteed to support complex paths (such as those with holes).\n     * @method pathToVertices\n     * @param {SVGPathElement} path\n     * @param {Number} [sampleLength=15]\n     * @return {Vector[]} points\n     */\n    Svg.pathToVertices = function(path, sampleLength) {\n        // https://github.com/wout/svg.topoly.js/blob/master/svg.topoly.js\n        var i, il, total, point, segment, segments,\n            segmentsQueue, lastSegment,\n            lastPoint, segmentIndex, points = [],\n            lx, ly, length = 0, x = 0, y = 0;\n\n        sampleLength = sampleLength || 15;\n\n        var addPoint = function(px, py, pathSegType) {\n            // all odd-numbered path types are relative except PATHSEG_CLOSEPATH (1)\n            var isRelative = pathSegType % 2 === 1 && pathSegType > 1;\n\n            // when the last point doesn't equal the current point add the current point\n            if (!lastPoint || px != lastPoint.x || py != lastPoint.y) {\n                if (lastPoint && isRelative) {\n                    lx = lastPoint.x;\n                    ly = lastPoint.y;\n                } else {\n                    lx = 0;\n                    ly = 0;\n                }\n\n                var point = {\n                    x: lx + px,\n                    y: ly + py\n                };\n\n                // set last point\n                if (isRelative || !lastPoint) {\n                    lastPoint = point;\n                }\n\n                points.push(point);\n\n                x = lx + px;\n                y = ly + py;\n            }\n        };\n\n        var addSegmentPoint = function(segment) {\n            var segType = segment.pathSegTypeAsLetter.toUpperCase();\n\n            // skip path ends\n            if (segType === 'Z')\n                return;\n\n            // map segment to x and y\n            switch (segType) {\n\n            case 'M':\n            case 'L':\n            case 'T':\n            case 'C':\n            case 'S':\n            case 'Q':\n                x = segment.x;\n                y = segment.y;\n                break;\n            case 'H':\n                x = segment.x;\n                break;\n            case 'V':\n                y = segment.y;\n                break;\n            }\n\n            addPoint(x, y, segment.pathSegType);\n        };\n\n        // ensure path is absolute\n        _svgPathToAbsolute(path);\n\n        // get total length\n        total = path.getTotalLength();\n\n        // queue segments\n        segments = [];\n        for (i = 0; i < path.pathSegList.numberOfItems; i += 1)\n            segments.push(path.pathSegList.getItem(i));\n\n        segmentsQueue = segments.concat();\n\n        // sample through path\n        while (length < total) {\n            // get segment at position\n            segmentIndex = path.getPathSegAtLength(length);\n            segment = segments[segmentIndex];\n\n            // new segment\n            if (segment != lastSegment) {\n                while (segmentsQueue.length && segmentsQueue[0] != segment)\n                    addSegmentPoint(segmentsQueue.shift());\n\n                lastSegment = segment;\n            }\n\n            // add points in between when curving\n            // TODO: adaptive sampling\n            switch (segment.pathSegTypeAsLetter.toUpperCase()) {\n\n            case 'C':\n            case 'T':\n            case 'S':\n            case 'Q':\n            case 'A':\n                point = path.getPointAtLength(length);\n                addPoint(point.x, point.y, 0);\n                break;\n\n            }\n\n            // increment by sample value\n            length += sampleLength;\n        }\n\n        // add remaining segments not passed by sampling\n        for (i = 0, il = segmentsQueue.length; i < il; ++i)\n            addSegmentPoint(segmentsQueue[i]);\n\n        return points;\n    };\n\n    var _svgPathToAbsolute = function(path) {\n        // http://phrogz.net/convert-svg-path-to-all-absolute-commands\n        var x0, y0, x1, y1, x2, y2, segs = path.pathSegList,\n            x = 0, y = 0, len = segs.numberOfItems;\n\n        for (var i = 0; i < len; ++i) {\n            var seg = segs.getItem(i),\n                segType = seg.pathSegTypeAsLetter;\n\n            if (/[MLHVCSQTA]/.test(segType)) {\n                if ('x' in seg) x = seg.x;\n                if ('y' in seg) y = seg.y;\n            } else {\n                if ('x1' in seg) x1 = x + seg.x1;\n                if ('x2' in seg) x2 = x + seg.x2;\n                if ('y1' in seg) y1 = y + seg.y1;\n                if ('y2' in seg) y2 = y + seg.y2;\n                if ('x' in seg) x += seg.x;\n                if ('y' in seg) y += seg.y;\n\n                switch (segType) {\n\n                case 'm':\n                    segs.replaceItem(path.createSVGPathSegMovetoAbs(x, y), i);\n                    break;\n                case 'l':\n                    segs.replaceItem(path.createSVGPathSegLinetoAbs(x, y), i);\n                    break;\n                case 'h':\n                    segs.replaceItem(path.createSVGPathSegLinetoHorizontalAbs(x), i);\n                    break;\n                case 'v':\n                    segs.replaceItem(path.createSVGPathSegLinetoVerticalAbs(y), i);\n                    break;\n                case 'c':\n                    segs.replaceItem(path.createSVGPathSegCurvetoCubicAbs(x, y, x1, y1, x2, y2), i);\n                    break;\n                case 's':\n                    segs.replaceItem(path.createSVGPathSegCurvetoCubicSmoothAbs(x, y, x2, y2), i);\n                    break;\n                case 'q':\n                    segs.replaceItem(path.createSVGPathSegCurvetoQuadraticAbs(x, y, x1, y1), i);\n                    break;\n                case 't':\n                    segs.replaceItem(path.createSVGPathSegCurvetoQuadraticSmoothAbs(x, y), i);\n                    break;\n                case 'a':\n                    segs.replaceItem(path.createSVGPathSegArcAbs(x, y, seg.r1, seg.r2, seg.angle, seg.largeArcFlag, seg.sweepFlag), i);\n                    break;\n                case 'z':\n                case 'Z':\n                    x = x0;\n                    y = y0;\n                    break;\n\n                }\n            }\n\n            if (segType == 'M' || segType == 'm') {\n                x0 = x;\n                y0 = y;\n            }\n        }\n    };\n\n})();\n},{\"../geometry/Bounds\":24}],26:[function(require,module,exports){\n/**\n* The `Matter.Vector` module contains methods for creating and manipulating vectors.\n* Vectors are the basis of all the geometry related operations in the engine.\n* A `Matter.Vector` object is of the form `{ x: 0, y: 0 }`.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Vector\n*/\n\n// TODO: consider params for reusing vector objects\n\nvar Vector = {};\n\nmodule.exports = Vector;\n\n(function() {\n\n    /**\n     * Creates a new vector.\n     * @method create\n     * @param {number} x\n     * @param {number} y\n     * @return {vector} A new vector\n     */\n    Vector.create = function(x, y) {\n        return { x: x || 0, y: y || 0 };\n    };\n\n    /**\n     * Returns a new vector with `x` and `y` copied from the given `vector`.\n     * @method clone\n     * @param {vector} vector\n     * @return {vector} A new cloned vector\n     */\n    Vector.clone = function(vector) {\n        return { x: vector.x, y: vector.y };\n    };\n\n    /**\n     * Returns the magnitude (length) of a vector.\n     * @method magnitude\n     * @param {vector} vector\n     * @return {number} The magnitude of the vector\n     */\n    Vector.magnitude = function(vector) {\n        return Math.sqrt((vector.x * vector.x) + (vector.y * vector.y));\n    };\n\n    /**\n     * Returns the magnitude (length) of a vector (therefore saving a `sqrt` operation).\n     * @method magnitudeSquared\n     * @param {vector} vector\n     * @return {number} The squared magnitude of the vector\n     */\n    Vector.magnitudeSquared = function(vector) {\n        return (vector.x * vector.x) + (vector.y * vector.y);\n    };\n\n    /**\n     * Rotates the vector about (0, 0) by specified angle.\n     * @method rotate\n     * @param {vector} vector\n     * @param {number} angle\n     * @return {vector} A new vector rotated about (0, 0)\n     */\n    Vector.rotate = function(vector, angle) {\n        var cos = Math.cos(angle), sin = Math.sin(angle);\n        return {\n            x: vector.x * cos - vector.y * sin,\n            y: vector.x * sin + vector.y * cos\n        };\n    };\n\n    /**\n     * Rotates the vector about a specified point by specified angle.\n     * @method rotateAbout\n     * @param {vector} vector\n     * @param {number} angle\n     * @param {vector} point\n     * @param {vector} [output]\n     * @return {vector} A new vector rotated about the point\n     */\n    Vector.rotateAbout = function(vector, angle, point, output) {\n        var cos = Math.cos(angle), sin = Math.sin(angle);\n        if (!output) output = {};\n        var x = point.x + ((vector.x - point.x) * cos - (vector.y - point.y) * sin);\n        output.y = point.y + ((vector.x - point.x) * sin + (vector.y - point.y) * cos);\n        output.x = x;\n        return output;\n    };\n\n    /**\n     * Normalises a vector (such that its magnitude is `1`).\n     * @method normalise\n     * @param {vector} vector\n     * @return {vector} A new vector normalised\n     */\n    Vector.normalise = function(vector) {\n        var magnitude = Vector.magnitude(vector);\n        if (magnitude === 0)\n            return { x: 0, y: 0 };\n        return { x: vector.x / magnitude, y: vector.y / magnitude };\n    };\n\n    /**\n     * Returns the dot-product of two vectors.\n     * @method dot\n     * @param {vector} vectorA\n     * @param {vector} vectorB\n     * @return {number} The dot product of the two vectors\n     */\n    Vector.dot = function(vectorA, vectorB) {\n        return (vectorA.x * vectorB.x) + (vectorA.y * vectorB.y);\n    };\n\n    /**\n     * Returns the cross-product of two vectors.\n     * @method cross\n     * @param {vector} vectorA\n     * @param {vector} vectorB\n     * @return {number} The cross product of the two vectors\n     */\n    Vector.cross = function(vectorA, vectorB) {\n        return (vectorA.x * vectorB.y) - (vectorA.y * vectorB.x);\n    };\n\n    /**\n     * Returns the cross-product of three vectors.\n     * @method cross3\n     * @param {vector} vectorA\n     * @param {vector} vectorB\n     * @param {vector} vectorC\n     * @return {number} The cross product of the three vectors\n     */\n    Vector.cross3 = function(vectorA, vectorB, vectorC) {\n        return (vectorB.x - vectorA.x) * (vectorC.y - vectorA.y) - (vectorB.y - vectorA.y) * (vectorC.x - vectorA.x);\n    };\n\n    /**\n     * Adds the two vectors.\n     * @method add\n     * @param {vector} vectorA\n     * @param {vector} vectorB\n     * @param {vector} [output]\n     * @return {vector} A new vector of vectorA and vectorB added\n     */\n    Vector.add = function(vectorA, vectorB, output) {\n        if (!output) output = {};\n        output.x = vectorA.x + vectorB.x;\n        output.y = vectorA.y + vectorB.y;\n        return output;\n    };\n\n    /**\n     * Subtracts the two vectors.\n     * @method sub\n     * @param {vector} vectorA\n     * @param {vector} vectorB\n     * @param {vector} [output]\n     * @return {vector} A new vector of vectorA and vectorB subtracted\n     */\n    Vector.sub = function(vectorA, vectorB, output) {\n        if (!output) output = {};\n        output.x = vectorA.x - vectorB.x;\n        output.y = vectorA.y - vectorB.y;\n        return output;\n    };\n\n    /**\n     * Multiplies a vector and a scalar.\n     * @method mult\n     * @param {vector} vector\n     * @param {number} scalar\n     * @return {vector} A new vector multiplied by scalar\n     */\n    Vector.mult = function(vector, scalar) {\n        return { x: vector.x * scalar, y: vector.y * scalar };\n    };\n\n    /**\n     * Divides a vector and a scalar.\n     * @method div\n     * @param {vector} vector\n     * @param {number} scalar\n     * @return {vector} A new vector divided by scalar\n     */\n    Vector.div = function(vector, scalar) {\n        return { x: vector.x / scalar, y: vector.y / scalar };\n    };\n\n    /**\n     * Returns the perpendicular vector. Set `negate` to true for the perpendicular in the opposite direction.\n     * @method perp\n     * @param {vector} vector\n     * @param {bool} [negate=false]\n     * @return {vector} The perpendicular vector\n     */\n    Vector.perp = function(vector, negate) {\n        negate = negate === true ? -1 : 1;\n        return { x: negate * -vector.y, y: negate * vector.x };\n    };\n\n    /**\n     * Negates both components of a vector such that it points in the opposite direction.\n     * @method neg\n     * @param {vector} vector\n     * @return {vector} The negated vector\n     */\n    Vector.neg = function(vector) {\n        return { x: -vector.x, y: -vector.y };\n    };\n\n    /**\n     * Returns the angle in radians between the two vectors relative to the x-axis.\n     * @method angle\n     * @param {vector} vectorA\n     * @param {vector} vectorB\n     * @return {number} The angle in radians\n     */\n    Vector.angle = function(vectorA, vectorB) {\n        return Math.atan2(vectorB.y - vectorA.y, vectorB.x - vectorA.x);\n    };\n\n    /**\n     * Temporary vector pool (not thread-safe).\n     * @property _temp\n     * @type {vector[]}\n     * @private\n     */\n    Vector._temp = [Vector.create(), Vector.create(),\n                    Vector.create(), Vector.create(),\n                    Vector.create(), Vector.create()];\n\n})();\n},{}],27:[function(require,module,exports){\n/**\n* The `Matter.Vertices` module contains methods for creating and manipulating sets of vertices.\n* A set of vertices is an array of `Matter.Vector` with additional indexing properties inserted by `Vertices.create`.\n* A `Matter.Body` maintains a set of vertices to represent the shape of the object (its convex hull).\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Vertices\n*/\n\nvar Vertices = {};\n\nmodule.exports = Vertices;\n\nvar Vector = require('../geometry/Vector');\nvar Common = require('../core/Common');\n\n(function() {\n\n    /**\n     * Creates a new set of `Matter.Body` compatible vertices.\n     * The `points` argument accepts an array of `Matter.Vector` points orientated around the origin `(0, 0)`, for example:\n     *\n     *     [{ x: 0, y: 0 }, { x: 25, y: 50 }, { x: 50, y: 0 }]\n     *\n     * The `Vertices.create` method returns a new array of vertices, which are similar to Matter.Vector objects,\n     * but with some additional references required for efficient collision detection routines.\n     *\n     * Note that the `body` argument is not optional, a `Matter.Body` reference must be provided.\n     *\n     * @method create\n     * @param {vector[]} points\n     * @param {body} body\n     */\n    Vertices.create = function(points, body) {\n        var vertices = [];\n\n        for (var i = 0; i < points.length; i++) {\n            var point = points[i],\n                vertex = {\n                    x: point.x,\n                    y: point.y,\n                    index: i,\n                    body: body,\n                    isInternal: false\n                };\n\n            vertices.push(vertex);\n        }\n\n        return vertices;\n    };\n\n    /**\n     * Parses a string containing ordered x y pairs separated by spaces (and optionally commas),\n     * into a `Matter.Vertices` object for the given `Matter.Body`.\n     * For parsing SVG paths, see `Svg.pathToVertices`.\n     * @method fromPath\n     * @param {string} path\n     * @param {body} body\n     * @return {vertices} vertices\n     */\n    Vertices.fromPath = function(path, body) {\n        var pathPattern = /L?\\s*([\\-\\d\\.e]+)[\\s,]*([\\-\\d\\.e]+)*/ig,\n            points = [];\n\n        path.replace(pathPattern, function(match, x, y) {\n            points.push({ x: parseFloat(x), y: parseFloat(y) });\n        });\n\n        return Vertices.create(points, body);\n    };\n\n    /**\n     * Returns the centre (centroid) of the set of vertices.\n     * @method centre\n     * @param {vertices} vertices\n     * @return {vector} The centre point\n     */\n    Vertices.centre = function(vertices) {\n        var area = Vertices.area(vertices, true),\n            centre = { x: 0, y: 0 },\n            cross,\n            temp,\n            j;\n\n        for (var i = 0; i < vertices.length; i++) {\n            j = (i + 1) % vertices.length;\n            cross = Vector.cross(vertices[i], vertices[j]);\n            temp = Vector.mult(Vector.add(vertices[i], vertices[j]), cross);\n            centre = Vector.add(centre, temp);\n        }\n\n        return Vector.div(centre, 6 * area);\n    };\n\n    /**\n     * Returns the average (mean) of the set of vertices.\n     * @method mean\n     * @param {vertices} vertices\n     * @return {vector} The average point\n     */\n    Vertices.mean = function(vertices) {\n        var average = { x: 0, y: 0 };\n\n        for (var i = 0; i < vertices.length; i++) {\n            average.x += vertices[i].x;\n            average.y += vertices[i].y;\n        }\n\n        return Vector.div(average, vertices.length);\n    };\n\n    /**\n     * Returns the area of the set of vertices.\n     * @method area\n     * @param {vertices} vertices\n     * @param {bool} signed\n     * @return {number} The area\n     */\n    Vertices.area = function(vertices, signed) {\n        var area = 0,\n            j = vertices.length - 1;\n\n        for (var i = 0; i < vertices.length; i++) {\n            area += (vertices[j].x - vertices[i].x) * (vertices[j].y + vertices[i].y);\n            j = i;\n        }\n\n        if (signed)\n            return area / 2;\n\n        return Math.abs(area) / 2;\n    };\n\n    /**\n     * Returns the moment of inertia (second moment of area) of the set of vertices given the total mass.\n     * @method inertia\n     * @param {vertices} vertices\n     * @param {number} mass\n     * @return {number} The polygon's moment of inertia\n     */\n    Vertices.inertia = function(vertices, mass) {\n        var numerator = 0,\n            denominator = 0,\n            v = vertices,\n            cross,\n            j;\n\n        // find the polygon's moment of inertia, using second moment of area\n        // http://www.physicsforums.com/showthread.php?t=25293\n        for (var n = 0; n < v.length; n++) {\n            j = (n + 1) % v.length;\n            cross = Math.abs(Vector.cross(v[j], v[n]));\n            numerator += cross * (Vector.dot(v[j], v[j]) + Vector.dot(v[j], v[n]) + Vector.dot(v[n], v[n]));\n            denominator += cross;\n        }\n\n        return (mass / 6) * (numerator / denominator);\n    };\n\n    /**\n     * Translates the set of vertices in-place.\n     * @method translate\n     * @param {vertices} vertices\n     * @param {vector} vector\n     * @param {number} scalar\n     */\n    Vertices.translate = function(vertices, vector, scalar) {\n        var i;\n        if (scalar) {\n            for (i = 0; i < vertices.length; i++) {\n                vertices[i].x += vector.x * scalar;\n                vertices[i].y += vector.y * scalar;\n            }\n        } else {\n            for (i = 0; i < vertices.length; i++) {\n                vertices[i].x += vector.x;\n                vertices[i].y += vector.y;\n            }\n        }\n\n        return vertices;\n    };\n\n    /**\n     * Rotates the set of vertices in-place.\n     * @method rotate\n     * @param {vertices} vertices\n     * @param {number} angle\n     * @param {vector} point\n     */\n    Vertices.rotate = function(vertices, angle, point) {\n        if (angle === 0)\n            return;\n\n        var cos = Math.cos(angle),\n            sin = Math.sin(angle);\n\n        for (var i = 0; i < vertices.length; i++) {\n            var vertice = vertices[i],\n                dx = vertice.x - point.x,\n                dy = vertice.y - point.y;\n\n            vertice.x = point.x + (dx * cos - dy * sin);\n            vertice.y = point.y + (dx * sin + dy * cos);\n        }\n\n        return vertices;\n    };\n\n    /**\n     * Returns `true` if the `point` is inside the set of `vertices`.\n     * @method contains\n     * @param {vertices} vertices\n     * @param {vector} point\n     * @return {boolean} True if the vertices contains point, otherwise false\n     */\n    Vertices.contains = function(vertices, point) {\n        for (var i = 0; i < vertices.length; i++) {\n            var vertice = vertices[i],\n                nextVertice = vertices[(i + 1) % vertices.length];\n            if ((point.x - vertice.x) * (nextVertice.y - vertice.y) + (point.y - vertice.y) * (vertice.x - nextVertice.x) > 0) {\n                return false;\n            }\n        }\n\n        return true;\n    };\n\n    /**\n     * Scales the vertices from a point (default is centre) in-place.\n     * @method scale\n     * @param {vertices} vertices\n     * @param {number} scaleX\n     * @param {number} scaleY\n     * @param {vector} point\n     */\n    Vertices.scale = function(vertices, scaleX, scaleY, point) {\n        if (scaleX === 1 && scaleY === 1)\n            return vertices;\n\n        point = point || Vertices.centre(vertices);\n\n        var vertex,\n            delta;\n\n        for (var i = 0; i < vertices.length; i++) {\n            vertex = vertices[i];\n            delta = Vector.sub(vertex, point);\n            vertices[i].x = point.x + delta.x * scaleX;\n            vertices[i].y = point.y + delta.y * scaleY;\n        }\n\n        return vertices;\n    };\n\n    /**\n     * Chamfers a set of vertices by giving them rounded corners, returns a new set of vertices.\n     * The radius parameter is a single number or an array to specify the radius for each vertex.\n     * @method chamfer\n     * @param {vertices} vertices\n     * @param {number[]} radius\n     * @param {number} quality\n     * @param {number} qualityMin\n     * @param {number} qualityMax\n     */\n    Vertices.chamfer = function(vertices, radius, quality, qualityMin, qualityMax) {\n        radius = radius || [8];\n\n        if (!radius.length)\n            radius = [radius];\n\n        // quality defaults to -1, which is auto\n        quality = (typeof quality !== 'undefined') ? quality : -1;\n        qualityMin = qualityMin || 2;\n        qualityMax = qualityMax || 14;\n\n        var newVertices = [];\n\n        for (var i = 0; i < vertices.length; i++) {\n            var prevVertex = vertices[i - 1 >= 0 ? i - 1 : vertices.length - 1],\n                vertex = vertices[i],\n                nextVertex = vertices[(i + 1) % vertices.length],\n                currentRadius = radius[i < radius.length ? i : radius.length - 1];\n\n            if (currentRadius === 0) {\n                newVertices.push(vertex);\n                continue;\n            }\n\n            var prevNormal = Vector.normalise({\n                x: vertex.y - prevVertex.y,\n                y: prevVertex.x - vertex.x\n            });\n\n            var nextNormal = Vector.normalise({\n                x: nextVertex.y - vertex.y,\n                y: vertex.x - nextVertex.x\n            });\n\n            var diagonalRadius = Math.sqrt(2 * Math.pow(currentRadius, 2)),\n                radiusVector = Vector.mult(Common.clone(prevNormal), currentRadius),\n                midNormal = Vector.normalise(Vector.mult(Vector.add(prevNormal, nextNormal), 0.5)),\n                scaledVertex = Vector.sub(vertex, Vector.mult(midNormal, diagonalRadius));\n\n            var precision = quality;\n\n            if (quality === -1) {\n                // automatically decide precision\n                precision = Math.pow(currentRadius, 0.32) * 1.75;\n            }\n\n            precision = Common.clamp(precision, qualityMin, qualityMax);\n\n            // use an even value for precision, more likely to reduce axes by using symmetry\n            if (precision % 2 === 1)\n                precision += 1;\n\n            var alpha = Math.acos(Vector.dot(prevNormal, nextNormal)),\n                theta = alpha / precision;\n\n            for (var j = 0; j < precision; j++) {\n                newVertices.push(Vector.add(Vector.rotate(radiusVector, theta * j), scaledVertex));\n            }\n        }\n\n        return newVertices;\n    };\n\n    /**\n     * Sorts the input vertices into clockwise order in place.\n     * @method clockwiseSort\n     * @param {vertices} vertices\n     * @return {vertices} vertices\n     */\n    Vertices.clockwiseSort = function(vertices) {\n        var centre = Vertices.mean(vertices);\n\n        vertices.sort(function(vertexA, vertexB) {\n            return Vector.angle(centre, vertexA) - Vector.angle(centre, vertexB);\n        });\n\n        return vertices;\n    };\n\n    /**\n     * Returns true if the vertices form a convex shape (vertices must be in clockwise order).\n     * @method isConvex\n     * @param {vertices} vertices\n     * @return {bool} `true` if the `vertices` are convex, `false` if not (or `null` if not computable).\n     */\n    Vertices.isConvex = function(vertices) {\n        // http://paulbourke.net/geometry/polygonmesh/\n\n        var flag = 0,\n            n = vertices.length,\n            i,\n            j,\n            k,\n            z;\n\n        if (n < 3)\n            return null;\n\n        for (i = 0; i < n; i++) {\n            j = (i + 1) % n;\n            k = (i + 2) % n;\n            z = (vertices[j].x - vertices[i].x) * (vertices[k].y - vertices[j].y);\n            z -= (vertices[j].y - vertices[i].y) * (vertices[k].x - vertices[j].x);\n\n            if (z < 0) {\n                flag |= 1;\n            } else if (z > 0) {\n                flag |= 2;\n            }\n\n            if (flag === 3) {\n                return false;\n            }\n        }\n\n        if (flag !== 0){\n            return true;\n        } else {\n            return null;\n        }\n    };\n\n    /**\n     * Returns the convex hull of the input vertices as a new array of points.\n     * @method hull\n     * @param {vertices} vertices\n     * @return [vertex] vertices\n     */\n    Vertices.hull = function(vertices) {\n        // http://en.wikibooks.org/wiki/Algorithm_Implementation/Geometry/Convex_hull/Monotone_chain\n\n        var upper = [],\n            lower = [],\n            vertex,\n            i;\n\n        // sort vertices on x-axis (y-axis for ties)\n        vertices = vertices.slice(0);\n        vertices.sort(function(vertexA, vertexB) {\n            var dx = vertexA.x - vertexB.x;\n            return dx !== 0 ? dx : vertexA.y - vertexB.y;\n        });\n\n        // build lower hull\n        for (i = 0; i < vertices.length; i++) {\n            vertex = vertices[i];\n\n            while (lower.length >= 2\n                   && Vector.cross3(lower[lower.length - 2], lower[lower.length - 1], vertex) <= 0) {\n                lower.pop();\n            }\n\n            lower.push(vertex);\n        }\n\n        // build upper hull\n        for (i = vertices.length - 1; i >= 0; i--) {\n            vertex = vertices[i];\n\n            while (upper.length >= 2\n                   && Vector.cross3(upper[upper.length - 2], upper[upper.length - 1], vertex) <= 0) {\n                upper.pop();\n            }\n\n            upper.push(vertex);\n        }\n\n        // concatenation of the lower and upper hulls gives the convex hull\n        // omit last points because they are repeated at the beginning of the other list\n        upper.pop();\n        lower.pop();\n\n        return upper.concat(lower);\n    };\n\n})();\n\n},{\"../core/Common\":14,\"../geometry/Vector\":26}],28:[function(require,module,exports){\nvar Matter = module.exports = {};\nMatter.version = 'master';\n\nMatter.Body = require('../body/Body');\nMatter.Composite = require('../body/Composite');\nMatter.World = require('../body/World');\n\nMatter.Contact = require('../collision/Contact');\nMatter.Detector = require('../collision/Detector');\nMatter.Grid = require('../collision/Grid');\nMatter.Pairs = require('../collision/Pairs');\nMatter.Pair = require('../collision/Pair');\nMatter.Query = require('../collision/Query');\nMatter.Resolver = require('../collision/Resolver');\nMatter.SAT = require('../collision/SAT');\n\nMatter.Constraint = require('../constraint/Constraint');\nMatter.MouseConstraint = require('../constraint/MouseConstraint');\n\nMatter.Common = require('../core/Common');\nMatter.Engine = require('../core/Engine');\nMatter.Events = require('../core/Events');\nMatter.Mouse = require('../core/Mouse');\nMatter.Runner = require('../core/Runner');\nMatter.Sleeping = require('../core/Sleeping');\n\n\nMatter.Bodies = require('../factory/Bodies');\nMatter.Composites = require('../factory/Composites');\n\nMatter.Axes = require('../geometry/Axes');\nMatter.Bounds = require('../geometry/Bounds');\nMatter.Svg = require('../geometry/Svg');\nMatter.Vector = require('../geometry/Vector');\nMatter.Vertices = require('../geometry/Vertices');\n\nMatter.Render = require('../render/Render');\nMatter.RenderPixi = require('../render/RenderPixi');\n\n// aliases\n\nMatter.World.add = Matter.Composite.add;\nMatter.World.remove = Matter.Composite.remove;\nMatter.World.addComposite = Matter.Composite.addComposite;\nMatter.World.addBody = Matter.Composite.addBody;\nMatter.World.addConstraint = Matter.Composite.addConstraint;\nMatter.World.clear = Matter.Composite.clear;\nMatter.Engine.run = Matter.Runner.run;\n\n},{\"../body/Body\":1,\"../body/Composite\":2,\"../body/World\":3,\"../collision/Contact\":4,\"../collision/Detector\":5,\"../collision/Grid\":6,\"../collision/Pair\":7,\"../collision/Pairs\":8,\"../collision/Query\":9,\"../collision/Resolver\":10,\"../collision/SAT\":11,\"../constraint/Constraint\":12,\"../constraint/MouseConstraint\":13,\"../core/Common\":14,\"../core/Engine\":15,\"../core/Events\":16,\"../core/Metrics\":17,\"../core/Mouse\":18,\"../core/Runner\":19,\"../core/Sleeping\":20,\"../factory/Bodies\":21,\"../factory/Composites\":22,\"../geometry/Axes\":23,\"../geometry/Bounds\":24,\"../geometry/Svg\":25,\"../geometry/Vector\":26,\"../geometry/Vertices\":27,\"../render/Render\":29,\"../render/RenderPixi\":30}],29:[function(require,module,exports){\n/**\n* The `Matter.Render` module is a simple HTML5 canvas based renderer for visualising instances of `Matter.Engine`.\n* It is intended for development and debugging purposes, but may also be suitable for simple games.\n* It includes a number of drawing options including wireframe, vector with support for sprites and viewports.\n*\n* @class Render\n*/\n\nvar Render = {};\n\nmodule.exports = Render;\n\nvar Common = require('../core/Common');\nvar Composite = require('../body/Composite');\nvar Bounds = require('../geometry/Bounds');\nvar Events = require('../core/Events');\nvar Grid = require('../collision/Grid');\nvar Vector = require('../geometry/Vector');\n\n(function() {\n\n    var _requestAnimationFrame,\n        _cancelAnimationFrame;\n\n    if (typeof window !== 'undefined') {\n        _requestAnimationFrame = window.requestAnimationFrame || window.webkitRequestAnimationFrame\n                                      || window.mozRequestAnimationFrame || window.msRequestAnimationFrame\n                                      || function(callback){ window.setTimeout(function() { callback(Common.now()); }, 1000 / 60); };\n\n        _cancelAnimationFrame = window.cancelAnimationFrame || window.mozCancelAnimationFrame\n                                      || window.webkitCancelAnimationFrame || window.msCancelAnimationFrame;\n    }\n\n    /**\n     * Creates a new renderer. The options parameter is an object that specifies any properties you wish to override the defaults.\n     * All properties have default values, and many are pre-calculated automatically based on other properties.\n     * See the properties section below for detailed information on what you can pass via the `options` object.\n     * @method create\n     * @param {object} [options]\n     * @return {render} A new renderer\n     */\n    Render.create = function(options) {\n        var defaults = {\n            controller: Render,\n            engine: null,\n            element: null,\n            canvas: null,\n            mouse: null,\n            frameRequestId: null,\n            options: {\n                width: 800,\n                height: 600,\n                pixelRatio: 1,\n                background: '#fafafa',\n                wireframeBackground: '#222',\n                hasBounds: !!options.bounds,\n                enabled: true,\n                wireframes: true,\n                showSleeping: true,\n                showDebug: false,\n                showBroadphase: false,\n                showBounds: false,\n                showVelocity: false,\n                showCollisions: false,\n                showSeparations: false,\n                showAxes: false,\n                showPositions: false,\n                showAngleIndicator: false,\n                showIds: false,\n                showShadows: false,\n                showVertexNumbers: false,\n                showConvexHulls: false,\n                showInternalEdges: false,\n                showMousePosition: false\n            }\n        };\n\n        var render = Common.extend(defaults, options);\n\n        if (render.canvas) {\n            render.canvas.width = render.options.width || render.canvas.width;\n            render.canvas.height = render.options.height || render.canvas.height;\n        }\n\n        render.mouse = options.mouse;\n        render.engine = options.engine;\n        render.canvas = render.canvas || _createCanvas(render.options.width, render.options.height);\n        render.context = render.canvas.getContext('2d');\n        render.textures = {};\n\n        render.bounds = render.bounds || {\n            min: {\n                x: 0,\n                y: 0\n            },\n            max: {\n                x: render.canvas.width,\n                y: render.canvas.height\n            }\n        };\n\n        if (render.options.pixelRatio !== 1) {\n            Render.setPixelRatio(render, render.options.pixelRatio);\n        }\n\n        if (Common.isElement(render.element)) {\n            render.element.appendChild(render.canvas);\n        } else {\n            Common.log('Render.create: options.element was undefined, render.canvas was created but not appended', 'warn');\n        }\n\n        return render;\n    };\n\n    /**\n     * Continuously updates the render canvas on the `requestAnimationFrame` event.\n     * @method run\n     * @param {render} render\n     */\n    Render.run = function(render) {\n        (function loop(time){\n            render.frameRequestId = _requestAnimationFrame(loop);\n            Render.world(render);\n        })();\n    };\n\n    /**\n     * Ends execution of `Render.run` on the given `render`, by canceling the animation frame request event loop.\n     * @method stop\n     * @param {render} render\n     */\n    Render.stop = function(render) {\n        _cancelAnimationFrame(render.frameRequestId);\n    };\n\n    /**\n     * Sets the pixel ratio of the renderer and updates the canvas.\n     * To automatically detect the correct ratio, pass the string `'auto'` for `pixelRatio`.\n     * @method setPixelRatio\n     * @param {render} render\n     * @param {number} pixelRatio\n     */\n    Render.setPixelRatio = function(render, pixelRatio) {\n        var options = render.options,\n            canvas = render.canvas;\n\n        if (pixelRatio === 'auto') {\n            pixelRatio = _getPixelRatio(canvas);\n        }\n\n        options.pixelRatio = pixelRatio;\n        canvas.setAttribute('data-pixel-ratio', pixelRatio);\n        canvas.width = options.width * pixelRatio;\n        canvas.height = options.height * pixelRatio;\n        canvas.style.width = options.width + 'px';\n        canvas.style.height = options.height + 'px';\n        render.context.scale(pixelRatio, pixelRatio);\n    };\n\n    /**\n     * Renders the given `engine`'s `Matter.World` object.\n     * This is the entry point for all rendering and should be called every time the scene changes.\n     * @method world\n     * @param {render} render\n     */\n    Render.world = function(render) {\n        var engine = render.engine,\n            world = engine.world,\n            canvas = render.canvas,\n            context = render.context,\n            options = render.options,\n            allBodies = Composite.allBodies(world),\n            allConstraints = Composite.allConstraints(world),\n            background = options.wireframes ? options.wireframeBackground : options.background,\n            bodies = [],\n            constraints = [],\n            i;\n\n        var event = {\n            timestamp: engine.timing.timestamp\n        };\n\n        Events.trigger(render, 'beforeRender', event);\n\n        // apply background if it has changed\n        if (render.currentBackground !== background)\n            _applyBackground(render, background);\n\n        // clear the canvas with a transparent fill, to allow the canvas background to show\n        context.globalCompositeOperation = 'source-in';\n        context.fillStyle = \"transparent\";\n        context.fillRect(0, 0, canvas.width, canvas.height);\n        context.globalCompositeOperation = 'source-over';\n\n        // handle bounds\n        if (options.hasBounds) {\n            var boundsWidth = render.bounds.max.x - render.bounds.min.x,\n                boundsHeight = render.bounds.max.y - render.bounds.min.y,\n                boundsScaleX = boundsWidth / options.width,\n                boundsScaleY = boundsHeight / options.height;\n\n            // filter out bodies that are not in view\n            for (i = 0; i < allBodies.length; i++) {\n                var body = allBodies[i];\n                if (Bounds.overlaps(body.bounds, render.bounds))\n                    bodies.push(body);\n            }\n\n            // filter out constraints that are not in view\n            for (i = 0; i < allConstraints.length; i++) {\n                var constraint = allConstraints[i],\n                    bodyA = constraint.bodyA,\n                    bodyB = constraint.bodyB,\n                    pointAWorld = constraint.pointA,\n                    pointBWorld = constraint.pointB;\n\n                if (bodyA) pointAWorld = Vector.add(bodyA.position, constraint.pointA);\n                if (bodyB) pointBWorld = Vector.add(bodyB.position, constraint.pointB);\n\n                if (!pointAWorld || !pointBWorld)\n                    continue;\n\n                if (Bounds.contains(render.bounds, pointAWorld) || Bounds.contains(render.bounds, pointBWorld))\n                    constraints.push(constraint);\n            }\n\n            // transform the view\n            context.scale(1 / boundsScaleX, 1 / boundsScaleY);\n            context.translate(-render.bounds.min.x, -render.bounds.min.y);\n        } else {\n            constraints = allConstraints;\n            bodies = allBodies;\n        }\n\n        if (!options.wireframes || (engine.enableSleeping && options.showSleeping)) {\n            // fully featured rendering of bodies\n            Render.bodies(render, bodies, context);\n        } else {\n            if (options.showConvexHulls)\n                Render.bodyConvexHulls(render, bodies, context);\n\n            // optimised method for wireframes only\n            Render.bodyWireframes(render, bodies, context);\n        }\n\n        if (options.showBounds)\n            Render.bodyBounds(render, bodies, context);\n\n        if (options.showAxes || options.showAngleIndicator)\n            Render.bodyAxes(render, bodies, context);\n\n        if (options.showPositions)\n            Render.bodyPositions(render, bodies, context);\n\n        if (options.showVelocity)\n            Render.bodyVelocity(render, bodies, context);\n\n        if (options.showIds)\n            Render.bodyIds(render, bodies, context);\n\n        if (options.showSeparations)\n            Render.separations(render, engine.pairs.list, context);\n\n        if (options.showCollisions)\n            Render.collisions(render, engine.pairs.list, context);\n\n        if (options.showVertexNumbers)\n            Render.vertexNumbers(render, bodies, context);\n\n        if (options.showMousePosition)\n            Render.mousePosition(render, render.mouse, context);\n\n        Render.constraints(constraints, context);\n\n        if (options.showBroadphase && engine.broadphase.controller === Grid)\n            Render.grid(render, engine.broadphase, context);\n\n        if (options.showDebug)\n            Render.debug(render, context);\n\n        if (options.hasBounds) {\n            // revert view transforms\n            context.setTransform(options.pixelRatio, 0, 0, options.pixelRatio, 0, 0);\n        }\n\n        Events.trigger(render, 'afterRender', event);\n    };\n\n    /**\n     * Description\n     * @private\n     * @method debug\n     * @param {render} render\n     * @param {RenderingContext} context\n     */\n    Render.debug = function(render, context) {\n        var c = context,\n            engine = render.engine,\n            world = engine.world,\n            metrics = engine.metrics,\n            options = render.options,\n            bodies = Composite.allBodies(world),\n            space = \"    \";\n\n        if (engine.timing.timestamp - (render.debugTimestamp || 0) >= 500) {\n            var text = \"\";\n\n            if (metrics.timing) {\n                text += \"fps: \" + Math.round(metrics.timing.fps) + space;\n            }\n\n\n            render.debugString = text;\n            render.debugTimestamp = engine.timing.timestamp;\n        }\n\n        if (render.debugString) {\n            c.font = \"12px Arial\";\n\n            if (options.wireframes) {\n                c.fillStyle = 'rgba(255,255,255,0.5)';\n            } else {\n                c.fillStyle = 'rgba(0,0,0,0.5)';\n            }\n\n            var split = render.debugString.split('\\n');\n\n            for (var i = 0; i < split.length; i++) {\n                c.fillText(split[i], 50, 50 + i * 18);\n            }\n        }\n    };\n\n    /**\n     * Description\n     * @private\n     * @method constraints\n     * @param {constraint[]} constraints\n     * @param {RenderingContext} context\n     */\n    Render.constraints = function(constraints, context) {\n        var c = context;\n\n        for (var i = 0; i < constraints.length; i++) {\n            var constraint = constraints[i];\n\n            if (!constraint.render.visible || !constraint.pointA || !constraint.pointB)\n                continue;\n\n            var bodyA = constraint.bodyA,\n                bodyB = constraint.bodyB;\n\n            if (bodyA) {\n                c.beginPath();\n                c.moveTo(bodyA.position.x + constraint.pointA.x, bodyA.position.y + constraint.pointA.y);\n            } else {\n                c.beginPath();\n                c.moveTo(constraint.pointA.x, constraint.pointA.y);\n            }\n\n            if (bodyB) {\n                c.lineTo(bodyB.position.x + constraint.pointB.x, bodyB.position.y + constraint.pointB.y);\n            } else {\n                c.lineTo(constraint.pointB.x, constraint.pointB.y);\n            }\n\n            c.lineWidth = constraint.render.lineWidth;\n            c.strokeStyle = constraint.render.strokeStyle;\n            c.stroke();\n        }\n    };\n\n    /**\n     * Description\n     * @private\n     * @method bodyShadows\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodyShadows = function(render, bodies, context) {\n        var c = context,\n            engine = render.engine;\n\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n\n            if (!body.render.visible)\n                continue;\n\n            if (body.circleRadius) {\n                c.beginPath();\n                c.arc(body.position.x, body.position.y, body.circleRadius, 0, 2 * Math.PI);\n                c.closePath();\n            } else {\n                c.beginPath();\n                c.moveTo(body.vertices[0].x, body.vertices[0].y);\n                for (var j = 1; j < body.vertices.length; j++) {\n                    c.lineTo(body.vertices[j].x, body.vertices[j].y);\n                }\n                c.closePath();\n            }\n\n            var distanceX = body.position.x - render.options.width * 0.5,\n                distanceY = body.position.y - render.options.height * 0.2,\n                distance = Math.abs(distanceX) + Math.abs(distanceY);\n\n            c.shadowColor = 'rgba(0,0,0,0.15)';\n            c.shadowOffsetX = 0.05 * distanceX;\n            c.shadowOffsetY = 0.05 * distanceY;\n            c.shadowBlur = 1 + 12 * Math.min(1, distance / 1000);\n\n            c.fill();\n\n            c.shadowColor = null;\n            c.shadowOffsetX = null;\n            c.shadowOffsetY = null;\n            c.shadowBlur = null;\n        }\n    };\n\n    /**\n     * Description\n     * @private\n     * @method bodies\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodies = function(render, bodies, context) {\n        var c = context,\n            engine = render.engine,\n            options = render.options,\n            showInternalEdges = options.showInternalEdges || !options.wireframes,\n            body,\n            part,\n            i,\n            k;\n\n        for (i = 0; i < bodies.length; i++) {\n            body = bodies[i];\n\n            if (!body.render.visible)\n                continue;\n\n            // handle compound parts\n            for (k = body.parts.length > 1 ? 1 : 0; k < body.parts.length; k++) {\n                part = body.parts[k];\n\n                if (!part.render.visible)\n                    continue;\n\n                if (options.showSleeping && body.isSleeping) {\n                    c.globalAlpha = 0.5 * part.render.opacity;\n                } else if (part.render.opacity !== 1) {\n                    c.globalAlpha = part.render.opacity;\n                }\n\n                if (part.render.sprite && part.render.sprite.texture && !options.wireframes) {\n                    // part sprite\n                    var sprite = part.render.sprite,\n                        texture = _getTexture(render, sprite.texture);\n\n                    c.translate(part.position.x, part.position.y);\n                    c.rotate(part.angle);\n\n                    c.drawImage(\n                        texture,\n                        texture.width * -sprite.xOffset * sprite.xScale,\n                        texture.height * -sprite.yOffset * sprite.yScale,\n                        texture.width * sprite.xScale,\n                        texture.height * sprite.yScale\n                    );\n\n                    // revert translation, hopefully faster than save / restore\n                    c.rotate(-part.angle);\n                    c.translate(-part.position.x, -part.position.y);\n                } else {\n                    // part polygon\n                    if (part.circleRadius) {\n                        c.beginPath();\n                        c.arc(part.position.x, part.position.y, part.circleRadius, 0, 2 * Math.PI);\n                    } else {\n                        c.beginPath();\n                        c.moveTo(part.vertices[0].x, part.vertices[0].y);\n\n                        for (var j = 1; j < part.vertices.length; j++) {\n                            if (!part.vertices[j - 1].isInternal || showInternalEdges) {\n                                c.lineTo(part.vertices[j].x, part.vertices[j].y);\n                            } else {\n                                c.moveTo(part.vertices[j].x, part.vertices[j].y);\n                            }\n\n                            if (part.vertices[j].isInternal && !showInternalEdges) {\n                                c.moveTo(part.vertices[(j + 1) % part.vertices.length].x, part.vertices[(j + 1) % part.vertices.length].y);\n                            }\n                        }\n\n                        c.lineTo(part.vertices[0].x, part.vertices[0].y);\n                        c.closePath();\n                    }\n\n                    if (!options.wireframes) {\n                        c.fillStyle = part.render.fillStyle;\n                        c.lineWidth = part.render.lineWidth;\n                        c.strokeStyle = part.render.strokeStyle;\n                        c.fill();\n                    } else {\n                        c.lineWidth = 1;\n                        c.strokeStyle = '#bbb';\n                    }\n\n                    c.stroke();\n                }\n\n                c.globalAlpha = 1;\n            }\n        }\n    };\n\n    /**\n     * Optimised method for drawing body wireframes in one pass\n     * @private\n     * @method bodyWireframes\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodyWireframes = function(render, bodies, context) {\n        var c = context,\n            showInternalEdges = render.options.showInternalEdges,\n            body,\n            part,\n            i,\n            j,\n            k;\n\n        c.beginPath();\n\n        // render all bodies\n        for (i = 0; i < bodies.length; i++) {\n            body = bodies[i];\n\n            if (!body.render.visible)\n                continue;\n\n            // handle compound parts\n            for (k = body.parts.length > 1 ? 1 : 0; k < body.parts.length; k++) {\n                part = body.parts[k];\n\n                c.moveTo(part.vertices[0].x, part.vertices[0].y);\n\n                for (j = 1; j < part.vertices.length; j++) {\n                    if (!part.vertices[j - 1].isInternal || showInternalEdges) {\n                        c.lineTo(part.vertices[j].x, part.vertices[j].y);\n                    } else {\n                        c.moveTo(part.vertices[j].x, part.vertices[j].y);\n                    }\n\n                    if (part.vertices[j].isInternal && !showInternalEdges) {\n                        c.moveTo(part.vertices[(j + 1) % part.vertices.length].x, part.vertices[(j + 1) % part.vertices.length].y);\n                    }\n                }\n\n                c.lineTo(part.vertices[0].x, part.vertices[0].y);\n            }\n        }\n\n        c.lineWidth = 1;\n        c.strokeStyle = '#bbb';\n        c.stroke();\n    };\n\n    /**\n     * Optimised method for drawing body convex hull wireframes in one pass\n     * @private\n     * @method bodyConvexHulls\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodyConvexHulls = function(render, bodies, context) {\n        var c = context,\n            body,\n            part,\n            i,\n            j,\n            k;\n\n        c.beginPath();\n\n        // render convex hulls\n        for (i = 0; i < bodies.length; i++) {\n            body = bodies[i];\n\n            if (!body.render.visible || body.parts.length === 1)\n                continue;\n\n            c.moveTo(body.vertices[0].x, body.vertices[0].y);\n\n            for (j = 1; j < body.vertices.length; j++) {\n                c.lineTo(body.vertices[j].x, body.vertices[j].y);\n            }\n\n            c.lineTo(body.vertices[0].x, body.vertices[0].y);\n        }\n\n        c.lineWidth = 1;\n        c.strokeStyle = 'rgba(255,255,255,0.2)';\n        c.stroke();\n    };\n\n    /**\n     * Renders body vertex numbers.\n     * @private\n     * @method vertexNumbers\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.vertexNumbers = function(render, bodies, context) {\n        var c = context,\n            i,\n            j,\n            k;\n\n        for (i = 0; i < bodies.length; i++) {\n            var parts = bodies[i].parts;\n            for (k = parts.length > 1 ? 1 : 0; k < parts.length; k++) {\n                var part = parts[k];\n                for (j = 0; j < part.vertices.length; j++) {\n                    c.fillStyle = 'rgba(255,255,255,0.2)';\n                    c.fillText(i + '_' + j, part.position.x + (part.vertices[j].x - part.position.x) * 0.8, part.position.y + (part.vertices[j].y - part.position.y) * 0.8);\n                }\n            }\n        }\n    };\n\n    /**\n     * Renders mouse position.\n     * @private\n     * @method mousePosition\n     * @param {render} render\n     * @param {mouse} mouse\n     * @param {RenderingContext} context\n     */\n    Render.mousePosition = function(render, mouse, context) {\n        var c = context;\n        c.fillStyle = 'rgba(255,255,255,0.8)';\n        c.fillText(mouse.position.x + '  ' + mouse.position.y, mouse.position.x + 5, mouse.position.y - 5);\n    };\n\n    /**\n     * Draws body bounds\n     * @private\n     * @method bodyBounds\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodyBounds = function(render, bodies, context) {\n        var c = context,\n            engine = render.engine,\n            options = render.options;\n\n        c.beginPath();\n\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n\n            if (body.render.visible) {\n                var parts = bodies[i].parts;\n                for (var j = parts.length > 1 ? 1 : 0; j < parts.length; j++) {\n                    var part = parts[j];\n                    c.rect(part.bounds.min.x, part.bounds.min.y, part.bounds.max.x - part.bounds.min.x, part.bounds.max.y - part.bounds.min.y);\n                }\n            }\n        }\n\n        if (options.wireframes) {\n            c.strokeStyle = 'rgba(255,255,255,0.08)';\n        } else {\n            c.strokeStyle = 'rgba(0,0,0,0.1)';\n        }\n\n        c.lineWidth = 1;\n        c.stroke();\n    };\n\n    /**\n     * Draws body angle indicators and axes\n     * @private\n     * @method bodyAxes\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodyAxes = function(render, bodies, context) {\n        var c = context,\n            engine = render.engine,\n            options = render.options,\n            part,\n            i,\n            j,\n            k;\n\n        c.beginPath();\n\n        for (i = 0; i < bodies.length; i++) {\n            var body = bodies[i],\n                parts = body.parts;\n\n            if (!body.render.visible)\n                continue;\n\n            if (options.showAxes) {\n                // render all axes\n                for (j = parts.length > 1 ? 1 : 0; j < parts.length; j++) {\n                    part = parts[j];\n                    for (k = 0; k < part.axes.length; k++) {\n                        var axis = part.axes[k];\n                        c.moveTo(part.position.x, part.position.y);\n                        c.lineTo(part.position.x + axis.x * 20, part.position.y + axis.y * 20);\n                    }\n                }\n            } else {\n                for (j = parts.length > 1 ? 1 : 0; j < parts.length; j++) {\n                    part = parts[j];\n                    for (k = 0; k < part.axes.length; k++) {\n                        // render a single axis indicator\n                        c.moveTo(part.position.x, part.position.y);\n                        c.lineTo((part.vertices[0].x + part.vertices[part.vertices.length-1].x) / 2,\n                                 (part.vertices[0].y + part.vertices[part.vertices.length-1].y) / 2);\n                    }\n                }\n            }\n        }\n\n        if (options.wireframes) {\n            c.strokeStyle = 'indianred';\n        } else {\n            c.strokeStyle = 'rgba(0,0,0,0.8)';\n            c.globalCompositeOperation = 'overlay';\n        }\n\n        c.lineWidth = 1;\n        c.stroke();\n        c.globalCompositeOperation = 'source-over';\n    };\n\n    /**\n     * Draws body positions\n     * @private\n     * @method bodyPositions\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodyPositions = function(render, bodies, context) {\n        var c = context,\n            engine = render.engine,\n            options = render.options,\n            body,\n            part,\n            i,\n            k;\n\n        c.beginPath();\n\n        // render current positions\n        for (i = 0; i < bodies.length; i++) {\n            body = bodies[i];\n\n            if (!body.render.visible)\n                continue;\n\n            // handle compound parts\n            for (k = 0; k < body.parts.length; k++) {\n                part = body.parts[k];\n                c.arc(part.position.x, part.position.y, 3, 0, 2 * Math.PI, false);\n                c.closePath();\n            }\n        }\n\n        if (options.wireframes) {\n            c.fillStyle = 'indianred';\n        } else {\n            c.fillStyle = 'rgba(0,0,0,0.5)';\n        }\n        c.fill();\n\n        c.beginPath();\n\n        // render previous positions\n        for (i = 0; i < bodies.length; i++) {\n            body = bodies[i];\n            if (body.render.visible) {\n                c.arc(body.positionPrev.x, body.positionPrev.y, 2, 0, 2 * Math.PI, false);\n                c.closePath();\n            }\n        }\n\n        c.fillStyle = 'rgba(255,165,0,0.8)';\n        c.fill();\n    };\n\n    /**\n     * Draws body velocity\n     * @private\n     * @method bodyVelocity\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodyVelocity = function(render, bodies, context) {\n        var c = context;\n\n        c.beginPath();\n\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n\n            if (!body.render.visible)\n                continue;\n\n            c.moveTo(body.position.x, body.position.y);\n            c.lineTo(body.position.x + (body.position.x - body.positionPrev.x) * 2, body.position.y + (body.position.y - body.positionPrev.y) * 2);\n        }\n\n        c.lineWidth = 3;\n        c.strokeStyle = 'cornflowerblue';\n        c.stroke();\n    };\n\n    /**\n     * Draws body ids\n     * @private\n     * @method bodyIds\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodyIds = function(render, bodies, context) {\n        var c = context,\n            i,\n            j;\n\n        for (i = 0; i < bodies.length; i++) {\n            if (!bodies[i].render.visible)\n                continue;\n\n            var parts = bodies[i].parts;\n            for (j = parts.length > 1 ? 1 : 0; j < parts.length; j++) {\n                var part = parts[j];\n                c.font = \"12px Arial\";\n                c.fillStyle = 'rgba(255,255,255,0.5)';\n                c.fillText(part.id, part.position.x + 10, part.position.y - 10);\n            }\n        }\n    };\n\n    /**\n     * Description\n     * @private\n     * @method collisions\n     * @param {render} render\n     * @param {pair[]} pairs\n     * @param {RenderingContext} context\n     */\n    Render.collisions = function(render, pairs, context) {\n        var c = context,\n            options = render.options,\n            pair,\n            collision,\n            corrected,\n            bodyA,\n            bodyB,\n            i,\n            j;\n\n        c.beginPath();\n\n        // render collision positions\n        for (i = 0; i < pairs.length; i++) {\n            pair = pairs[i];\n\n            if (!pair.isActive)\n                continue;\n\n            collision = pair.collision;\n            for (j = 0; j < pair.activeContacts.length; j++) {\n                var contact = pair.activeContacts[j],\n                    vertex = contact.vertex;\n                c.rect(vertex.x - 1.5, vertex.y - 1.5, 3.5, 3.5);\n            }\n        }\n\n        if (options.wireframes) {\n            c.fillStyle = 'rgba(255,255,255,0.7)';\n        } else {\n            c.fillStyle = 'orange';\n        }\n        c.fill();\n\n        c.beginPath();\n\n        // render collision normals\n        for (i = 0; i < pairs.length; i++) {\n            pair = pairs[i];\n\n            if (!pair.isActive)\n                continue;\n\n            collision = pair.collision;\n\n            if (pair.activeContacts.length > 0) {\n                var normalPosX = pair.activeContacts[0].vertex.x,\n                    normalPosY = pair.activeContacts[0].vertex.y;\n\n                if (pair.activeContacts.length === 2) {\n                    normalPosX = (pair.activeContacts[0].vertex.x + pair.activeContacts[1].vertex.x) / 2;\n                    normalPosY = (pair.activeContacts[0].vertex.y + pair.activeContacts[1].vertex.y) / 2;\n                }\n\n                if (collision.bodyB === collision.supports[0].body || collision.bodyA.isStatic === true) {\n                    c.moveTo(normalPosX - collision.normal.x * 8, normalPosY - collision.normal.y * 8);\n                } else {\n                    c.moveTo(normalPosX + collision.normal.x * 8, normalPosY + collision.normal.y * 8);\n                }\n\n                c.lineTo(normalPosX, normalPosY);\n            }\n        }\n\n        if (options.wireframes) {\n            c.strokeStyle = 'rgba(255,165,0,0.7)';\n        } else {\n            c.strokeStyle = 'orange';\n        }\n\n        c.lineWidth = 1;\n        c.stroke();\n    };\n\n    /**\n     * Description\n     * @private\n     * @method separations\n     * @param {render} render\n     * @param {pair[]} pairs\n     * @param {RenderingContext} context\n     */\n    Render.separations = function(render, pairs, context) {\n        var c = context,\n            options = render.options,\n            pair,\n            collision,\n            corrected,\n            bodyA,\n            bodyB,\n            i,\n            j;\n\n        c.beginPath();\n\n        // render separations\n        for (i = 0; i < pairs.length; i++) {\n            pair = pairs[i];\n\n            if (!pair.isActive)\n                continue;\n\n            collision = pair.collision;\n            bodyA = collision.bodyA;\n            bodyB = collision.bodyB;\n\n            var k = 1;\n\n            if (!bodyB.isStatic && !bodyA.isStatic) k = 0.5;\n            if (bodyB.isStatic) k = 0;\n\n            c.moveTo(bodyB.position.x, bodyB.position.y);\n            c.lineTo(bodyB.position.x - collision.penetration.x * k, bodyB.position.y - collision.penetration.y * k);\n\n            k = 1;\n\n            if (!bodyB.isStatic && !bodyA.isStatic) k = 0.5;\n            if (bodyA.isStatic) k = 0;\n\n            c.moveTo(bodyA.position.x, bodyA.position.y);\n            c.lineTo(bodyA.position.x + collision.penetration.x * k, bodyA.position.y + collision.penetration.y * k);\n        }\n\n        if (options.wireframes) {\n            c.strokeStyle = 'rgba(255,165,0,0.5)';\n        } else {\n            c.strokeStyle = 'orange';\n        }\n        c.stroke();\n    };\n\n    /**\n     * Description\n     * @private\n     * @method grid\n     * @param {render} render\n     * @param {grid} grid\n     * @param {RenderingContext} context\n     */\n    Render.grid = function(render, grid, context) {\n        var c = context,\n            options = render.options;\n\n        if (options.wireframes) {\n            c.strokeStyle = 'rgba(255,180,0,0.1)';\n        } else {\n            c.strokeStyle = 'rgba(255,180,0,0.5)';\n        }\n\n        c.beginPath();\n\n        var bucketKeys = Common.keys(grid.buckets);\n\n        for (var i = 0; i < bucketKeys.length; i++) {\n            var bucketId = bucketKeys[i];\n\n            if (grid.buckets[bucketId].length < 2)\n                continue;\n\n            var region = bucketId.split(',');\n            c.rect(0.5 + parseInt(region[0], 10) * grid.bucketWidth,\n                    0.5 + parseInt(region[1], 10) * grid.bucketHeight,\n                    grid.bucketWidth,\n                    grid.bucketHeight);\n        }\n\n        c.lineWidth = 1;\n        c.stroke();\n    };\n\n    /**\n     * Description\n     * @private\n     * @method inspector\n     * @param {inspector} inspector\n     * @param {RenderingContext} context\n     */\n    Render.inspector = function(inspector, context) {\n        var engine = inspector.engine,\n            selected = inspector.selected,\n            render = inspector.render,\n            options = render.options,\n            bounds;\n\n        if (options.hasBounds) {\n            var boundsWidth = render.bounds.max.x - render.bounds.min.x,\n                boundsHeight = render.bounds.max.y - render.bounds.min.y,\n                boundsScaleX = boundsWidth / render.options.width,\n                boundsScaleY = boundsHeight / render.options.height;\n\n            context.scale(1 / boundsScaleX, 1 / boundsScaleY);\n            context.translate(-render.bounds.min.x, -render.bounds.min.y);\n        }\n\n        for (var i = 0; i < selected.length; i++) {\n            var item = selected[i].data;\n\n            context.translate(0.5, 0.5);\n            context.lineWidth = 1;\n            context.strokeStyle = 'rgba(255,165,0,0.9)';\n            context.setLineDash([1,2]);\n\n            switch (item.type) {\n\n            case 'body':\n\n                // render body selections\n                bounds = item.bounds;\n                context.beginPath();\n                context.rect(Math.floor(bounds.min.x - 3), Math.floor(bounds.min.y - 3),\n                             Math.floor(bounds.max.x - bounds.min.x + 6), Math.floor(bounds.max.y - bounds.min.y + 6));\n                context.closePath();\n                context.stroke();\n\n                break;\n\n            case 'constraint':\n\n                // render constraint selections\n                var point = item.pointA;\n                if (item.bodyA)\n                    point = item.pointB;\n                context.beginPath();\n                context.arc(point.x, point.y, 10, 0, 2 * Math.PI);\n                context.closePath();\n                context.stroke();\n\n                break;\n\n            }\n\n            context.setLineDash([]);\n            context.translate(-0.5, -0.5);\n        }\n\n        // render selection region\n        if (inspector.selectStart !== null) {\n            context.translate(0.5, 0.5);\n            context.lineWidth = 1;\n            context.strokeStyle = 'rgba(255,165,0,0.6)';\n            context.fillStyle = 'rgba(255,165,0,0.1)';\n            bounds = inspector.selectBounds;\n            context.beginPath();\n            context.rect(Math.floor(bounds.min.x), Math.floor(bounds.min.y),\n                         Math.floor(bounds.max.x - bounds.min.x), Math.floor(bounds.max.y - bounds.min.y));\n            context.closePath();\n            context.stroke();\n            context.fill();\n            context.translate(-0.5, -0.5);\n        }\n\n        if (options.hasBounds)\n            context.setTransform(1, 0, 0, 1, 0, 0);\n    };\n\n    /**\n     * Description\n     * @method _createCanvas\n     * @private\n     * @param {} width\n     * @param {} height\n     * @return canvas\n     */\n    var _createCanvas = function(width, height) {\n        var canvas = document.createElement('canvas');\n        canvas.width = width;\n        canvas.height = height;\n        canvas.oncontextmenu = function() { return false; };\n        canvas.onselectstart = function() { return false; };\n        return canvas;\n    };\n\n    /**\n     * Gets the pixel ratio of the canvas.\n     * @method _getPixelRatio\n     * @private\n     * @param {HTMLElement} canvas\n     * @return {Number} pixel ratio\n     */\n    var _getPixelRatio = function(canvas) {\n        var context = canvas.getContext('2d'),\n            devicePixelRatio = window.devicePixelRatio || 1,\n            backingStorePixelRatio = context.webkitBackingStorePixelRatio || context.mozBackingStorePixelRatio\n                                      || context.msBackingStorePixelRatio || context.oBackingStorePixelRatio\n                                      || context.backingStorePixelRatio || 1;\n\n        return devicePixelRatio / backingStorePixelRatio;\n    };\n\n    /**\n     * Gets the requested texture (an Image) via its path\n     * @method _getTexture\n     * @private\n     * @param {render} render\n     * @param {string} imagePath\n     * @return {Image} texture\n     */\n    var _getTexture = function(render, imagePath) {\n        var image = render.textures[imagePath];\n\n        if (image)\n            return image;\n\n        image = render.textures[imagePath] = new Image();\n        image.src = imagePath;\n\n        return image;\n    };\n\n    /**\n     * Applies the background to the canvas using CSS.\n     * @method applyBackground\n     * @private\n     * @param {render} render\n     * @param {string} background\n     */\n    var _applyBackground = function(render, background) {\n        var cssBackground = background;\n\n        if (/(jpg|gif|png)$/.test(background))\n            cssBackground = 'url(' + background + ')';\n\n        render.canvas.style.background = cssBackground;\n        render.canvas.style.backgroundSize = \"contain\";\n        render.currentBackground = background;\n    };\n\n    /*\n    *\n    *  Events Documentation\n    *\n    */\n\n    /**\n    * Fired before rendering\n    *\n    * @event beforeRender\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired after rendering\n    *\n    * @event afterRender\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n    /**\n     * A back-reference to the `Matter.Render` module.\n     *\n     * @property controller\n     * @type render\n     */\n\n    /**\n     * A reference to the `Matter.Engine` instance to be used.\n     *\n     * @property engine\n     * @type engine\n     */\n\n    /**\n     * A reference to the element where the canvas is to be inserted (if `render.canvas` has not been specified)\n     *\n     * @property element\n     * @type HTMLElement\n     * @default null\n     */\n\n    /**\n     * The canvas element to render to. If not specified, one will be created if `render.element` has been specified.\n     *\n     * @property canvas\n     * @type HTMLCanvasElement\n     * @default null\n     */\n\n    /**\n     * The configuration options of the renderer.\n     *\n     * @property options\n     * @type {}\n     */\n\n    /**\n     * The target width in pixels of the `render.canvas` to be created.\n     *\n     * @property options.width\n     * @type number\n     * @default 800\n     */\n\n    /**\n     * The target height in pixels of the `render.canvas` to be created.\n     *\n     * @property options.height\n     * @type number\n     * @default 600\n     */\n\n    /**\n     * A flag that specifies if `render.bounds` should be used when rendering.\n     *\n     * @property options.hasBounds\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A `Bounds` object that specifies the drawing view region.\n     * Rendering will be automatically transformed and scaled to fit within the canvas size (`render.options.width` and `render.options.height`).\n     * This allows for creating views that can pan or zoom around the scene.\n     * You must also set `render.options.hasBounds` to `true` to enable bounded rendering.\n     *\n     * @property bounds\n     * @type bounds\n     */\n\n    /**\n     * The 2d rendering context from the `render.canvas` element.\n     *\n     * @property context\n     * @type CanvasRenderingContext2D\n     */\n\n    /**\n     * The sprite texture cache.\n     *\n     * @property textures\n     * @type {}\n     */\n\n})();\n\n},{\"../body/Composite\":2,\"../collision/Grid\":6,\"../core/Common\":14,\"../core/Events\":16,\"../geometry/Bounds\":24,\"../geometry/Vector\":26}],30:[function(require,module,exports){\n/**\n* The `Matter.RenderPixi` module is an example renderer using pixi.js.\n* See also `Matter.Render` for a canvas based renderer.\n*\n* @class RenderPixi\n* @deprecated the Matter.RenderPixi module will soon be removed from the Matter.js core.\n* It will likely be moved to its own repository (but maintenance will be limited).\n*/\n\nvar RenderPixi = {};\n\nmodule.exports = RenderPixi;\n\nvar Composite = require('../body/Composite');\nvar Common = require('../core/Common');\n\n(function() {\n\n    var _requestAnimationFrame,\n        _cancelAnimationFrame;\n\n    if (typeof window !== 'undefined') {\n        _requestAnimationFrame = window.requestAnimationFrame || window.webkitRequestAnimationFrame\n                                      || window.mozRequestAnimationFrame || window.msRequestAnimationFrame\n                                      || function(callback){ window.setTimeout(function() { callback(Common.now()); }, 1000 / 60); };\n\n        _cancelAnimationFrame = window.cancelAnimationFrame || window.mozCancelAnimationFrame\n                                      || window.webkitCancelAnimationFrame || window.msCancelAnimationFrame;\n    }\n\n    /**\n     * Creates a new Pixi.js WebGL renderer\n     * @method create\n     * @param {object} options\n     * @return {RenderPixi} A new renderer\n     * @deprecated\n     */\n    RenderPixi.create = function(options) {\n        Common.log('RenderPixi.create: Matter.RenderPixi is deprecated (see docs)', 'warn');\n\n        var defaults = {\n            controller: RenderPixi,\n            engine: null,\n            element: null,\n            frameRequestId: null,\n            canvas: null,\n            renderer: null,\n            container: null,\n            spriteContainer: null,\n            pixiOptions: null,\n            options: {\n                width: 800,\n                height: 600,\n                background: '#fafafa',\n                wireframeBackground: '#222',\n                hasBounds: false,\n                enabled: true,\n                wireframes: true,\n                showSleeping: true,\n                showDebug: false,\n                showBroadphase: false,\n                showBounds: false,\n                showVelocity: false,\n                showCollisions: false,\n                showAxes: false,\n                showPositions: false,\n                showAngleIndicator: false,\n                showIds: false,\n                showShadows: false\n            }\n        };\n\n        var render = Common.extend(defaults, options),\n            transparent = !render.options.wireframes && render.options.background === 'transparent';\n\n        // init pixi\n        render.pixiOptions = render.pixiOptions || {\n            view: render.canvas,\n            transparent: transparent,\n            antialias: true,\n            backgroundColor: options.background\n        };\n\n        render.mouse = options.mouse;\n        render.engine = options.engine;\n        render.renderer = render.renderer || new PIXI.WebGLRenderer(render.options.width, render.options.height, render.pixiOptions);\n        render.container = render.container || new PIXI.Container();\n        render.spriteContainer = render.spriteContainer || new PIXI.Container();\n        render.canvas = render.canvas || render.renderer.view;\n        render.bounds = render.bounds || {\n            min: {\n                x: 0,\n                y: 0\n            },\n            max: {\n                x: render.options.width,\n                y: render.options.height\n            }\n        };\n\n        // caches\n        render.textures = {};\n        render.sprites = {};\n        render.primitives = {};\n\n        // use a sprite batch for performance\n        render.container.addChild(render.spriteContainer);\n\n        // insert canvas\n        if (Common.isElement(render.element)) {\n            render.element.appendChild(render.canvas);\n        } else {\n            Common.log('No \"render.element\" passed, \"render.canvas\" was not inserted into document.', 'warn');\n        }\n\n        // prevent menus on canvas\n        render.canvas.oncontextmenu = function() { return false; };\n        render.canvas.onselectstart = function() { return false; };\n\n        return render;\n    };\n\n    /**\n     * Continuously updates the render canvas on the `requestAnimationFrame` event.\n     * @method run\n     * @param {render} render\n     * @deprecated\n     */\n    RenderPixi.run = function(render) {\n        (function loop(time){\n            render.frameRequestId = _requestAnimationFrame(loop);\n            RenderPixi.world(render);\n        })();\n    };\n\n    /**\n     * Ends execution of `Render.run` on the given `render`, by canceling the animation frame request event loop.\n     * @method stop\n     * @param {render} render\n     * @deprecated\n     */\n    RenderPixi.stop = function(render) {\n        _cancelAnimationFrame(render.frameRequestId);\n    };\n\n    /**\n     * Clears the scene graph\n     * @method clear\n     * @param {RenderPixi} render\n     * @deprecated\n     */\n    RenderPixi.clear = function(render) {\n        var container = render.container,\n            spriteContainer = render.spriteContainer;\n\n        // clear stage container\n        while (container.children[0]) {\n            container.removeChild(container.children[0]);\n        }\n\n        // clear sprite batch\n        while (spriteContainer.children[0]) {\n            spriteContainer.removeChild(spriteContainer.children[0]);\n        }\n\n        var bgSprite = render.sprites['bg-0'];\n\n        // clear caches\n        render.textures = {};\n        render.sprites = {};\n        render.primitives = {};\n\n        // set background sprite\n        render.sprites['bg-0'] = bgSprite;\n        if (bgSprite)\n            container.addChildAt(bgSprite, 0);\n\n        // add sprite batch back into container\n        render.container.addChild(render.spriteContainer);\n\n        // reset background state\n        render.currentBackground = null;\n\n        // reset bounds transforms\n        container.scale.set(1, 1);\n        container.position.set(0, 0);\n    };\n\n    /**\n     * Sets the background of the canvas\n     * @method setBackground\n     * @param {RenderPixi} render\n     * @param {string} background\n     * @deprecated\n     */\n    RenderPixi.setBackground = function(render, background) {\n        if (render.currentBackground !== background) {\n            var isColor = background.indexOf && background.indexOf('#') !== -1,\n                bgSprite = render.sprites['bg-0'];\n\n            if (isColor) {\n                // if solid background color\n                var color = Common.colorToNumber(background);\n                render.renderer.backgroundColor = color;\n\n                // remove background sprite if existing\n                if (bgSprite)\n                    render.container.removeChild(bgSprite);\n            } else {\n                // initialise background sprite if needed\n                if (!bgSprite) {\n                    var texture = _getTexture(render, background);\n\n                    bgSprite = render.sprites['bg-0'] = new PIXI.Sprite(texture);\n                    bgSprite.position.x = 0;\n                    bgSprite.position.y = 0;\n                    render.container.addChildAt(bgSprite, 0);\n                }\n            }\n\n            render.currentBackground = background;\n        }\n    };\n\n    /**\n     * Description\n     * @method world\n     * @param {engine} engine\n     * @deprecated\n     */\n    RenderPixi.world = function(render) {\n        var engine = render.engine,\n            world = engine.world,\n            renderer = render.renderer,\n            container = render.container,\n            options = render.options,\n            bodies = Composite.allBodies(world),\n            allConstraints = Composite.allConstraints(world),\n            constraints = [],\n            i;\n\n        if (options.wireframes) {\n            RenderPixi.setBackground(render, options.wireframeBackground);\n        } else {\n            RenderPixi.setBackground(render, options.background);\n        }\n\n        // handle bounds\n        var boundsWidth = render.bounds.max.x - render.bounds.min.x,\n            boundsHeight = render.bounds.max.y - render.bounds.min.y,\n            boundsScaleX = boundsWidth / render.options.width,\n            boundsScaleY = boundsHeight / render.options.height;\n\n        if (options.hasBounds) {\n            // Hide bodies that are not in view\n            for (i = 0; i < bodies.length; i++) {\n                var body = bodies[i];\n                body.render.sprite.visible = Bounds.overlaps(body.bounds, render.bounds);\n            }\n\n            // filter out constraints that are not in view\n            for (i = 0; i < allConstraints.length; i++) {\n                var constraint = allConstraints[i],\n                    bodyA = constraint.bodyA,\n                    bodyB = constraint.bodyB,\n                    pointAWorld = constraint.pointA,\n                    pointBWorld = constraint.pointB;\n\n                if (bodyA) pointAWorld = Vector.add(bodyA.position, constraint.pointA);\n                if (bodyB) pointBWorld = Vector.add(bodyB.position, constraint.pointB);\n\n                if (!pointAWorld || !pointBWorld)\n                    continue;\n\n                if (Bounds.contains(render.bounds, pointAWorld) || Bounds.contains(render.bounds, pointBWorld))\n                    constraints.push(constraint);\n            }\n\n            // transform the view\n            container.scale.set(1 / boundsScaleX, 1 / boundsScaleY);\n            container.position.set(-render.bounds.min.x * (1 / boundsScaleX), -render.bounds.min.y * (1 / boundsScaleY));\n        } else {\n            constraints = allConstraints;\n        }\n\n        for (i = 0; i < bodies.length; i++)\n            RenderPixi.body(render, bodies[i]);\n\n        for (i = 0; i < constraints.length; i++)\n            RenderPixi.constraint(render, constraints[i]);\n\n        renderer.render(container);\n    };\n\n\n    /**\n     * Description\n     * @method constraint\n     * @param {engine} engine\n     * @param {constraint} constraint\n     * @deprecated\n     */\n    RenderPixi.constraint = function(render, constraint) {\n        var engine = render.engine,\n            bodyA = constraint.bodyA,\n            bodyB = constraint.bodyB,\n            pointA = constraint.pointA,\n            pointB = constraint.pointB,\n            container = render.container,\n            constraintRender = constraint.render,\n            primitiveId = 'c-' + constraint.id,\n            primitive = render.primitives[primitiveId];\n\n        // initialise constraint primitive if not existing\n        if (!primitive)\n            primitive = render.primitives[primitiveId] = new PIXI.Graphics();\n\n        // don't render if constraint does not have two end points\n        if (!constraintRender.visible || !constraint.pointA || !constraint.pointB) {\n            primitive.clear();\n            return;\n        }\n\n        // add to scene graph if not already there\n        if (Common.indexOf(container.children, primitive) === -1)\n            container.addChild(primitive);\n\n        // render the constraint on every update, since they can change dynamically\n        primitive.clear();\n        primitive.beginFill(0, 0);\n        primitive.lineStyle(constraintRender.lineWidth, Common.colorToNumber(constraintRender.strokeStyle), 1);\n\n        if (bodyA) {\n            primitive.moveTo(bodyA.position.x + pointA.x, bodyA.position.y + pointA.y);\n        } else {\n            primitive.moveTo(pointA.x, pointA.y);\n        }\n\n        if (bodyB) {\n            primitive.lineTo(bodyB.position.x + pointB.x, bodyB.position.y + pointB.y);\n        } else {\n            primitive.lineTo(pointB.x, pointB.y);\n        }\n\n        primitive.endFill();\n    };\n\n    /**\n     * Description\n     * @method body\n     * @param {engine} engine\n     * @param {body} body\n     * @deprecated\n     */\n    RenderPixi.body = function(render, body) {\n        var engine = render.engine,\n            bodyRender = body.render;\n\n        if (!bodyRender.visible)\n            return;\n\n        if (bodyRender.sprite && bodyRender.sprite.texture) {\n            var spriteId = 'b-' + body.id,\n                sprite = render.sprites[spriteId],\n                spriteContainer = render.spriteContainer;\n\n            // initialise body sprite if not existing\n            if (!sprite)\n                sprite = render.sprites[spriteId] = _createBodySprite(render, body);\n\n            // add to scene graph if not already there\n            if (Common.indexOf(spriteContainer.children, sprite) === -1)\n                spriteContainer.addChild(sprite);\n\n            // update body sprite\n            sprite.position.x = body.position.x;\n            sprite.position.y = body.position.y;\n            sprite.rotation = body.angle;\n            sprite.scale.x = bodyRender.sprite.xScale || 1;\n            sprite.scale.y = bodyRender.sprite.yScale || 1;\n        } else {\n            var primitiveId = 'b-' + body.id,\n                primitive = render.primitives[primitiveId],\n                container = render.container;\n\n            // initialise body primitive if not existing\n            if (!primitive) {\n                primitive = render.primitives[primitiveId] = _createBodyPrimitive(render, body);\n                primitive.initialAngle = body.angle;\n            }\n\n            // add to scene graph if not already there\n            if (Common.indexOf(container.children, primitive) === -1)\n                container.addChild(primitive);\n\n            // update body primitive\n            primitive.position.x = body.position.x;\n            primitive.position.y = body.position.y;\n            primitive.rotation = body.angle - primitive.initialAngle;\n        }\n    };\n\n    /**\n     * Creates a body sprite\n     * @method _createBodySprite\n     * @private\n     * @param {RenderPixi} render\n     * @param {body} body\n     * @return {PIXI.Sprite} sprite\n     * @deprecated\n     */\n    var _createBodySprite = function(render, body) {\n        var bodyRender = body.render,\n            texturePath = bodyRender.sprite.texture,\n            texture = _getTexture(render, texturePath),\n            sprite = new PIXI.Sprite(texture);\n\n        sprite.anchor.x = body.render.sprite.xOffset;\n        sprite.anchor.y = body.render.sprite.yOffset;\n\n        return sprite;\n    };\n\n    /**\n     * Creates a body primitive\n     * @method _createBodyPrimitive\n     * @private\n     * @param {RenderPixi} render\n     * @param {body} body\n     * @return {PIXI.Graphics} graphics\n     * @deprecated\n     */\n    var _createBodyPrimitive = function(render, body) {\n        var bodyRender = body.render,\n            options = render.options,\n            primitive = new PIXI.Graphics(),\n            fillStyle = Common.colorToNumber(bodyRender.fillStyle),\n            strokeStyle = Common.colorToNumber(bodyRender.strokeStyle),\n            strokeStyleIndicator = Common.colorToNumber(bodyRender.strokeStyle),\n            strokeStyleWireframe = Common.colorToNumber('#bbb'),\n            strokeStyleWireframeIndicator = Common.colorToNumber('#CD5C5C'),\n            part;\n\n        primitive.clear();\n\n        // handle compound parts\n        for (var k = body.parts.length > 1 ? 1 : 0; k < body.parts.length; k++) {\n            part = body.parts[k];\n\n            if (!options.wireframes) {\n                primitive.beginFill(fillStyle, 1);\n                primitive.lineStyle(bodyRender.lineWidth, strokeStyle, 1);\n            } else {\n                primitive.beginFill(0, 0);\n                primitive.lineStyle(1, strokeStyleWireframe, 1);\n            }\n\n            primitive.moveTo(part.vertices[0].x - body.position.x, part.vertices[0].y - body.position.y);\n\n            for (var j = 1; j < part.vertices.length; j++) {\n                primitive.lineTo(part.vertices[j].x - body.position.x, part.vertices[j].y - body.position.y);\n            }\n\n            primitive.lineTo(part.vertices[0].x - body.position.x, part.vertices[0].y - body.position.y);\n\n            primitive.endFill();\n\n            // angle indicator\n            if (options.showAngleIndicator || options.showAxes) {\n                primitive.beginFill(0, 0);\n\n                if (options.wireframes) {\n                    primitive.lineStyle(1, strokeStyleWireframeIndicator, 1);\n                } else {\n                    primitive.lineStyle(1, strokeStyleIndicator);\n                }\n\n                primitive.moveTo(part.position.x - body.position.x, part.position.y - body.position.y);\n                primitive.lineTo(((part.vertices[0].x + part.vertices[part.vertices.length-1].x) / 2 - body.position.x),\n                                 ((part.vertices[0].y + part.vertices[part.vertices.length-1].y) / 2 - body.position.y));\n\n                primitive.endFill();\n            }\n        }\n\n        return primitive;\n    };\n\n    /**\n     * Gets the requested texture (a PIXI.Texture) via its path\n     * @method _getTexture\n     * @private\n     * @param {RenderPixi} render\n     * @param {string} imagePath\n     * @return {PIXI.Texture} texture\n     * @deprecated\n     */\n    var _getTexture = function(render, imagePath) {\n        var texture = render.textures[imagePath];\n\n        if (!texture)\n            texture = render.textures[imagePath] = PIXI.Texture.fromImage(imagePath);\n\n        return texture;\n    };\n\n})();\n\n},{\"../body/Composite\":2,\"../core/Common\":14}]},{},[28])(28)\n});\n\n\n\n// WEBPACK FOOTER //\n// ./matter.js","const Matter = require(\"../matter\");\n//low gravity planet\n//pendulums\n//soft bodies\n//explosions\n//rain/avalanche\n\n//Visuals:\n  // background: https://cdn.pixabay.com/photo/2017/02/13/01/34/astronomy-2061576_1280.jpg\n  //\n  // objects: dandelion seeds, plants\n\n\nconst World2 = function(){\n  const Engine = Matter.Engine,\n    Render = Matter.Render,\n    Runner = Matter.Runner,\n    World = Matter.World,\n    Mouse = Matter.Mouse,\n    Events = Matter.Events,\n    Constraint = Matter.Constraint,\n    MouseConstraint = Matter.MouseConstraint,\n    Composites = Matter.Composites,\n    Common = Matter.Common,\n    Bodies = Matter.Bodies;\n\n    const engine = Engine.create(), world = engine.world;\n\n    const render = Render.create({\n      element: document.body,\n      engine: engine,\n      options: {\n        height: window.innerHeight*0.8,\n        width: window.innerWidth*0.8,\n        wireframes: true,\n        showAngleIndicator: false\n      }\n    });\n\n    let background = Bodies.rectangle(400, 300, 1, 1, {\n      isStatic: true,\n      render: {\n        sprite:{\n          texture: \"https://cdn.pixabay.com/photo/2017/02/13/01/34/astronomy-2061576_1280.jpg\",\n          xScale: 1,\n          yScale: 1\n        }\n      },\n      collisionFilter: {\n        group: -1\n      }\n    });\n\n    let ground = Bodies.rectangle(500, 660, 959, 1, {\n      isStatic: true\n    });\n\n\n    const rainOptions = {\n      angle: Math.random()*3,\n      frictionAir: 0.2,\n      render: {\n        sprite: {\n          texture: \"https://cdn.pixabay.com/photo/2012/04/13/00/48/flying-31425_1280.png\",\n          xScale: 0.02,\n          yScale: 0.02\n        }\n      },\n      collisionFilter: {\n        group: -1\n      }\n    };\n\n    const rainOptions2 = {\n      angle: Math.random()*1.5,\n      frictionAir: 0.2,\n      render:{\n        sprite:{\n          texture: \"https://cdn.pixabay.com/photo/2012/04/13/00/48/flying-31425_1280.png\",\n          xScale: 0.03,\n          yScale: 0.03\n        }\n      },\n      collisionFilter: {\n        group: -1\n      }\n    };\n\n    let interval;\n    let raindrop;\n\n    function makeItRain(){\n      interval = setInterval(rain, 4000);\n    }\n\n    function makeItRain2(){\n      interval = setInterval(rain2, 800);\n    }\n\n    function makeItRain3(){\n      interval = setInterval(rain, 3000);\n    }\n\n    function rain(){\n      for (let i = 0; i<3; i++) {\n          raindrop = Bodies.circle(Math.floor(Math.random()*1000), 0, 5, rainOptions);\n          World.add(engine.world, raindrop);\n      }\n    }\n\n    function rain2(){\n      for(let i =0; i<2; i++) {\n        raindrop = Bodies.circle(Math.floor(Math.random()*1000), 0, 5, rainOptions2);\n        World.add(engine.world, raindrop);\n      }\n    }\n\n    makeItRain();\n    makeItRain2();\n    makeItRain3();\n\n    World.add(world, [ground, background]);\n\n    const plantOptions2 = {\n        isStatic: true,\n        friction: 0.05,\n        frictionStatic: 1,\n        render: {\n          sprite:{\n            texture: \"https://cdn.pixabay.com/photo/2017/09/13/19/15/oak-tree-2746617_1280.png\",\n            xScale: 0.3,\n            yScale: 0.3\n          }\n        }\n      };\n    // const softBody1 = Composites.softBody(250, 100, 5, 5, 0, 0, true, 10, softOptions1);\n    // const softBody2 = Composites.softBody(250, 300, 5, 5, 0, 0, true, 18, softOptions2);\n\n    // const plant1 = Bodies.rectangle(300, 300, 100, 100, plantOptions1);\n    const plant2 = Bodies.polygon(700, 300, 5, 20, plantOptions2);\n\n    World.add(world, plant2);\n\n    const pendulum = Bodies.circle(600, 10, 5, {isStatic: true});\n\n\n\n    World.add(world, pendulum);\n    const runner = Runner.create();\n    Runner.run(runner, engine);\n\n    const mouse = Mouse.create(render.canvas),\n      mouseConstraint = MouseConstraint.create(engine, {\n        mouse: mouse,\n        constraint: {\n          stiffness: 0.2,\n          render: {\n            visible: false\n          }\n        }\n      });\n\n\n    render.mouse = mouse;\n\n    world.gravity.y = 0.2;\n\n    Engine.run(engine);\n    Render.run(render);\n};\n\n\nmodule.exports = World2;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/world2.js","const Matter = require(\"../matter\");\n\n//High gravity planet/\n\n\n//background: https://cdn.pixabay.com/photo/2017/05/12/19/50/lunar-landscape-2308000_1280.jpg\n\nconst World3 = function(){\n\nconst Engine = Matter.Engine,\n  Render = Matter.Render,\n  Runner = Matter.Runner,\n  World = Matter.World,\n  Mouse = Matter.Mouse,\n  Events = Matter.Events,\n  Constraint = Matter.Constraint,\n  MouseConstraint = Matter.MouseConstraint,\n  Composites = Matter.Composites,\n  Common = Matter.Common,\n  Bodies = Matter.Bodies;\n\n  const engine = Engine.create(), world = engine.world;\n\n\n\n  const render = Render.create({\n      element: document.body,\n      engine: engine,\n      options: {\n        height: window.innerHeight*0.8,\n        width: window.innerWidth*0.8,\n        wireframes: true,\n        showAngleIndicator: false\n      }\n  });\n\n\n  Render.run(render);\n\n  const runner = Runner.create();\n\n  Runner.run(runner, engine);\n\n  const options = {\n    friction: 0.05,\n    frictionStatic: 1,\n    render: {\n      visible: true\n    }\n  };\n\n  //Bodies.rectangle(x pos, y pos, width, height, options)\n\n  let background = Bodies.rectangle(400, 300, 1, 1, {\n    isStatic: true,\n    render: {\n      sprite:{\n        texture: \"https://cdn.pixabay.com/photo/2017/05/12/19/50/lunar-landscape-2308000_1280.jpg\",\n        xScale: 1,\n        yScale: 1\n      }\n    },\n    collisionFilter: {\n      group: -1\n    }\n  });\n\n  World.add(world, background);\n\n  const floor = Bodies.rectangle(800, 600, 10000, 3, {isStatic: true});\n\n\n  World.add(world, floor);\n\n  //Composites.softBody(xx, yy, columns, rows, columnGap, rowGap, crossBrace, particleRadius, particleOptions, constraintOptions)\n  //Composites.softBody(250, 100, 5, 5, 0, 0, true, 18, particleOptions)\n  const softBody1 = Composites.softBody(250, 100, 5, 5, 0, 0, true, 10, options);\n  const softBody2 = Composites.softBody(250, 300, 5, 5, 0, 0, true, 18, options);\n  const softBody3 = Composites.softBody();\n  const softBody4 = Composites.softBody();\n\n  World.add(world, [softBody1, softBody2, softBody3, softBody4]);\n\n\n  world.gravity.y = 3;\n\n\n\n\n};\nmodule.exports = World3;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/world3.js"],"sourceRoot":""}